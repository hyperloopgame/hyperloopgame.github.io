{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/engine/Game.ts","webpack:///./src/engine/assets/Aseprite.ts","webpack:///./src/engine/assets/Assets.ts","webpack:///./src/engine/assets/BitmapFont.ts","webpack:///./src/engine/assets/Sound.ts","webpack:///./src/engine/color/Color.ts","webpack:///./src/engine/color/RGBAColor.ts","webpack:///./src/engine/color/RGBColor.ts","webpack:///./src/engine/color/colors.ts","webpack:///./src/engine/geom/Direction.ts","webpack:///./src/engine/geom/Rect.ts","webpack:///./src/engine/graphics/AffineTransform.ts","webpack:///./src/engine/graphics/Bounds2.ts","webpack:///./src/engine/graphics/Line2.ts","webpack:///./src/engine/graphics/Polygon2.ts","webpack:///./src/engine/graphics/Size2.ts","webpack:///./src/engine/graphics/Vector2.ts","webpack:///./src/engine/input/ControllerEvent.ts","webpack:///./src/engine/input/ControllerEventType.ts","webpack:///./src/engine/input/ControllerFamily.ts","webpack:///./src/engine/input/ControllerIntent.ts","webpack:///./src/engine/input/ControllerManager.ts","webpack:///./src/engine/input/GamepadInput.ts","webpack:///./src/engine/input/GamepadModel.ts","webpack:///./src/engine/input/GamepadStyle.ts","webpack:///./src/engine/input/Keyboard.ts","webpack:///./src/engine/scene/AsepriteNode.ts","webpack:///./src/engine/scene/Camera.ts","webpack:///./src/engine/scene/FpsCounterNode.ts","webpack:///./src/engine/scene/ImageNode.ts","webpack:///./src/engine/scene/ProgressBarNode.ts","webpack:///./src/engine/scene/RootNode.ts","webpack:///./src/engine/scene/Scene.ts","webpack:///./src/engine/scene/SceneNode.ts","webpack:///./src/engine/scene/Scenes.ts","webpack:///./src/engine/scene/SoundNode.ts","webpack:///./src/engine/scene/TextNode.ts","webpack:///./src/engine/scene/TiledMapLayerNode.ts","webpack:///./src/engine/scene/TiledMapNode.ts","webpack:///./src/engine/scene/animations/Animator.ts","webpack:///./src/engine/scene/camera/CinematicBars.ts","webpack:///./src/engine/scene/camera/FadeToBlack.ts","webpack:///./src/engine/scene/events/ScenePointerDownEvent.ts","webpack:///./src/engine/scene/events/ScenePointerEvent.ts","webpack:///./src/engine/scene/events/ScenePointerMoveEvent.ts","webpack:///./src/engine/tiled/AbstractTiledLayer.ts","webpack:///./src/engine/tiled/TiledChunk.ts","webpack:///./src/engine/tiled/TiledGroupLayer.ts","webpack:///./src/engine/tiled/TiledImageLayer.ts","webpack:///./src/engine/tiled/TiledLayer.ts","webpack:///./src/engine/tiled/TiledMap.ts","webpack:///./src/engine/tiled/TiledObject.ts","webpack:///./src/engine/tiled/TiledObjectGroupLayer.ts","webpack:///./src/engine/tiled/TiledProperties.ts","webpack:///./src/engine/tiled/TiledProperty.ts","webpack:///./src/engine/tiled/TiledTileLayer.ts","webpack:///./src/engine/tiled/TiledTileset.ts","webpack:///./src/engine/util/Signal.ts","webpack:///./src/engine/util/cache.ts","webpack:///./src/engine/util/easings.ts","webpack:///./src/engine/util/env.ts","webpack:///./src/engine/util/graphics.ts","webpack:///./src/engine/util/math.ts","webpack:///./src/engine/util/random.ts","webpack:///./src/engine/util/string.ts","webpack:///./src/engine/util/time.ts","webpack:///./src/main/Dialog.ts","webpack:///./src/main/DoorHandler.ts","webpack:///./src/main/Hyperloop.ts","webpack:///./src/main/constants.ts","webpack:///./src/main/nodes/CameraLimitNode.ts","webpack:///./src/main/nodes/CharacterNode.ts","webpack:///./src/main/nodes/CollisionNode.ts","webpack:///./src/main/nodes/CorpseNode.ts","webpack:///./src/main/nodes/DoorNode.ts","webpack:///./src/main/nodes/EnemyNode.ts","webpack:///./src/main/nodes/FuseboxNode.ts","webpack:///./src/main/nodes/InteractiveNode.ts","webpack:///./src/main/nodes/LightNode.ts","webpack:///./src/main/nodes/MarkNode.ts","webpack:///./src/main/nodes/MonsterNode.ts","webpack:///./src/main/nodes/MuzzleFlashNode.ts","webpack:///./src/main/nodes/NpcNode.ts","webpack:///./src/main/nodes/ParticleNode.ts","webpack:///./src/main/nodes/PlayerNode.ts","webpack:///./src/main/nodes/RatNode.ts","webpack:///./src/main/nodes/SwitchNode.ts","webpack:///./src/main/nodes/TiledSoundNode.ts","webpack:///./src/main/nodes/TrainNode.ts","webpack:///./src/main/nodes/player/AmbientPlayerNode.ts","webpack:///./src/main/nodes/player/AmmoCounterNode.ts","webpack:///./src/main/nodes/player/FlashlightNode.ts","webpack:///./src/main/nodes/player/PlayerArmNode.ts","webpack:///./src/main/nodes/player/PlayerLegsNode.ts","webpack:///./src/main/scenes/GameScene.ts","webpack:///./src/main/scenes/LoadingScene.ts","webpack:///./src/main/scenes/TitleScene.ts","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/pako/index.js","webpack:///./node_modules/pako/lib/deflate.js","webpack:///./node_modules/pako/lib/inflate.js","webpack:///./node_modules/pako/lib/utils/common.js","webpack:///./node_modules/pako/lib/utils/strings.js","webpack:///./node_modules/pako/lib/zlib/adler32.js","webpack:///./node_modules/pako/lib/zlib/constants.js","webpack:///./node_modules/pako/lib/zlib/crc32.js","webpack:///./node_modules/pako/lib/zlib/deflate.js","webpack:///./node_modules/pako/lib/zlib/gzheader.js","webpack:///./node_modules/pako/lib/zlib/inffast.js","webpack:///./node_modules/pako/lib/zlib/inflate.js","webpack:///./node_modules/pako/lib/zlib/inftrees.js","webpack:///./node_modules/pako/lib/zlib/messages.js","webpack:///./node_modules/pako/lib/zlib/trees.js","webpack:///./node_modules/pako/lib/zlib/zstream.js","webpack:///./node_modules/tslib/tslib.js","webpack:///(webpack)/buildin/global.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;AClFA,6FAAyC;AACzC,mFAAoC;AACpC,4HAA8D;AAC9D,+FAAoE;AACpE,6GAAoD;AACpD,iGAA4C;AAC5C,2FAAwC;AACxC,4FAA4D;AAE5D;;;GAGG;AACH,MAAM,MAAM,GAAG,GAAG,CAAC;AAEnB,MAAsB,IAAI;IAgBtB,YAAmC,QAAgB,sBAAU,EAAkB,SAAiB,uBAAW;QAAxE,UAAK,GAAL,KAAK,CAAqB;QAAkB,WAAM,GAAN,MAAM,CAAsB;QAf3F,sBAAiB,GAAG,qCAAiB,CAAC,WAAW,EAAE,CAAC;QACpD,aAAQ,GAAG,IAAI,mBAAQ,EAAE,CAAC;QAC1B,YAAO,GAAG,IAAI,2BAAY,EAAE,CAAC;QAC7B,WAAM,GAAG,IAAI,eAAM,CAAC,IAAI,CAAC,CAAC;QAC1B,WAAM,GAAG,IAAI,eAAM,EAAE,CAAC;QAE/B,oBAAe,GAAW,OAAO,CAAC;QAIxB,qBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,eAAU,GAAkB,IAAI,CAAC;QACjC,mBAAc,GAAW,WAAW,CAAC,GAAG,EAAE,CAAC;QACzC,gBAAW,GAAW,CAAC,CAAC;QAG9B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,uBAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACzD,0FAA0F;QAC1F,0FAA0F;QAC1F,0BAA0B;QAC1B,IAAI,CAAC,GAAG,GAAG,8BAAmB,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;QACtF,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC3B,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC5B,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QACtB,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;QAC1D,KAAK,CAAC,cAAc,GAAG,WAAW,CAAC;QACnC,KAAK,CAAC,cAAc,GAAG,aAAa,CAAC;QACrC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAEjE,2CAA2C;QAC3C,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAO,KAAK,EAAE,EAAE;YAC/C,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;gBACvC,MAAM,cAAc,GAAG,UAAU,IAAI,SAAS,IAAI,MAAM,IAAI,SAAS,CAAC,QAAQ,IAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,KAAK,UAAU,CAAC;gBAChI,0GAA0G;gBAC1G,IAAI,MAAM,CAAC,UAAU,CAAC,4BAA4B,CAAC,CAAC,OAAO,IAAI,QAAQ,CAAC,iBAAiB,IAAI,IAAI,EAAE;oBAC/F,IAAI,cAAc,EAAE;wBAChB,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;qBAC/B;oBACD,MAAM,QAAQ,CAAC,cAAc,EAAE,CAAC;iBACnC;qBAAM;oBACH,IAAI,cAAc,EAAE;wBAChB,MAAM,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;qBAC7C;oBACD,MAAM,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;iBAC3C;aACJ;QACL,CAAC,EAAC,CAAC;IAEP,CAAC;IAED,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IAEO,gBAAgB;QACpB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QAE/B,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAClB,CAAC,EACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,EAAE,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,CAC/E,CAAC;QAEF,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAChC,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;QACnC,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC;IACzC,CAAC;IAEO,QAAQ;QACZ,MAAM,iBAAiB,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;QAC5C,MAAM,EAAE,GAAG,YAAK,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;QAC9E,IAAI,CAAC,WAAW,GAAG,iBAAiB,GAAG,IAAI,CAAC;QAC5C,6GAA6G;QAC7G,kDAAkD;QAClD,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAClC,IAAI,CAAC,cAAc,GAAG,iBAAiB,CAAC;QAExC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QACpC,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;QAClC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC;QACrC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAC9B,GAAG,CAAC,OAAO,EAAE,CAAC;QAEd,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAEO,SAAS;QACb,IAAI,CAAC,UAAU,GAAG,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACnE,CAAC;IAES,MAAM,CAAC,EAAU,EAAE,IAAY;QACrC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IACjC,CAAC;IAES,IAAI,CAAC,GAA6B,EAAE,KAAa,EAAE,MAAc;QACvE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IACzC,CAAC;IAEM,KAAK;QACR,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;YACxC,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;IACL,CAAC;IAEM,IAAI;QACP,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;YACzB,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAC1B;IACL,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;CACJ;AAxHD,oBAwHC;;;;;;;;;;;;;;;;;ACpID,oFAAoC;AACpC,gGAA6C;AAC7C,oFAAmC;AAEnC;;;GAGG;AACH,MAAa,QAAQ;IAUjB,YAAqC,IAAkB,EAAmB,KAAuB;;QAA5D,SAAI,GAAJ,IAAI,CAAc;QAAmB,UAAK,GAAL,KAAK,CAAkB;QAPhF,cAAS,GAAyC,EAAE,CAAC;QACrD,sBAAiB,GAA2B,EAAE,CAAC;QAE/C,gBAAW,GAAG,MAAM,CAAC;QAE9B,cAAS,GAAsB,SAAS,CAAC;QAG7C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,WAAI,CACtD,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAEtF,KAAK,MAAM,QAAQ,UAAI,IAAI,CAAC,IAAI,CAAC,SAAS,mCAAI,EAAE,EAAE;YAC9C,IAAI,QAAQ,GAAG,CAAC,CAAC;YAEjB,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;gBAC/C,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;aACvC;YAED,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;YACzC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;SACpD;IACL,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAO,IAAI,CAAC,MAAc;;YACnC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAkB,CAAC;YAChE,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC/C,MAAM,KAAK,GAAG,MAAM,oBAAS,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;YAEjE,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACrC,CAAC;KAAA;IAED;;;;OAIG;IACH,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACH,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACvC,CAAC;IAEM,YAAY,CAAC,SAA4B;QAC5C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAEO,mBAAmB,CACvB,OAAe,UAAG,EAAE,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EACrF,SAAS,GAAG,IAAI,CAAC,SAAS;QAE1B,IAAI,KAAK,GAAG,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE7C,IAAI,SAAS,KAAK,UAAU,EAAE;YAC1B,QAAQ,GAAG,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC;SACnF;QAED,IAAI,SAAS,GAAG,IAAI,GAAG,QAAQ,CAAC;QAChC,IAAI,UAAU,GAAG,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAErD,OACI,CACI,CAAC,KAAK,GAAG,CAAC,IAAI,UAAU,GAAG,EAAE,CAAC;eAC3B,CAAC,KAAK,GAAG,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,CACtC,IAAI,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,QAAQ,EACpD;YACE,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC;YAC9C,UAAU,IAAI,KAAK,CAAC;YAEpB,IAAI,UAAU,KAAK,EAAE,EAAE;gBACnB,KAAK,GAAG,CAAC,KAAK,CAAC;aAClB;SACJ;QAED,OAAO,UAAU,CAAC;IACtB,CAAC;IAED;;;;;OAKG;IACI,aAAa,CAAC,OAAe,UAAG,EAAE;QACrC,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;;;OAOG;IACI,SAAS,CAAC,GAA6B,EAAE,KAAa,EAAE,CAAS,EAAE,CAAS;QAC/E,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEjC,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,KAAK,CAAC,CAAC;SACtD;QAED,GAAG,CAAC,SAAS,CACT,IAAI,CAAC,KAAK,EACV,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAC5B,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAC5B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAClF,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC,CACrD,CAAC;IACN,CAAC;IAED;;;;;;OAMG;IACI,mBAAmB,CAAC,GAAW,EAAE,OAAe,UAAG,EAAE;QACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACzE,IAAI,QAAQ,IAAI,IAAI,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,oEAAoE,GAAG,qBAAqB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SACpI;QACD,OAAO,IAAI,CAAC,mBAAmB,CAC3B,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,SAAS,CACpF,CAAC;IACN,CAAC;IAED;;;;;OAKG;IACI,yBAAyB,CAAC,GAAW;QACxC,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACzF,IAAI,QAAQ,IAAI,IAAI,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,oEAAoE,GAAG,qBAAqB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SACpI;QAED,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,GAAW;QACrB,OAAO,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC;IACjC,CAAC;IAED;;;;;;;;OAQG;IACI,OAAO,CAAC,GAA6B,EAAE,GAAW,EAAE,CAAS,EAAE,CAAS,EAAE,OAAe,UAAG,EAAE;QACjG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACnE,CAAC;IAED;;;;;OAKG;IACI,qBAAqB,CAAC,GAAW,EAAC,OAAe,UAAG,EAAE;QACzD,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED;;;;;;;OAOG;IACI,IAAI,CAAC,GAA6B,EAAE,CAAS,EAAE,CAAS,EAAE,OAAe,UAAG,EAAE;QACjF,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACI,eAAe,CAAC,OAAe,UAAG,EAAE;QACvC,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED;;;;;OAKG;IACI,QAAQ,CAAC,IAAY;;QACxB,mBAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,0CAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,oCAAK,IAAI,CAAC;IAC7E,CAAC;CACJ;AAnOD,4BAmOC;;;;;;;;;;;;;;;;;AC7OD,4FAAsC;AACtC,kGAA0C;AAC1C,gGAA6C;AAC7C,mFAAgC;AAChC,kGAA6C;AAE7C,MAAM,MAAM,GAAG,IAAI,GAAG,EAAmB,CAAC;AAM1C,MAAM,YAAY;IAGd,YACqB,MAAW,EACX,WAA4B,EAC7B,GAAM,EACL,OAAqB;QAHrB,WAAM,GAAN,MAAM,CAAK;QACX,gBAAW,GAAX,WAAW,CAAiB;QAC7B,QAAG,GAAH,GAAG,CAAG;QACL,YAAO,GAAP,OAAO,CAAc;IACvC,CAAC;IAEG,OAAO,CAAC,KAAQ;QACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACvF,CAAC;CACJ;AAED,MAAM,aAAa,GAAmB,EAAE,CAAC;AAEzC,SAAgB,KAAK,CAAC,GAAsB,EAAE,UAAwB,EAAE;IACpE,OAAO,CAAC,MAAc,EAAE,WAA4B,EAAQ,EAAE;QAC1D,aAAa,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,MAAM,EAAE,WAAW,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC;AACN,CAAC;AAJD,sBAIC;AAED,MAAa,MAAM;IACD,SAAS,CAAC,GAAW;;YAC/B,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAE5B,IAAI,KAAK,IAAI,IAAI,EAAE;gBACf,IAAI,GAAG,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;oBAChC,KAAK,GAAG,MAAM,mBAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;iBAChD;qBAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;oBACvC,KAAK,GAAG,MAAM,mBAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;iBAChD;qBAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;oBACnC,KAAK,GAAG,MAAM,uBAAU,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;iBAClD;qBAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC7B,KAAK,GAAG,MAAM,oBAAS,CAAC,GAAG,CAAC,CAAC;iBAChC;qBAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC7B,KAAK,GAAG,MAAM,aAAK,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;iBAC7C;qBAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC7B,KAAK,GAAG,MAAM,aAAK,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;iBAC7C;qBAAM,IAAI,GAAG,KAAK,cAAc,EAAE;oBAC/B,KAAK,IAAG,MAAM,CAAC,MAAM,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,EAAiB,EAAC;iBACrE;qBAAM;oBACH,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,GAAG,CAAC,CAAC;iBACnD;gBAED,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aAC1B;YAED,OAAO,KAAK,CAAC;QACjB,CAAC;KAAA;IAEY,IAAI,CAAC,UAAoD;;YAClE,MAAM,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC;YACnC,IAAI,MAAM,GAAG,CAAC,CAAC;YAEf,IAAI,UAAU,EAAE;gBACZ,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;aAC7B;YAED,IAAI,OAAO,CAAC;YAEZ,OAAO,CAAC,OAAO,GAAG,aAAa,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,EAAE;gBAC5C,IAAI,OAAO,OAAO,CAAC,GAAG,KAAK,QAAQ,EAAE;oBACjC,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;iBACtD;qBAAM;oBACH,OAAO,CAAC,OAAO,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnF;gBAED,MAAM,EAAE,CAAC;gBAET,IAAI,UAAU,EAAE;oBACZ,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;iBAC7B;aACJ;QACL,CAAC;KAAA;CACJ;AArDD,wBAqDC;;;;;;;;;;;;;;;;;ACxFD,sGAAgD;AAEhD,MAAM,YAAY,GAAG,CAAC,CAAC;AAEvB,MAAa,UAAU;IAYnB,YACI,WAA6B,EAAE,MAA8B,EAAE,OAAe,EAC9E,UAAkB,EAAE,UAAoB,EAAE,qBAAiC,EAAE,UAAU,GAAG,CAAC;QAE3F,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;QACnD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAEzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC;YAC5G,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACjC;IACL,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAO,IAAI,CAAC,MAAc;;YACnC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAc,CAAC;YAC5D,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC/C,MAAM,KAAK,GAAG,MAAM,uBAAS,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;YAC5D,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC/E,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACnE,MAAM,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,qBAAqB,IAAI,EAAE,CAAC,CAAC;YAExG,OAAO,IAAI,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,eAAe,EAAE,MAAM,EAAE,qBAAqB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5H,CAAC;KAAA;IAEO,aAAa,CAAC,QAAkC;QACpD,MAAM,MAAM,GAA2B,EAAE,CAAC;QAC1C,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrC,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACrD,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC;QAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC;QAE1C,iBAAiB;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5B,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACtB,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;SAC7C;QAED,WAAW;QACX,GAAG,CAAC,wBAAwB,GAAG,WAAW,CAAC;QAE3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5B,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,GAAG,CAAC,SAAS,EAAE,CAAC;YAChB,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC;YACjC,GAAG,CAAC,OAAO,EAAE,CAAC;SACjB;QAED,GAAG,CAAC,wBAAwB,GAAG,aAAa,CAAC;QAE7C,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,YAAY,CAAC,IAAY;QAC7B,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAE1C,IAAI,SAAS,IAAI,IAAI,EAAE;YACnB,qEAAqE;YACrE,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SAClC;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAEO,aAAa,CAAC,GAA6B,EAAE,IAAY,EAAE,KAAa;QAC5E,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACxC,MAAM,SAAS,GAAG,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC9E,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAEpF,GAAG,CAAC,SAAS,CACT,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,UAAU,EACtE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,UAAU,CACpD,CAAC;IACN,CAAC;IAEM,QAAQ,CACX,GAA6B,EAAE,IAAY,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,KAAK,GAAG,CAAC,EAC3F,KAAK,GAAG,CAAC;QAET,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEpB,4GAA4G;QAC5G,uEAAuE;QACvE,IAAI,GAAG,CAAC,YAAY,EAAE;YAClB,MAAM,SAAS,GAAG,GAAG,CAAC,YAAY,EAAE,CAAC;YACrC,GAAG,CAAC,SAAS,CACT,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EACrC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CACxC,CAAC;SACL;QAED,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;QACjB,GAAG,CAAC,WAAW,IAAI,KAAK,CAAC;QAEzB,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACzC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;QAEjC,IAAI,aAAa,GAAG,IAAI,CAAC;QAEzB,KAAK,MAAM,WAAW,IAAI,IAAI,EAAE;YAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAC7C,MAAM,cAAc,GAAG,aAAa,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1G,GAAG,CAAC,SAAS,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YACtC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,YAAY,EAAE,CAAC,CAAC,CAAC;YACxD,aAAa,GAAG,WAAW,CAAC;SAC/B;QAED,GAAG,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAEM,WAAW,CAAC,IAAY;QAC3B,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,aAAa,GAAG,IAAI,CAAC;QACzB,KAAK,MAAM,WAAW,IAAI,IAAI,EAAE;YAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAC7C,MAAM,cAAc,GAAG,aAAa,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1G,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,cAAc,GAAG,YAAY,CAAC;YAChE,aAAa,GAAG,WAAW,CAAC;SAC/B;QAED,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,KAAK,IAAI,YAAY,CAAC;SACzB;QAED,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;IAC9C,CAAC;IAEM,mBAAmB,CACtB,GAA6B,EAAE,IAAY,EAAE,IAAY,EAAE,IAAY,EAAE,SAAiB,EAC1F,YAAoB,EAAE,KAAK,GAAG,CAAC;QAE/B,KAAK,IAAI,OAAO,GAAG,IAAI,GAAG,CAAC,EAAE,OAAO,IAAI,IAAI,GAAG,CAAC,EAAE,OAAO,EAAE,EAAE;YACzD,KAAK,IAAI,OAAO,GAAG,IAAI,GAAG,CAAC,EAAE,OAAO,IAAI,IAAI,GAAG,CAAC,EAAE,OAAO,EAAE,EAAE;gBACzD,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,IAAI,EAAE;oBACtC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;iBACnE;aACJ;SACJ;QAED,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;CACJ;AA9KD,gCA8KC;;;;;;;;;;;;;;;;;;ACnLD,oFAAqC;AACrC,6HAA+D;AAE/D,yEAAyE;AACzE,MAAM,YAAY,SAAG,MAAM,CAAC,YAAY,mCAAK,MAAc,CAAC,kBAAkC,CAAC;AAE/F,IAAI,YAAY,GAAwB,IAAI,CAAC;AAC7C,IAAI,cAAc,GAAoB,IAAI,CAAC;AAE3C,SAAgB,eAAe;IAC3B,MAAM,iBAAiB,GAAG,qCAAiB,CAAC,WAAW,EAAE,CAAC;IAE1D,IAAI,YAAY,IAAI,IAAI,EAAE;QACtB,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAElC,sFAAsF;QACtF,IAAI,YAAY,CAAC,KAAK,KAAK,WAAW,EAAE;YACpC,MAAM,MAAM,GAAG,GAAG,EAAE;gBAChB,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,MAAM,GAAG;YAC3B,CAAC,CAAC;YAEF,iBAAiB,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC/C,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;YAEjD,YAAY,CAAC,gBAAgB,CAAC,aAAa,EAAE,GAAG,EAAE;gBAC9C,IAAI,aAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,MAAK,SAAS,EAAE;oBACnC,iBAAiB,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oBAClD,QAAQ,CAAC,mBAAmB,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;iBACvD;YACL,CAAC,CAAC,CAAC;SACN;KACJ;IAED,OAAO,YAAY,CAAC;AACxB,CAAC;AAzBD,0CAyBC;AAED,SAAgB,iBAAiB;IAC7B,IAAI,cAAc,IAAI,IAAI,EAAE;QACxB,MAAM,YAAY,GAAG,eAAe,EAAE,CAAC;QACvC,cAAc,GAAG,YAAY,CAAC,UAAU,EAAE,CAAC;QAC3C,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;KACpD;IAED,OAAO,cAAc,CAAC;AAC1B,CAAC;AARD,8CAQC;AAED,MAAa,KAAK;IAKd,YAAqC,MAAmB;QAAnB,WAAM,GAAN,MAAM,CAAa;QAHhD,WAAM,GAAiC,IAAI,CAAC;QAC5C,SAAI,GAAY,KAAK,CAAC;QAG1B,IAAI,CAAC,QAAQ,GAAG,eAAe,EAAE,CAAC,UAAU,EAAE,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAC/C,CAAC;IAEM,MAAM,CAAO,IAAI,CAAC,GAAW;;YAChC,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YAE3D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACnC,eAAe,EAAE,CAAC,eAAe,CAAC,WAAW,EACzC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,EACpC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CACzB,CAAC;YACN,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;IAC/B,CAAC;IAEM,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,QAAiB;QAChD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;YACnB,MAAM,MAAM,GAAG,eAAe,EAAE,CAAC,kBAAkB,EAAE,CAAC;YACtD,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC5B,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACxB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE9B,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;gBAClC,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;oBACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;iBACtB;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,MAAM,GAAG,CAAC,EAAE;gBACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBACtE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC;aAC3F;YACD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;SAClE;IACL,CAAC;IAEY,IAAI,CAAC,OAAO,GAAG,CAAC;;YACzB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,IAAI,OAAO,GAAG,CAAC,EAAE;oBACb,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC;oBAC3D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;oBACxD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B;qBAAM;oBACH,IAAI;wBACA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;qBACtB;oBAAC,OAAO,CAAC,EAAE;wBACR,4FAA4F;qBAC/F;iBACJ;gBAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACtB;QACL,CAAC;KAAA;IAEM,OAAO,CAAC,IAAa;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;SAC3B;IACL,CAAC;IAEM,SAAS,CAAC,MAAc;QAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,YAAK,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;IACpC,CAAC;CACJ;AAjFD,sBAiFC;;;;;;;;;;;;;;;;AC/HD,qFAAuC;AACvC,8FAAwC;AACxC,2FAAsC;AA2CtC,IAAiB,KAAK,CAiCrB;AAjCD,WAAiB,KAAK;IAClB;;;;;;OAMG;IACH,SAAgB,UAAU,CAAC,CAAS;QAChC,MAAM,KAAK,GAAG,oBAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;QAClD,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,KAAK,CAAC;SAChB;QAED,KAAK,MAAM,cAAc,IAAI,CAAE,mBAAQ,EAAE,qBAAS,CAAE,EAAE;YAClD,IAAI;gBACA,OAAO,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aACvC;YAAC,OAAO,CAAC,EAAE;gBACR,kDAAkD;aACrD;SACJ;QACD,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC;IAde,gBAAU,aAczB;IAED;;;;;OAKG;IACH,SAAgB,QAAQ,CAAC,IAAY;QACjC,OAAO,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAFe,cAAQ,WAEvB;AACL,CAAC,EAjCgB,KAAK,GAAL,aAAK,KAAL,aAAK,QAiCrB;;;;;;;;;;;;;;;;AC9ED,iFAA6C;AAC7C,oFAAqC;AACrC,0FAA8C;AAG9C,2FAAsC;AAEtC,6DAA6D;AAC7D,MAAM,mBAAmB,GAAG,gEAAgE,CAAC;AAE7F,4DAA4D;AAC5D,MAAM,kBAAkB,GAAG,2MAA2M,CAAC;AAEvO;;GAEG;AACH,MAAa,SAAS;IAalB;;;;;;;OAOG;IACH,YAAmB,GAAW,EAAE,KAAa,EAAE,IAAY,EAAE,KAAK,GAAG,CAAC;QAClE,IAAI,CAAC,GAAG,GAAG,YAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,YAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,YAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,YAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,QAAQ,CAAC,IAAY;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,UAAU,CAAC,CAAS;QAC9B,IAAI,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,IAAI,SAAS,CAChB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAC3D,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAC3D,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAC3D,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACvB,CAAC;SACL;QACD,KAAK,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,IAAI,SAAS,CAChB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,EAC5B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,EAC5B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,EAC5B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAC/B,CAAC;SACL;QACD,MAAM,IAAI,KAAK,CAAC,6BAA6B,GAAG,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,kBAAkB;IACX,MAAM;QACT,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED,kBAAkB;IACX,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED;;;;;OAKG;IACI,KAAK,CAAC,qBAAqB,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,qBAAY,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,qBAAqB,EAAE,CAAC,CAAC;QACpE,MAAM,KAAK,GAAG,qBAAY,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,EAAE,qBAAqB,EAAE,CAAC,CAAC;QACxE,MAAM,IAAI,GAAG,qBAAY,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,EAAE,qBAAqB,EAAE,CAAC,CAAC;QACtE,MAAM,KAAK,GAAG,qBAAY,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,qBAAqB,EAAE,CAAC,CAAC;QAClE,OAAO,QAAQ,GAAG,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,GAAG,CAAC;IACvD,CAAC;IAED,kBAAkB;IACX,KAAK;QACR,OAAO,IAAI,mBAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IACzD,CAAC;IAED,kBAAkB;IACX,MAAM;QACT,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACI,MAAM,CAAC,UAAU,CAAC,KAAa,EAAE,YAAY,GAAG,oBAAc,EAAE;QACnE,IAAI,YAAY,EAAE;YACd,OAAO,IAAI,SAAS,CAChB,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,EACnB,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAC1B,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAC3B,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAC9B,CAAC;SACL;aAAM;YACH,OAAO,IAAI,SAAS,CAChB,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAC3B,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAC3B,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAC1B,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CACtB,CAAC;SACL;IACL,CAAC;IAED;;;;;;OAMG;IACI,QAAQ,CAAC,YAAY,GAAG,oBAAc,EAAE;QAC3C,IAAI,YAAY,EAAE;YACd,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;kBAC1E,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;SAC3C;aAAM;YACH,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;kBAC5E,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;SACzC;IACL,CAAC;IAED;;;;;;OAMG;IACI,MAAM,CAAC,SAAS,CAAC,IAAuB,EAAE,MAAM,GAAG,CAAC;QACvD,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,EACnF,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACI,OAAO,CAAsC,OAAW,IAAI,UAAU,CAAC,CAAC,CAAkB,EAAE,MAAM,GAAG,CAAC;QACzG,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,MAAM;QACT,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACI,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,kBAAkB;IACX,MAAM,CAAC,MAAc;QACxB,OAAO,IAAI,SAAS,CAChB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,EACvB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,EACzB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,EACxB,IAAI,CAAC,KAAK,CACb,CAAC;IACN,CAAC;CACJ;AAxND,8BAwNC;;;;;;;;;;;;;;;;ACxOD,iFAA6C;AAE7C,oFAAqC;AACrC,0FAAqD;AAGrD,8FAAwC;AAExC,4DAA4D;AAC5D,MAAM,kBAAkB,GAAG,mDAAmD,CAAC;AAE/E,2DAA2D;AAC3D,MAAM,iBAAiB,GAAG,6JAA6J,CAAC;AAExL;;GAEG;AACH,MAAa,QAAQ;IAUjB;;;;;;OAMG;IACH,YAAmB,GAAW,EAAE,KAAa,EAAE,IAAY;QACvD,IAAI,CAAC,GAAG,GAAG,YAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,YAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,YAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,QAAQ,CAAC,IAAY;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,UAAU,CAAC,CAAS;QAC9B,IAAI,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,IAAI,QAAQ,CACf,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAC3D,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAC3D,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAC9D,CAAC;SACL;QACD,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,IAAI,QAAQ,CACf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,EAC5B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,EAC5B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAC/B,CAAC;SACL;QACD,MAAM,IAAI,KAAK,CAAC,4BAA4B,GAAG,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,kBAAkB;IACX,MAAM;QACT,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED,kBAAkB;IACX,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED;;;;OAIG;IACI,MAAM;QACT,OAAO,IAAI,cAAK,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,cAAK,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,cAAK,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;IACnG,CAAC;IAED;;;;;OAKG;IACI,KAAK,CAAC,qBAAqB,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,qBAAY,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,qBAAqB,EAAE,CAAC,CAAC;QACpE,MAAM,KAAK,GAAG,qBAAY,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,EAAE,qBAAqB,EAAE,CAAC,CAAC;QACxE,MAAM,IAAI,GAAG,qBAAY,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,EAAE,qBAAqB,EAAE,CAAC,CAAC;QACtE,OAAO,OAAO,GAAG,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC;IAC7C,CAAC;IAED,kBAAkB;IACX,KAAK;QACR,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAkB;IACX,MAAM;QACT,OAAO,IAAI,qBAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC/D,CAAC;IAED;;;;;;;OAOG;IACI,MAAM,CAAC,UAAU,CAAC,KAAa,EAAE,YAAY,GAAG,oBAAc,EAAE;QACnE,IAAI,YAAY,EAAE;YACd,OAAO,IAAI,QAAQ,CACf,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,EACnB,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAC1B,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAC9B,CAAC;SACL;aAAM;YACH,OAAO,IAAI,QAAQ,CACf,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAC3B,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAC3B,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAC7B,CAAC;SACL;IACL,CAAC;IAED;;;;;;OAMG;IACI,QAAQ,CAAC,YAAY,GAAG,oBAAc,EAAE;QAC3C,IAAI,YAAY,EAAE;YACd,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;SACzG;aAAM;YACH,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;SACzG;IACL,CAAC;IAED;;;;;;OAMG;IACI,MAAM,CAAC,SAAS,CAAC,IAAuB,EAAE,MAAM,GAAG,CAAC;QACvD,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAC5F,CAAC;IAED;;;;;;;OAOG;IACI,OAAO,CAAsC,OAAW,IAAI,UAAU,CAAC,CAAC,CAAkB,EAAE,MAAM,GAAG,CAAC;QACzG,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,MAAM;QACT,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACI,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,kBAAkB;IACX,MAAM,CAAC,MAAc;QACxB,OAAO,IAAI,QAAQ,CACf,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,EACvB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,EACzB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAC3B,CAAC;IACN,CAAC;CACJ;AAzMD,4BAyMC;;;;;;;;;;;;;;;;ACzND,2FAAsC;AAEtC;;GAEG;AACU,mBAAW,GAA0B;IAC9C,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,cAAc,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACrD,MAAM,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7C,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,OAAO,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC9C,OAAO,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC9C,QAAQ,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC/C,OAAO,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC9C,gBAAgB,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACvD,MAAM,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7C,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,OAAO,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC9C,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,OAAO,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC9C,gBAAgB,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACvD,UAAU,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACjD,SAAS,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAChD,MAAM,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7C,UAAU,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACjD,UAAU,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACjD,eAAe,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACtD,UAAU,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACjD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,UAAU,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACjD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,aAAa,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACpD,gBAAgB,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACvD,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,SAAS,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAChD,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,cAAc,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACrD,eAAe,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACtD,eAAe,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACtD,eAAe,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACtD,eAAe,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACtD,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,UAAU,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACjD,aAAa,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACpD,SAAS,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAChD,SAAS,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAChD,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,aAAa,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACpD,aAAa,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACpD,SAAS,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAChD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,MAAM,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7C,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,MAAM,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7C,OAAO,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC9C,aAAa,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACpD,MAAM,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7C,UAAU,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACjD,SAAS,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAChD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,QAAQ,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC/C,OAAO,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC9C,OAAO,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC9C,UAAU,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACjD,eAAe,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACtD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,cAAc,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACrD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,sBAAsB,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7D,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,aAAa,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACpD,eAAe,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACtD,cAAc,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACrD,gBAAgB,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACvD,gBAAgB,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACvD,gBAAgB,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACvD,aAAa,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACpD,MAAM,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7C,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,OAAO,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC9C,SAAS,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAChD,QAAQ,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC/C,kBAAkB,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACzD,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,cAAc,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACrD,cAAc,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACrD,gBAAgB,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACvD,iBAAiB,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACxD,mBAAmB,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC1D,iBAAiB,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACxD,iBAAiB,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACxD,cAAc,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACrD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,UAAU,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACjD,aAAa,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACpD,MAAM,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7C,SAAS,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAChD,OAAO,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC9C,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,QAAQ,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC/C,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,QAAQ,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC/C,eAAe,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACtD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,eAAe,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACtD,eAAe,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACtD,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,MAAM,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7C,MAAM,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7C,MAAM,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7C,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,QAAQ,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC/C,KAAK,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC5C,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,aAAa,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACpD,QAAQ,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC/C,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,UAAU,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACjD,UAAU,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACjD,QAAQ,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC/C,QAAQ,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC/C,SAAS,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAChD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,MAAM,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7C,aAAa,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACpD,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,KAAK,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC5C,MAAM,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7C,SAAS,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAChD,QAAQ,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC/C,WAAW,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAClD,QAAQ,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC/C,OAAO,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC9C,OAAO,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC9C,YAAY,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IACnD,QAAQ,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;IAC/C,aAAa,EAAE,mBAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;CACvD,CAAC;;;;;;;;;;;;;;;;AC1JF,IAAY,SAUX;AAVD,WAAY,SAAS;IACjB,6CAAU;IACV,yCAAQ;IACR,2CAAS;IACT,uCAAO;IACP,6CAAU;IACV,iDAAqB;IACrB,uDAA2B;IAC3B,mDAAuB;IACvB,0DAA6B;AACjC,CAAC,EAVW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAUpB;AAED,WAAiB,SAAS;IACtB,SAAgB,MAAM,CAAC,SAAoB;QACvC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAFe,gBAAM,SAErB;IAED,SAAgB,OAAO,CAAC,SAAoB;QACxC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAFe,iBAAO,UAEtB;IAED,SAAgB,KAAK,CAAC,SAAoB;QACtC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC;IAFe,eAAK,QAEpB;IAED,SAAgB,QAAQ,CAAC,SAAoB;QACzC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;IAFe,kBAAQ,WAEvB;IAED,SAAgB,YAAY,CAAC,SAAoB;QAC7C,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC;IACnD,CAAC;IAFe,sBAAY,eAE3B;IAED,SAAgB,UAAU,CAAC,SAAoB;QAC3C,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC;IACnD,CAAC;IAFe,oBAAU,aAEzB;IAED,SAAgB,MAAM,CAAC,SAAoB;QACvC,OAAO,SAAS,KAAK,SAAS,CAAC,IAAI;eAC5B,SAAS,KAAK,SAAS,CAAC,KAAK;eAC7B,SAAS,KAAK,SAAS,CAAC,GAAG;eAC3B,SAAS,KAAK,SAAS,CAAC,MAAM,CAAC;IAC1C,CAAC;IALe,gBAAM,SAKrB;IAED,SAAgB,QAAQ,CAAC,SAAoB;QACzC,OAAO,SAAS,KAAK,SAAS,CAAC,QAAQ;eAChC,SAAS,KAAK,SAAS,CAAC,SAAS;eACjC,SAAS,KAAK,SAAS,CAAC,WAAW;eACnC,SAAS,KAAK,SAAS,CAAC,YAAY,CAAC;IAChD,CAAC;IALe,kBAAQ,WAKvB;IAED,SAAgB,IAAI,CAAC,SAAoB;QACrC,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IAFe,cAAI,OAEnB;IAED,SAAgB,IAAI,CAAC,SAAoB;QACrC,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IAFe,cAAI,OAEnB;AACL,CAAC,EA9CgB,SAAS,GAAT,iBAAS,KAAT,iBAAS,QA8CzB;;;;;;;;;;;;;;;;AC1DD,MAAa,IAAI;IACb,YACY,IAAY,EACZ,GAAW,EACX,KAAa,EACb,MAAc;QAHd,SAAI,GAAJ,IAAI,CAAQ;QACZ,QAAG,GAAH,GAAG,CAAQ;QACX,UAAK,GAAL,KAAK,CAAQ;QACb,WAAM,GAAN,MAAM,CAAQ;IACvB,CAAC;IAEG,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAEM,MAAM;QACT,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;IAClC,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;IAClC,CAAC;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACtC,CAAC;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACtC,CAAC;CACJ;AAvCD,oBAuCC;;;;;;;;;;;;;;;;ACoED;;;GAGG;AACH,MAAa,eAAe;IAkBxB,YACW,MAAc,CAAC,EACf,MAAc,CAAC,EACf,MAAc,CAAC,EACf,MAAc,CAAC,EACf,KAAa,CAAC,EACd,KAAa,CAAC;QALd,QAAG,GAAH,GAAG,CAAY;QACf,QAAG,GAAH,GAAG,CAAY;QACf,QAAG,GAAH,GAAG,CAAY;QACf,QAAG,GAAH,GAAG,CAAY;QACf,OAAE,GAAF,EAAE,CAAY;QACd,OAAE,GAAF,EAAE,CAAY;IACtB,CAAC;IAEJ;;;;;OAKG;IACI,MAAM,CAAC,aAAa,CAAC,SAAoB;QAC5C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;SAChE;QACD,OAAO,IAAI,eAAe,CACtB,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EACxB,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EACxB,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAC3B,CAAC;IACN,CAAC;IAED,kBAAkB;IACX,KAAK;QACR,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IACzF,CAAC;IAED,kBAAkB;IACX,WAAW;QACd,OAAO,IAAI,SAAS,CAAC,CAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAE,CAAC,CAAC;IACvF,CAAC;IAED,kBAAkB;IACX,QAAQ;QACX,OAAO,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAI,CAAC;IAC5F,CAAC;IAED;;;;;;;;;OASG;IACI,aAAa,CAAC,GAAW,EAAE,GAAW,EAAE,GAAW,EAAE,GAAW,EAAE,EAAU,EAAE,EAAU;QAC3F,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,SAAS,CAAC,MAA+B;QAC5C,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAkB;IACX,UAAU;QACb,OAAO,IAAI,CAAC,GAAG,KAAK,CAAC;eACd,IAAI,CAAC,GAAG,KAAK,CAAC;eACd,IAAI,CAAC,GAAG,KAAK,CAAC;eACd,IAAI,CAAC,GAAG,KAAK,CAAC;eACd,IAAI,CAAC,EAAE,KAAK,CAAC;eACb,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;IACzB,CAAC;IAED;;OAEG;IACI,KAAK;QACR,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,GAAG,CAAC,KAA8B;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;QACnC,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACvC,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACvC,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,EAAE,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC;QACrC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACjC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACjC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACjC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACjC,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACtC,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACtC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,GAAG,CAAC,KAA8B;QACrC,sBAAsB;QACtB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;QACnC,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACvC,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACvC,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,EAAE,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC;QAErC,qBAAqB;QACrB,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAEhC,gBAAgB;QAChB,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QACpB,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;QACrB,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;QACrB,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QACpB,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACxC,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QAExC,kBAAkB;QAClB,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACjC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACjC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACjC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACjC,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACtC,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAEtC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAkB;IACX,cAAc;QACjB,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IACrD,CAAC;IAED;;OAEG;IACI,MAAM;QACT,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;QAEnC,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAEhC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QAEtC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,SAAS,CAAC,EAAU,EAAE,EAAU;QACnC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;QACzC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;QACzC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,UAAU,CAAC,CAAS;QACvB,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QACxB,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAkB;IACX,eAAe;QAClB,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED;;;;OAIG;IACI,UAAU,CAAC,CAAS;QACvB,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QACxB,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAkB;IACX,eAAe;QAClB,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED;;;;;OAKG;IACI,cAAc,CAAC,EAAU,EAAE,EAAU;QACxC,IAAI,CAAC,GAAG,GAAI,CAAC,CAAC;QAAC,IAAI,CAAC,GAAG,GAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,GAAG,GAAI,CAAC,CAAC;QAAC,IAAI,CAAC,GAAG,GAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,iBAAiB,CAAC,EAAU,EAAE,EAAU;QAClD,OAAO,IAAI,eAAe,EAAE,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;IAED;;;;;OAKG;IACI,KAAK,CAAC,EAAU,EAAE,EAAE,GAAG,EAAE;QAC5B,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;QACf,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;QACf,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;QACf,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;QACf,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,QAAQ,CAAC,EAAU,EAAE,EAAE,GAAG,EAAE;QAC/B,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QAAC,IAAI,CAAC,GAAG,GAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,GAAG,GAAI,CAAC,CAAC;QAAC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,EAAE,GAAI,CAAC,CAAC;QAAC,IAAI,CAAC,EAAE,GAAI,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,CAAS;QACnB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;QACd,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;QACd,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAkB;IACX,SAAS;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1C,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,CAAS;QACnB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;QACd,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;QACd,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAkB;IACX,SAAS;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,WAAW,CAAC,EAAU,EAAE,EAAW;QAC7C,OAAO,IAAI,eAAe,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,KAAa;QACvB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAC7B,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAC7B,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAC7B,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAC7B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAkB;IACX,WAAW;QACd,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;YACxB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YACnD,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;SACjC;aAAM,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;YAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YACnD,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACjD;aAAM;YACH,OAAO,CAAC,CAAC;SACZ;IACL,CAAC;IAED;;;;OAIG;IACI,WAAW,CAAC,KAAa;QAC5B,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,GAAG,GAAI,CAAC,CAAC;QAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAI,CAAC,CAAC;QAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,cAAc,CAAC,KAAa;QACtC,OAAO,IAAI,eAAe,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,kBAAkB;IACX,eAAe,CAAC,GAA6B;QAChD,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QACxE,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAkB;IACX,kBAAkB,CAAC,GAA6B;QACnD,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3E,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAhZD,0CAgZC;;;;;;;;;;;;;;;;AC5fD,oFAAoC;AAEpC,MAAa,OAAO;IAApB;QACW,SAAI,GAAW,QAAQ,CAAC;QACxB,SAAI,GAAW,CAAC,QAAQ,CAAC;QACzB,SAAI,GAAW,QAAQ,CAAC;QACxB,SAAI,GAAW,CAAC,QAAQ,CAAC;IAoFpC,CAAC;IAlFG,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACtC,CAAC;IAED,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACvC,CAAC;IAED,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACjC,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACjC,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC;QAClC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC1D,CAAC;IAEM,SAAS,CAAC,MAA2B;QACxC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,OAAO,CAAC,IAAW;QACtB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1D,CAAC;IAEM,UAAU,CAAC,OAAiB;QAC/B,KAAK,MAAM,MAAM,IAAI,OAAO,CAAC,QAAQ,EAAE;YACnC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,MAAM;QACT,OAAO,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IACxF,CAAC;IAED;;;;;OAKG;IACI,YAAY,CAAC,KAAc;QAC9B,OAAO,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC;IACpH,CAAC;IAED;;;;;;OAMG;IACI,aAAa,CAAC,CAAS,EAAE,CAAS;QACrC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC;IAChF,CAAC;IAED;;;;;OAKG;IACI,IAAI,CAAC,GAA6B;QACrC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;YACjB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SAChF;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAxFD,0BAwFC;;;;;;;;;;;;;;;;AC7FD,2FAAqD;AAErD;;GAEG;AACH,MAAa,KAAK;IAId;;;;;OAKG;IACH,YACW,KAAc,EACd,GAAY;QADZ,UAAK,GAAL,KAAK,CAAS;QACd,QAAG,GAAH,GAAG,CAAS;QAXf,WAAM,GAAmB,IAAI,CAAC;QAC9B,WAAM,GAAmB,IAAI,CAAC;IAWnC,CAAC;IAEJ;;;;;OAKG;IACI,SAAS;;QACZ,OAAO,OAAC,IAAI,CAAC,MAAM,mCAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,iBAAO,EAAE,CAAC,CAAC,CAAC,aAAa,CAC/D,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EACzB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAC5B,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAED;;;;OAIG;IACI,SAAS;;QACZ,OAAO,OAAC,IAAI,CAAC,MAAM,mCAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,iBAAO,EAAE,CAAC,CAAC,CAAC,aAAa,CAC/D,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAC/B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAClC,CAAC;IACN,CAAC;IAED;;;;;OAKG;IACI,IAAI,CAAC,GAA6B;QACrC,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;QAClC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACI,UAAU,CAAC,GAA6B,EAAE,GAAG,GAAG,EAAE;QACrD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/B,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QACjE,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAnED,sBAmEC;;;;;;;;;;;;;;;;ACxED,qFAAgC;AAChC,2FAAqD;AAErD,2FAAoC;AAGpC;;GAEG;AACH,MAAa,QAAQ;IAMjB;;;;OAIG;IACH,YAAmB,GAAG,QAAmB;;QATzB,UAAK,GAAY,EAAE,CAAC;QACnB,YAAO,GAAc,EAAE,CAAC;QACxB,WAAM,GAAG,IAAI,iBAAO,EAAE,CAAC;QAQpC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YACjD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,mCAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3E;IACL,CAAC;IAED;;;;OAIG;IACI,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,CAAC;IAED;;;;;OAKG;IACI,SAAS,CAAC,MAAe,EAAE,QAAgB,IAAI,CAAC,QAAQ,CAAC,MAAM;QAClE,MAAM,IAAI,GAAG,IAAI,aAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;QACvC,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAClC,IAAI,YAAY,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC;YAC5B,YAAY,CAAC,GAAG,GAAG,MAAM,CAAC;SAC7B;aAAM;YACH,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC/B;QACD,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,OAAO,CAAC,IAAU;QACrB,IAAI,CAAC,SAAS,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAC9D,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,YAAY,CAAC,KAAa;;QAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,IAAI,IAAI,IAAI,EAAE;YACd,MAAM,YAAY,SAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,mCAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACjE,MAAM,QAAQ,SAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,mCAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,YAAY,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC5C,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;gBAC1B,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;aAC/B;YACD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACvB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACI,KAAK;QACR,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACvB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,eAAe,CAAC,KAAa;;QAChC,MAAM,MAAM,eAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,0CAAE,KAAK,qCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,iBAAO,EAAE,CAAC,CAAC;QACrF,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,IAAI,IAAI,IAAI,EAAE;YACd,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;YAC7B,MAAM,YAAY,SAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,mCAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACjE,IAAI,YAAY,IAAI,IAAI,EAAE;gBACtB,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,CAAC;aACxC;SACJ;QACD,OAAO,MAAM,CAAC,SAAS,EAAE,CAAC;IAC9B,CAAC;IAED;;;;;OAKG;IACI,IAAI,CAAC,GAA6B;QACrC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC1B,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;gBACjD,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACzB,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;aAC9B;SACJ;QACD,GAAG,CAAC,SAAS,EAAE,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACI,WAAW,CAAC,GAA6B,EAAE,GAAY;QAC1D,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC3B,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SAC7B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACI,iBAAiB,CAAC,GAA6B,EAAE,MAAc,EAAE;QACpE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACpC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC3C,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,SAAS,CAAC,CAA0B;QACvC,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;YAChC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACjB;QACD,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,SAAS;QACZ,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAChC;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;;;OAKG;IACI,YAAY,CAAC,KAAe;QAC/B,2GAA2G;QAC3G,WAAW;QACX,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED;;;;;;OAMG;IACI,aAAa,CAAC,CAAS,EAAE,CAAS;QACrC,2GAA2G;QAC3G,WAAW;QACX,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChD,CAAC;CACJ;AAxND,4BAwNC;;;;;;;;;;;;;;;;AChLD;;GAEG;AACH,MAAa,KAAK;IAcd,YACW,QAAgB,CAAC,EACjB,SAAiB,CAAC;QADlB,UAAK,GAAL,KAAK,CAAY;QACjB,WAAM,GAAN,MAAM,CAAY;IAC1B,CAAC;IAEJ,kBAAkB;IACX,QAAQ;QACX,OAAO,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACI,aAAa,CAAC,KAAa,EAAE,MAAc;QAC9C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,OAAO,CAAC,IAAuB;QAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAkB;IACX,OAAO;QACV,OAAO,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,kBAAkB;IACX,KAAK;QACR,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9C,CAAC;IAED,kBAAkB;IACX,OAAO;QACV,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IACpC,CAAC;IAED,kBAAkB;IACX,cAAc;QACjB,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IACpC,CAAC;CACJ;AAlED,sBAkEC;;;;;;;;;;;;;;;;ACtCD;;GAEG;AACH,MAAa,OAAO;IAchB,YACW,IAAY,CAAC,EACb,IAAY,CAAC;QADb,MAAC,GAAD,CAAC,CAAY;QACb,MAAC,GAAD,CAAC,CAAY;IACrB,CAAC;IAEJ,kBAAkB;IACX,QAAQ;QACX,OAAO,KAAK,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC;IACtC,CAAC;IAED;;;;;OAKG;IACI,aAAa,CAAC,CAAS,EAAE,CAAS;QACrC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,SAAS,CAAC,MAA2B;QACxC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAClB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAkB;IACX,KAAK;QACR,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,kBAAkB;IACX,eAAe;QAClB,OAAO,aAAI,CAAC,CAAC,EAAI,CAAC,IAAG,aAAI,CAAC,CAAC,EAAI,CAAC,EAAC;IACrC,CAAC;IAED,kBAAkB;IACX,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,kBAAkB;IACX,iBAAiB,CAAC,CAAsB;QAC3C,OAAO,UAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAI,CAAC,IAAG,UAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAI,CAAC,EAAC;IACrD,CAAC;IAED,kBAAkB;IACX,WAAW,CAAC,CAAsB;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,kBAAkB;IACX,GAAG,CAAC,CAAsB;QAC7B,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;IAED;;OAEG;IACI,MAAM;QACT,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACjB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACI,KAAK;QACR,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,SAAS,CAAC,CAAS,EAAE,CAAS;QACjC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QACZ,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,KAAK,CAAC,EAAU,EAAE,KAAa,EAAE;QACpC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QACb,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QACb,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,GAAG,CAAC,OAA4B;QACnC,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC;QACpB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,GAAG,CAAC,UAA+B;QACtC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,GAAG,CAAC,GAA4B;QACnC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QACjB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;QAC5C,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,GAAG,CAAC,GAA4B;QACnC,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;QACnC,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;QACnC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QACjB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QACjB,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAChC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QACpB,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;QACrB,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;QACrB,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QACpB,MAAM,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;QACjC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACzD,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACI,SAAS;QACZ,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC7B,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC;QACd,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC;QACd,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,QAAQ,CAAC,MAA4B;QACxC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,MAAM,EAAE;YACR,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;SAC3C;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;AArMD,0BAqMC;;;;;;;;;;;;;;;;ACvRD,mHAAsD;AACtD,mHAAsD;AAGtD,MAAM,sBAAsB,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAC1D,MAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACvC,MAAM,eAAe,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AAC5C,MAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAEtC,MAAa,eAAgB,SAAQ,MAAM;IAMvC,YACI,gBAAkC,EAAE,SAA8B,EAClE,OAA2B,EAAE,SAAkB,KAAK;QAEpD,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,sBAAsB,CAAC,GAAG,gBAAgB,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;QAClE,IAAI,CAAC,eAAe,CAAC,GAAG,SAAS,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;IAChC,CAAC;IAED,IAAI,gBAAgB;QAChB,OAAO,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACxC,CAAC;IAED,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC;IACjC,CAAC;IAED,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC;IAC9B,CAAC;IAED,IAAI,UAAU;QACV,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,SAAS,CAAC,KAAK,mCAAgB,CAAC,SAAS,CAAC;IAC7F,CAAC;IAED,IAAI,WAAW;QACX,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,UAAU,CAAC,KAAK,mCAAgB,CAAC,UAAU,CAAC;IAC/F,CAAC;IAED,IAAI,QAAQ;QACR,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,OAAO,CAAC,KAAK,mCAAgB,CAAC,OAAO,CAAC;IACzF,CAAC;IAED,IAAI,UAAU;QACV,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,SAAS,CAAC,KAAK,mCAAgB,CAAC,SAAS,CAAC;IAC7F,CAAC;IAED,IAAI,gBAAgB;QAChB,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,gBAAgB,CAAC,KAAK,mCAAgB,CAAC,gBAAgB,CAAC;IAC3G,CAAC;IAED,IAAI,iBAAiB;QACjB,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,iBAAiB,CAAC,KAAK,mCAAgB,CAAC,iBAAiB,CAAC;IAC7G,CAAC;IAED,IAAI,YAAY;QACZ,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,WAAW,CAAC,KAAK,mCAAgB,CAAC,WAAW,CAAC;IACjG,CAAC;IAED,IAAI,YAAY;QACZ,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,WAAW,CAAC,KAAK,mCAAgB,CAAC,WAAW,CAAC;IACjG,CAAC;IAED,IAAI,iBAAiB;QACjB,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,iBAAiB,CAAC,KAAK,mCAAgB,CAAC,iBAAiB,CAAC;IAC7G,CAAC;IAED,IAAI,gBAAgB;QAChB,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,eAAe,CAAC,KAAK,mCAAgB,CAAC,eAAe,CAAC;IACzG,CAAC;IAED,IAAI,cAAc;QACd,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,aAAa,CAAC,KAAK,mCAAgB,CAAC,aAAa,CAAC;IACrG,CAAC;IAED,IAAI,WAAW;QACX,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,UAAU,CAAC,KAAK,mCAAgB,CAAC,UAAU,CAAC;IAC/F,CAAC;IAED,IAAI,cAAc;QACd,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,aAAa,CAAC,KAAK,mCAAgB,CAAC,aAAa,CAAC;IACrG,CAAC;IAED,IAAI,cAAc;QACd,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,cAAc,CAAC,KAAK,mCAAgB,CAAC,cAAc,CAAC;IACvG,CAAC;IAED,IAAI,cAAc;QACd,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,cAAc,CAAC,KAAK,mCAAgB,CAAC,cAAc,CAAC;IACvG,CAAC;IAED,IAAI,OAAO;QACP,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,KAAK,CAAC,KAAK,mCAAgB,CAAC,KAAK,CAAC;IACrF,CAAC;IAED,IAAI,SAAS;QACT,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,OAAO,CAAC,KAAK,mCAAgB,CAAC,OAAO,CAAC;IACzF,CAAC;IAED,IAAI,OAAO;QACP,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,mCAAgB,CAAC,KAAK,CAAC,KAAK,mCAAgB,CAAC,KAAK,CAAC;IACrF,CAAC;CACJ;AAzGD,0CAyGC;AAED,MAAM,kBAAkB,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AAElD,MAAa,sBAAuB,SAAQ,eAAe;IAEvD,YAAY,YAA0B,EAAE,SAA8B,EAAE,OAA2B,EAAE,SAAkB,KAAK;QACxH,KAAK,CAAC,mCAAgB,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,kBAAkB,CAAC,GAAG,YAAY,CAAC;IAC5C,CAAC;IACD,IAAI,YAAY;QACZ,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACpC,CAAC;CACJ;AATD,wDASC;;;;;;;;;;;;;;;;AChID,IAAY,mBAIX;AAJD,WAAY,mBAAmB;IAC3B,gCAAS;IACT,oCAAa;IACb,sCAAe;AACnB,CAAC,EAJW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAI9B;;;;;;;;;;;;;;;;ACJD;;GAEG;AACH,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IACxB,yCAAqB;IACrB,uCAAmB;AACvB,CAAC,EAHW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAG3B;AAED;;GAEG;AACH,IAAY,mBAIX;AAJD,WAAY,mBAAmB;IAC3B,4CAAqB;IACrB,oCAAa;IACb,kDAA2B;AAC/B,CAAC,EAJW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAI9B;AAED;;GAEG;AACH,IAAY,uBAOX;AAPD,WAAY,uBAAuB;IAC/B,8CAAmB;IACnB,wCAAa;IACb,4CAAiB;IACjB,gDAAqB;IACrB,2CAAgB;IAChB,wCAAa;AACjB,CAAC,EAPW,uBAAuB,GAAvB,+BAAuB,KAAvB,+BAAuB,QAOlC;;;;;;;;;;;;;;;;AC3BD;;;;;;;;GAQG;AACH,IAAY,gBAmDX;AAnDD,WAAY,gBAAgB;IACxB,2CAA2C;IAC3C,uDAAQ;IAER,4BAA4B;IAC5B,+EAA6C;IAC7C,6BAA6B;IAC7B,iFAA8C;IAC9C,4BAA4B;IAC5B,qEAAwC;IACxC,8CAA8C;IAC9C,qEAAwC;IAExC,mCAAmC;IACnC,8EAA4C;IAE5C,0BAA0B;IAC1B,0EAA0C;IAE1C,uBAAuB;IACvB,4EAA2C;IAE3C,uBAAuB;IACvB,6EAA2C;IAE3C,kBAAkB;IAClB,mEAAsC;IACtC,qEAAuC;IACvC,gEAAoC;IACpC,oEAAsC;IAEtC,2DAA2D;IAC3D,gEAAoC;IAEpC,uBAAuB;IACvB,oFAA8C;IAE9C,qBAAqB;IACrB,6DAAkC;IAElC,kDAAkD;IAClD,6DAAkC;IAElC,mBAAmB;IACnB,uEAAuC;IAEvC,sBAAsB;IACtB,8EAA0C;IAE1C,oEAAqC;IACrC,oEAAqC;AACzC,CAAC,EAnDW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAmD3B;;;;;;;;;;;;;;;;AC3DD,mHAA2E;AAC3E,uGAA8C;AAC9C,0FAAwC;AAGxC,+DAA+D;AAC/D,MAAM,6BAA6B,GAAG,MAAM,CAAC,yBAAyB,CAAC,CAAC;AAExE,uDAAuD;AACvD,MAAM,0BAA0B,GAAG,MAAM,CAAC,4BAA4B,CAAC,CAAC;AAExE,MAAa,iBAAiB;IAqB1B,YAAoB,0BAA4C,mCAAgB,CAAC,QAAQ;QAdzE,iBAAY,GAAG,IAAI,eAAM,EAAmB,CAAC;QAC7C,eAAU,GAAG,IAAI,eAAM,EAAmB,CAAC;QAC3C,kBAAa,GAAG,IAAI,eAAM,EAAmB,CAAC;QAC9C,6BAAwB,GAAG,IAAI,eAAM,EAAoB,CAAC;QAEnE,yBAAoB,GAAG,2BAAY,CAAC,IAAI,CAAC;QAU5C,IAAI,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;QAEvD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAC1B,IAAI,IAAI,CAAC,uBAAuB,KAAK,CAAC,CAAC,gBAAgB,EAAE;gBACrD,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,gBAAgB,CAAC;aACrD;YACD,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACxB,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC;QACnD,CAAC,CAAC,CAAC;IACP,CAAC;IA/BM,MAAM,CAAC,WAAW;QACrB,OAAO,iBAAiB,CAAC,QAAQ,CAAC;IACtC,CAAC;IASD,IAAW,oBAAoB;QAC3B,OAAO,IAAI,CAAC,0BAA0B,CAAC,CAAC;IAC5C,CAAC;IAoBD,IAAW,uBAAuB,CAAC,gBAAkC;QACjE,IAAI,gBAAgB,KAAK,IAAI,CAAC,6BAA6B,CAAC,EAAE;YAC1D,IAAI,CAAC,6BAA6B,CAAC,GAAG,gBAAgB,CAAC;YACvD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACxD;IACL,CAAC;IAED;;;OAGG;IACH,IAAW,uBAAuB;QAC9B,OAAO,IAAI,CAAC,6BAA6B,CAAC,CAAC;IAC/C,CAAC;IAEM,0BAA0B;QAC7B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,KAAK,2BAAY,CAAC,IAAI,CAAC,CAAC,CAAC,2BAAY,CAAC,WAAW,CAAC,CAAC,CAAC,2BAAY,CAAC,IAAI,CAAC;IAC/H,CAAC;IAED,IAAW,gBAAgB;QACvB,IAAI,IAAI,CAAC,uBAAuB,KAAK,mCAAgB,CAAC,OAAO,EAAE;YAC3D,QAAQ,iBAAiB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE;gBAC1D,KAAK,2BAAY,CAAC,WAAW;oBACzB,OAAO,sCAAmB,CAAC,WAAW,CAAC;gBAC3C,KAAK,2BAAY,CAAC,IAAI;oBAClB,OAAO,sCAAmB,CAAC,IAAI,CAAC;aACvC;SACJ;QAED,uBAAuB;QACvB,OAAO,sCAAmB,CAAC,QAAQ,CAAC;IACxC,CAAC;;AAnEL,8CAoEC;AAnE2B,0BAAQ,GAAG,IAAI,iBAAiB,EAAE,CAAC;;;;;;;;;;;;;;;;ACb/D,sHAAwD;AACxD,mHAAsD;AACtD,4HAA4D;AAC5D,gHAA2D;AAC3D,uGAA8C;AAE9C;;GAEG;AACH,IAAK,eAsBJ;AAtBD,WAAK,eAAe;IAChB,sBAAsB;IACtB,6DAAY;IACZ,uBAAuB;IACvB,6DAAY;IACZ,uBAAuB;IACvB,6DAAY;IACZ,0BAA0B;IAC1B,6DAAY;IACZ,+EAAqB;IACrB,iFAAsB;IACtB,qFAAwB;IACxB,uFAAyB;IACzB,yDAAU;IACV,uDAAS;IACT,gFAAsB;IACtB,kFAAuB;IACvB,8DAAa;IACb,kEAAe;IACf,kEAAe;IACf,oEAAgB;IAChB,0DAAW;AACf,CAAC,EAtBI,eAAe,KAAf,eAAe,QAsBnB;AAED,IAAK,WASJ;AATD,WAAK,WAAW;IACZ,wBAAwB;IACxB,mEAAmB;IACnB,wBAAwB;IACxB,6DAAgB;IAChB,yBAAyB;IACzB,qEAAoB;IACpB,yBAAyB;IACzB,+DAAiB;AACrB,CAAC,EATI,WAAW,KAAX,WAAW,QASf;AAED,MAAM,WAAW,GAAG,IAAI,GAAG,EAAkE,CAAC;AAC9F,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,eAAe,EAAE,EAAE,OAAO,EAAE,eAAe,CAAC,UAAU,EAAE,OAAO,EAAE,eAAe,CAAC,WAAW,EAAE,CAAC,CAAC;AAC5H,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE,OAAO,EAAE,eAAe,CAAC,QAAQ,EAAE,OAAO,EAAE,eAAe,CAAC,UAAU,EAAE,CAAC,CAAC;AAEtH,MAAM,cAAc,GAAG,IAAI,GAAG,EAA8B,CAAC;AAC7D,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,mCAAgB,CAAC,iBAAiB,EAAE,mCAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;AAC7G,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,mCAAgB,CAAC,WAAW,EAAE,mCAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;AAC3G,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,mCAAgB,CAAC,gBAAgB,EAAE,mCAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;AAChH,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,mCAAgB,CAAC,iBAAiB,EAAE,mCAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;AACnH,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,mCAAgB,CAAC,WAAW,EAAE,mCAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;AACvG,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,mCAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;AACvE,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,mCAAgB,CAAC,aAAa,CAAC,CAAC,CAAC;AAC/E,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,mCAAgB,CAAC,eAAe,CAAC,CAAC,CAAC;AACjF,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,mCAAgB,CAAC,cAAc,EAAE,mCAAgB,CAAC,aAAa,CAAC,CAAC,CAAC;AACzH,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,mCAAgB,CAAC,cAAc,EAAE,mCAAgB,CAAC,aAAa,CAAC,CAAC,CAAC;AAC1H,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,mCAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;AAEpE,MAAM,oBAAoB;IAKtB,YAAY,KAAa,EAAE,OAAsB,EAAE,OAAuB;QACtE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAEM,UAAU,CAAC,OAAgB;QAC9B,MAAM,iBAAiB,GAAG,qCAAiB,CAAC,WAAW,EAAE,CAAC;QAC1D,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,UAAU,KAAK,OAAO,EAAE;YACxB,IAAI,OAAO,EAAE;gBACT,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAC/B,IAAI,wCAAsB,CACtB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,yCAAmB,CAAC,IAAI,EACnD,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mCAAgB,CAAC,IAAI,CAAC,CAC5D,CACJ,CAAC;aACL;iBAAM;gBACH,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAC7B,IAAI,wCAAsB,CACtB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,yCAAmB,CAAC,EAAE,EACjD,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mCAAgB,CAAC,IAAI,CAAC,CAC5D,CACJ,CAAC;aACL;SACJ;IACL,CAAC;CAEJ;AAED,MAAM,kBAAkB;IAepB,YAAY,KAAa,EAAE,OAAuB;QAdlD;;;;;;;WAOG;QACK,cAAS,GAAG,GAAG,CAAC;QAGhB,UAAK,GAAW,GAAG,CAAC;QAIxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAEM,QAAQ,CAAC,QAAgB;;QAC5B,MAAM,iBAAiB,GAAG,qCAAiB,CAAC,WAAW,EAAE,CAAC;QAC1D,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACtB,IAAI,gBAAgB,GAAqB,SAAS,CAAC;QAEnD,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE;YAC3D,4BAA4B;YAC5B,gBAAgB,SAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,0CAAE,OAAO,CAAC;YAExD,IAAI,gBAAgB,IAAI,IAAI,EAAE;gBAC1B,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAC7B,IAAI,wCAAsB,CACtB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,yCAAmB,CAAC,EAAE,EACjD,cAAc,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,mCAAgB,CAAC,IAAI,CAAC,CAClE,CACJ,CAAC;aACL;SACJ;aAAM,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YAClE,2BAA2B;YAC3B,gBAAgB,SAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,0CAAE,OAAO,CAAC;YAExD,IAAI,gBAAgB,IAAI,IAAI,EAAE;gBAC1B,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAC/B,IAAI,wCAAsB,CACtB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,yCAAmB,CAAC,IAAI,EACnD,cAAc,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,mCAAgB,CAAC,IAAI,CAAC,CAClE,CACJ,CAAC;aACL;SACJ;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,IAAI,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;YACzD,4BAA4B;YAC5B,gBAAgB,SAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,0CAAE,OAAO,CAAC;YAExD,IAAI,gBAAgB,IAAI,IAAI,EAAE;gBAC1B,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAC7B,IAAI,wCAAsB,CACtB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,yCAAmB,CAAC,EAAE,EACjD,cAAc,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,mCAAgB,CAAC,IAAI,CAAC,CAClE,CACJ,CAAC;aACL;SACJ;aAAM,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,IAAI,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;YAChE,2BAA2B;YAC3B,gBAAgB,SAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,0CAAE,OAAO,CAAC;YAExD,IAAI,gBAAgB,IAAI,IAAI,EAAE;gBAC1B,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAC/B,IAAI,wCAAsB,CACtB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,yCAAmB,CAAC,IAAI,EACnD,cAAc,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,mCAAgB,CAAC,IAAI,CAAC,CAClE,CACJ,CAAC;aACL;SACJ;IACL,CAAC;CACJ;AAED;;;GAGG;AACH,MAAM,cAAc;IAMhB,YAAY,OAAgB;QACxB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,2BAAY,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAEjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,oBAAoB,CAAC,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SAC3E;QAED,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SAClD;IACL,CAAC;IAEM,MAAM;QACT,MAAM,OAAO,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEpD,IAAI,OAAO,IAAI,IAAI,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACzF,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACtE;IACL,CAAC;IAEM,QAAQ;QACX,OAAO,mBAAmB,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,EAAE,GAAG,CAAC;IAC5D,CAAC;CACJ;AAED,MAAa,YAAY;IAGrB;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;QAE1B,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC,CAAM,EAAE,EAAE;YACnD,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;YACxC,MAAM,OAAO,GAAI,CAAsB,CAAC,OAAO,CAAC;YAEhD,IAAI,OAAO,IAAI,IAAI,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;aAC9D;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC,CAAC,EAAE,EAAE;YACjD,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC;YAC3C,MAAM,OAAO,GAAI,CAA6B,CAAC,OAAO,CAAC;YAEvD,IAAI,OAAO,IAAI,IAAI,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aACpC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;IACvD,CAAC;CAEJ;AA7BD,oCA6BC;;;;;;;;;;;;;;ACxPD,yFAAyF;;;AAEzF,uGAA8C;AAE9C,MAAM,OAAO,GAA6B,IAAI,GAAG,EAAE,CAAC;AAEpD,4BAA4B;AAC5B,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,2BAAY,CAAC,IAAI,CAAC,CAAC;AAClE,+BAA+B;AAC/B,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,2BAAY,CAAC,IAAI,CAAC,CAAC;AAC7C,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,2BAAY,CAAC,MAAM,CAAC,CAAC;AACpE,wCAAwC;AACxC,OAAO,CAAC,GAAG,CAAC,iDAAiD,EAAE,2BAAY,CAAC,IAAI,CAAC,CAAC;AAClF,yBAAyB;AACzB,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,2BAAY,CAAC,WAAW,CAAC,CAAC;AAEpD;;GAEG;AACH,MAAM,uBAAuB,GAAG,6EAA6E,CAAC;AAC9G,2BAA2B;AAE3B,MAAa,YAAY;IAErB,YAAmB,KAAmB,EAAE,QAA2B,EAAE,SAA4B;QAA9E,UAAK,GAAL,KAAK,CAAc;IACtC,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,UAAU,CAAC,GAAW;;QAChC,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,OAAO,EAAE;YAChC,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACf,MAAM,qBAAqB,GAAG,uBAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAChE,IAAI,QAA4B,CAAC;gBACjC,IAAI,SAAS,CAAC;gBACd,IAAI,qBAAqB,KAAK,IAAI,EAAE;oBAChC,QAAQ,SAAG,qBAAqB,CAAC,MAAM,0CAAE,QAAQ,CAAC;oBAClD,SAAS,SAAG,qBAAqB,CAAC,MAAM,0CAAE,SAAS,CAAC;iBACvD;gBACD,OAAO,IAAI,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;aAC/F;SACJ;QACD,+CAA+C;QAC/C,OAAO,6BAAqB,CAAC;IACjC,CAAC;CAEJ;AA3BD,oCA2BC;AAEY,6BAAqB,GAAiB,IAAI,YAAY,CAAC,2BAAY,CAAC,OAAO,CAAC,CAAC;;;;;;;;;;;;;;;;ACnD1F;;;;;;GAMG;AACH,IAAY,YASX;AATD,WAAY,YAAY;IAEpB,oDAAoD;IACpD,mCAAmB;IAEnB,6BAAa;IACb,2CAA2B;IAC3B,iCAAiB;AAErB,CAAC,EATW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QASvB;;;;;;;;;;;;;;;;AChBD,gHAAoD;AACpD,4HAA4D;AAC5D,mHAAsD;AACtD,mHAAsD;AACtD,sHAAwD;AACxD,0FAAwC;AAExC,MAAM,sBAAsB,GAAa;IACrC,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,OAAO;CAC7D,CAAC;AAEF,MAAM,mBAAmB,GAAG,IAAI,GAAG,EAA8B,CAAC;AAElE,mBAAmB,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,mCAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;AACjE,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,mCAAgB,CAAC,iBAAiB,EAAE,mCAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;AAChG,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,mCAAgB,CAAC,gBAAgB,EAAE,mCAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;AACjG,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,mCAAgB,CAAC,WAAW,EAAE,mCAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;AAC5F,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,mCAAgB,CAAC,iBAAiB,EAAE,mCAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;AACnG,mBAAmB,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,mCAAgB,CAAC,iBAAiB,EAAE,mCAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;AACnG,mBAAmB,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,mCAAgB,CAAC,WAAW,EAAE,mCAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;AACjG,mBAAmB,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,mCAAgB,CAAC,gBAAgB,EAAE,mCAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;AACtG,mBAAmB,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,mCAAgB,CAAC,iBAAiB,EAAE,mCAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;AACzG,mBAAmB,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,mCAAgB,CAAC,eAAe,EAAE,mCAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;AAC/F,mBAAmB,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,mCAAgB,CAAC,eAAe,EAAE,mCAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;AACrG,mBAAmB,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,mCAAgB,CAAC,KAAK,EAAE,mCAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;AACpF,mBAAmB,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,mCAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;AACpE,mBAAmB,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,mCAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;AACrE,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,mCAAgB,CAAC,eAAe,EAAE,mCAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;AAC9F,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,mCAAgB,CAAC,aAAa,CAAC,CAAC,CAAC;AAClE,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,mCAAgB,CAAC,aAAa,CAAC,CAAC,CAAC;AAClE,mBAAmB,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,mCAAgB,CAAC,cAAc,CAAC,CAAC,CAAC;AACrE,mBAAmB,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,mCAAgB,CAAC,cAAc,CAAC,CAAC,CAAC;AACrE,mBAAmB,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,mCAAgB,CAAC,cAAc,CAAC,CAAC,CAAC;AACtE,mBAAmB,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,mCAAgB,CAAC,cAAc,CAAC,CAAC,CAAC;AAEtE,MAAa,QAAQ;IAOjB;QANgB,cAAS,GAAG,IAAI,eAAM,EAAiB,CAAC;QACxC,YAAO,GAAG,IAAI,eAAM,EAAiB,CAAC;QACtC,eAAU,GAAG,IAAI,eAAM,EAAiB,CAAC;QACxC,YAAO,GAAG,IAAI,GAAG,EAAU,CAAC;QAC5B,sBAAiB,GAAG,qCAAiB,CAAC,WAAW,EAAE,CAAC;QAGjE,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3E,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;QACzE,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACzE,CAAC;IAEO,cAAc,CAAC,KAAoB;QACvC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE5B,iFAAiF;QACjF,gFAAgF;QAChF,gFAAgF;QAChF,gCAAgC;QAChC,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,EAAE;YAChD,OAAO;SACV;QAED,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CACrC,IAAI,iCAAe,CACf,mCAAgB,CAAC,QAAQ,EAAE,yCAAmB,CAAC,KAAK,EACpD,mBAAmB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,mCAAgB,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,MAAM,CAC/E,CACJ,CAAC;IACN,CAAC;IAEO,aAAa,CAAC,KAAoB;QACtC,IAAI,sBAAsB,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;YAC7C,KAAK,CAAC,cAAc,EAAE,CAAC;SAC1B;QAED,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC/B;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE3B,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,EAAE;YAChD,OAAO;SACV;QAED,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CACpC,IAAI,iCAAe,CACf,mCAAgB,CAAC,QAAQ,EAAE,yCAAmB,CAAC,IAAI,EACnD,mBAAmB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,mCAAgB,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,MAAM,CAC/E,CACJ,CAAC;IACN,CAAC;IAEO,WAAW,CAAC,KAAoB;QACpC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAClC;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEzB,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,EAAE;YAChD,OAAO;SACV;QAED,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAClC,IAAI,iCAAe,CACf,mCAAgB,CAAC,QAAQ,EAAE,yCAAmB,CAAC,EAAE,EACjD,mBAAmB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,mCAAgB,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,MAAM,CAC/E,CACJ,CAAC;IACN,CAAC;IAEM,SAAS,CAAC,GAAW;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;CACJ;AA7ED,4BA6EC;;;;;;;;;;;;;;;;;AC5GD,8FAAwE;AAmBxE;;;;GAIG;AACH,MAAa,YAAoC,SAAQ,qBAAY;IAoBjE;;OAEG;IACH,YAAmB,EAAqD;;YAArD,EAAE,QAAQ,EAAE,YAAY,OAA6B,EAAxB,IAAI,sBAAjC,4BAAmC,CAAF;QAChD,KAAK,iCACE,IAAI,KACP,KAAK,EAAE,QAAQ,CAAC,KAAK,EACrB,MAAM,EAAE,QAAQ,CAAC,MAAM,IACzB,CAAC;QArBP,0CAA0C;QAClC,mBAAc,GAAG,CAAC,CAAC;QAE3B,+CAA+C;QACvC,SAAI,GAAG,CAAC,CAAC;QAGT,gBAAW,GAAG,CAAC,CAAC;QAChB,iBAAY,GAAG,CAAC,CAAC;QAcrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,GAAG,SAAG,IAAI,CAAC,GAAG,mCAAI,IAAI,CAAC;QAC5B,IAAI,CAAC,OAAO,SAAG,IAAI,CAAC,OAAO,mCAAI,KAAK,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,YAAY,aAAZ,YAAY,cAAZ,YAAY,GAAI,IAAI,CAAC;IAC7C,CAAC;IAED,kBAAkB;IACR,mBAAmB,CAAC,MAAgB;QAC1C,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;YAC3B,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACrC;aAAM;YACH,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;gBAChC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;aACpE;iBAAM,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE;gBACzB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;aACnF;iBAAM;gBACH,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;aACnE;SACJ;IACL,CAAC;IAED;;;;OAIG;IACI,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED;;;;OAIG;IACI,WAAW,CAAC,QAAkB;QACjC,IAAI,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,CAAC,2BAAe,CAAC,SAAS,CAAC,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,MAAM;QACT,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,GAAkB;QAC5B,IAAI,GAAG,KAAK,IAAI,CAAC,GAAG,EAAE;YAClB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,UAAU,CAAC,2BAAe,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAI,IAAI,CAAC,GAAG,EAAE;gBACV,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;gBACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrE,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;gBACtB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;aACjB;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,cAAc,CAAC,GAAkB;QACpC,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,CAAC,GAAG,EAAE;YACjC,OAAO,IAAI,CAAC,cAAc,CAAC;SAC9B;QAED,OAAO,CAAC,CAAC;IACb,CAAC;IAEM,UAAU,CAAC,OAAgB;QAC9B,IAAI,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE;YAC1B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,2BAAe,CAAC,SAAS,CAAC,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,kBAAkB;IACX,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;IACpB,CAAC;IAED,kBAAkB;IACX,IAAI,CAAC,GAA6B;QACrC,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACtC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACpB;QACD,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE;YAClB,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;gBACtB,6DAA6D;gBAC7D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;aACtG;YACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;SAChE;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;SACnD;QACD,GAAG,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;CACJ;AAhJD,oCAgJC;;;;;;;;;;;;;;;;;AC5KD,6HAAuF;AAEvF,8FAAwC;AACxC,6FAAgD;AAEhD,iHAA+D;AAC/D,wHAAuD;AACvD,kHAAkE;AAGlE,oFAAqC;AAMrC;;;;;GAKG;AACH,SAAS,uBAAuB,CAAC,MAAoB;IACjD,IAAI,MAAM,YAAY,QAAQ,EAAE;QAC5B,OAAO,uBAAuB,CAAC,MAAM,EAAE,CAAC,CAAC;KAC5C;SAAM,IAAI,MAAM,YAAY,qBAAS,EAAE;QACpC,OAAO,MAAM,CAAC,eAAe,EAAE,CAAC;KACnC;SAAM;QACH,OAAO,MAAM,CAAC;KACjB;AACL,CAAC;AAiBD;;GAEG;AACH,MAAa,MAAM;IAoDf;;;OAGG;IACH,YAAmB,KAAwB;QAvDvC,yEAAyE;QACrE,MAAC,GAAW,CAAC,CAAC;QAEtB,uEAAuE;QAC/D,MAAC,GAAW,CAAC,CAAC;QAEtB,gCAAgC;QACxB,SAAI,GAAW,CAAC,CAAC;QAEzB,yDAAyD;QACjD,aAAQ,GAAW,CAAC,CAAC;QAK7B;;;WAGG;QACK,WAAM,GAAwB,IAAI,CAAC;QAE3C,8FAA8F;QAC7E,mBAAc,GAAG,IAAI,iCAAe,EAAE,CAAC;QAExD;;;WAGG;QACc,wBAAmB,GAAG,IAAI,iCAAe,EAAE,CAAC;QAE7D,uGAAuG;QAC/F,6BAAwB,GAAG,KAAK,CAAC;QAEzC,iHAAiH;QAChG,eAAU,GAAsB,EAAE,CAAC;QAEpD,gDAAgD;QAChC,kBAAa,GAAG,IAAI,6BAAa,EAAE,CAAC;QAEpD,oCAAoC;QACpB,gBAAW,GAAG,IAAI,yBAAW,EAAE,CAAC;QAEhD,2DAA2D;QACnD,mBAAc,GAA4B,IAAI,CAAC;QAEvD;;;WAGG;QACK,WAAM,GAAgB,IAAI,CAAC;QAO/B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAClC,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACI,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;IACxC,CAAC;IAED;;;;OAIG;IACI,IAAI;QACP,OAAO,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC;IAED;;;;OAIG;IACI,IAAI,CAAC,CAAS;QACjB,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,IAAI;QACP,OAAO,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC;IAED;;;;OAIG;IACI,IAAI,CAAC,CAAS;QACjB,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,CAAS,EAAE,CAAS;QAC9B,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE;YAC9B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,CAAS,EAAE,CAAS;QAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACpB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,OAAO;QACV,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACxC,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACxC,CAAC;IAED;;;;OAIG;IACI,MAAM;QACT,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACI,SAAS;QACZ,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACI,OAAO,CAAC,IAAY;QACvB,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACI,WAAW,CAAC,QAAgB;QAC/B,IAAI,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED;;OAEG;IACK,UAAU;QACd,gGAAgG;IACpG,CAAC;IAED;;;OAGG;IACK,6BAA6B;QACjC,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACI,SAAS,CAAC,WAAsD;QACnE,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjC,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACI,iBAAiB;QACpB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAED;;;;;;OAMG;IACI,sBAAsB;QACzB,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE;YAChC,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE;iBAC3B,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;iBACpD,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;iBACxB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;iBAChB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;iBACrB,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;SACxC;QACD,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACpC,CAAC;IAED;;;;OAIG;IACI,YAAY,CAAC,SAA0B;QAC1C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACI,YAAY,CAAC,SAA0B;QAC1C,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QAC7B,OAAO,SAAS,CAAC,UAAU,EAAE,CAAC;IAClC,CAAC;IAED;;OAEG;IACI,gBAAgB;QACnB,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE;YACrC,SAAS,CAAC,MAAM,EAAE,CAAC;SACtB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACK,gBAAgB,CAAC,EAAU;QAC/B,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC;QACtC,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,CAAC,GAAG,aAAa,EAAE;YACtB,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;gBAChC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxB,aAAa,EAAE,CAAC;aACnB;iBAAM;gBACH,CAAC,EAAE,CAAC;aACP;SACJ;IACL,CAAC;IAED;;;;OAIG;IACI,aAAa;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;IACtC,CAAC;IAED;;;;;;;;;;;;OAYG;IACU,KAAK,CAAC,MAAoB,EAAE,OAAkB,EAAE;;;YACzD,yCAAyC;YACzC,IAAI,CAAC,WAAW,EAAE,CAAC;YAEnB,qCAAqC;YACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAEnB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3B,MAAM,QAAQ,SAAG,IAAI,CAAC,KAAK,mCAAI,QAAQ,CAAC;YACxC,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;YAClC,MAAM,WAAW,SAAG,IAAI,CAAC,QAAQ,mCAAI,WAAW,CAAC;YACjD,MAAM,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC;YACvC,MAAM,aAAa,GAAG,WAAW,GAAG,WAAW,CAAC;YAChD,IAAI,CAAC,cAAc,GAAG,IAAI,mBAAQ,CAC9B,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBACd,MAAM,QAAQ,GAAG,uBAAuB,CAAC,MAAM,CAAC,CAAC;gBACjD,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACxB,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACxB,MAAM,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;gBAC3B,MAAM,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;gBAC3B,IAAI,MAAM,KAAK,CAAC,EAAE;oBACd,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,MAAM,GAAG,KAAK,CAAC;iBACpC;gBACD,IAAI,MAAM,KAAK,CAAC,EAAE;oBACd,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,MAAM,GAAG,KAAK,CAAC;iBACpC;gBACD,IAAI,aAAa,KAAK,CAAC,EAAE;oBACrB,MAAM,CAAC,QAAQ,GAAG,WAAW,GAAG,aAAa,GAAG,KAAK,CAAC;iBACzD;gBACD,IAAI,UAAU,KAAK,CAAC,EAAE;oBAClB,MAAM,CAAC,IAAI,GAAG,QAAQ,GAAG,UAAU,GAAG,KAAK,CAAC;iBAC/C;gBACD,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACzC,CAAC,kBAAI,MAAM,EAAE,uBAAa,IAAK,IAAI,EACtC,CAAC;YACF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC9D,IAAI,QAAQ,EAAE;gBACV,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;oBACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;iBACxB;gBACD,OAAO,IAAI,CAAC;aACf;iBAAM;gBACH,OAAO,KAAK,CAAC;aAChB;;KACJ;IAED;;;;OAIG;IACI,UAAU;QACb,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC;IACvC,CAAC;IAED;;OAEG;IACK,WAAW;QACf,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAC7B,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;YAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC9B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,SAAS,CAAC,MAA2B;QACxC,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;YACxB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,SAAS;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAEM,cAAc,CAAC,CAAS,EAAE,CAAS,EAAE,MAAM,GAAG,CAAC;QAClD,OAAO,CACH,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,GAAG,MAAM;eACzB,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM;eAC3B,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,GAAG,MAAM;eAC7B,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE,GAAG,MAAM,CACpC,CAAC;IACN,CAAC;IAED;;;;;OAKG;IACI,SAAS,CAAC,MAAmB;QAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,SAAS;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAEO,MAAM,CAAC,CAAS;QACpB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO,YAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;SAC9G;aAAM;YACH,OAAO,CAAC,CAAC;SACZ;IACL,CAAC;IAEO,MAAM,CAAC,CAAS;QACpB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO,YAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;SAChH;aAAM;YACH,OAAO,CAAC,CAAC;SACZ;IACL,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,EAAU;QACpB,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,MAAM,QAAQ,GAAG,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACtD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE;QACD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IAED;;;;;;;;;;;;OAYG;IACI,IAAI,CAAC,GAA6B,EAAE,KAAa,EAAE,MAAc;QAEpE,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,IAAI,CAAC,sBAAsB,EAAE,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QACnD,OAAO,GAAG,EAAE;YACR,GAAG,CAAC,OAAO,EAAE,CAAC;YACd,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YACzD,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,MAAM,CAAC;YAC7D,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC;IACN,CAAC;CACJ;AAniBD,wBAmiBC;;;;;;;;;;;;;;;;ACplBD,2FAAsC;AAEtC,MAAa,cAA+B,SAAQ,mBAAW;IAA/D;;QACY,iBAAY,GAAG,CAAC,CAAC;QACjB,eAAU,GAAG,CAAC,CAAC;IAW3B,CAAC;IATU,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,IAAI,EAAE;YAC5B,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,YAAY,MAAM,CAAC,CAAC;YACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACzB;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;CACJ;AAbD,wCAaC;;;;;;;;;;;;;;;;;ACfD,8FAAuD;AAUvD;;;;GAIG;AACH,MAAa,SAAiC,SAAQ,qBAAY;IAI9D;;OAEG;IACH,YAAmB,EAAiC;YAAjC,EAAE,KAAK,OAA0B,EAArB,IAAI,sBAAhB,SAAkB,CAAF;QAC/B,KAAK,iBACD,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,MAAM,EAAE,KAAK,CAAC,MAAM,IACjB,IAAI,EACT,CAAC;QACH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,kBAAkB;IACX,IAAI,CAAC,GAA6B;QACrC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,CAAC;CACJ;AA7BD,8BA6BC;;;;;;;;;;;;;;;;;AC5CD,8FAAwE;AACxE,oFAAqC;AAErC,MAAM,wBAAwB,GAAG,MAAM,CAAC;AACxC,MAAM,oBAAoB,GAAG,MAAM,CAAC;AACpC,MAAM,sBAAsB,GAAG,MAAM,CAAC;AACtC,MAAM,aAAa,GAAG,GAAG,CAAC;AAC1B,MAAM,cAAc,GAAG,CAAC,CAAC;AAWzB;;;;GAIG;AACH,MAAa,eAAuC,SAAQ,qBAAY;IAMpE;;OAEG;IACH,YAAmB,KAC8D,EAAE;YADhE,EAAE,eAAe,GAAG,wBAAwB,EAAE,WAAW,GAAG,oBAAoB,EAC3F,aAAa,GAAG,sBAAsB,OAAqC,EAAhC,IAAI,sBADpC,mDACsC,CAAF;QACnD,KAAK,iBACD,KAAK,EAAE,aAAa,EACpB,MAAM,EAAE,cAAc,IACnB,IAAI,EACT,CAAC;QAXC,aAAQ,GAAW,CAAC,CAAC;QAYzB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IAEM,WAAW,CAAC,QAAgB;QAC/B,QAAQ,GAAG,YAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,IAAI,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,UAAU,CAAC,2BAAe,CAAC,SAAS,CAAC,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,kBAAkB;IACX,IAAI,CAAC,GAA6B;QACrC,GAAG,CAAC,IAAI,EAAE,CAAC;QAEX,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAEhC,kBAAkB;QAClB,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC;QACrC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAElC,oBAAoB;QACpB,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;QACnC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAElD,cAAc;QACd,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACnC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;QAClB,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAC9B,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,MAAM,EAAE,CAAC;QACb,GAAG,CAAC,OAAO,EAAE,CAAC;QAEd,GAAG,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;CACJ;AA5DD,0CA4DC;;;;;;;;;;;;;;;;ACnFD,8FAAuD;AACvD,mGAA8C;AAe9C;;;;GAIG;AACH,MAAa,QAAgC,SAAQ,qBAAY;IAC7D;;;;;;;;OAQG;IACH,YAAmB,KAAwB,EAAE,MAA4D;QACrG,KAAK,CAAC,EAAE,MAAM,EAAE,qBAAS,CAAC,QAAQ,EAAE,WAAW,EAAE,qBAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACzE,CAAC;IAED;;;;;;;OAOG;IACK,iBAAiB,CAAC,GAA6B,EAAE,KAAa,EAAE,KAAa,EAAE,MAAc;QAEjG,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,GAAG,yBAAa,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;YAC3C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;SACxB;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;AAhCD,4BAgCC;;;;;;;;;;;;;;;;ACtDD,6HAA+D;AAK/D,2FAAoE;AAEpE,qFAAkC;AAClC,gGAAqE;AACrE,0FAAwC;AACxC,gJAAuE;AACvE,gJAAuE;AAWvE;;;;;;GAMG;AACH,MAAsB,KAAK;IAmBvB,YAAmC,IAAO;QAAP,SAAI,GAAJ,IAAI,CAAG;QAlBnC,WAAM,GAAW,CAAC,CAAC;QACnB,sBAAiB,GAAsB,IAAI,CAAC;QAC5C,iBAAY,GAAsB,IAAI,CAAC;QACvC,kBAAa,GAAsB,IAAI,CAAC;QAIvC,eAAU,GAAW,CAAC,CAAC;QACvB,iBAAY,GAAW,CAAC,CAAC;QACzB,gBAAW,GAAW,CAAC,CAAC;QACxB,cAAS,GAAW,CAAC,CAAC;QACtB,oBAAe,GAAkB,IAAI,CAAC;QAI9B,kBAAa,GAAG,IAAI,eAAM,CAA8B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACzF,kBAAa,GAAG,IAAI,eAAM,CAA8B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAGrG,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;YAChD,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;YAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,GAAG,IAAI,eAAM,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAED,IAAW,KAAK;QACZ,OAAO,qCAAiB,CAAC,WAAW,EAAE,CAAC;IAC3C,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;IAED;;;;OAIG;IACI,SAAS,CAAC,KAAa;QAC1B,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,SAAS,CAAC,KAAa;QAC1B,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,KAAK,CAAC;QAChC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,WAAW,CAAC,KAAa,EAAE,OAAiB;QAC/C,IAAI,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;YACtC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACzB;aAAM;YACH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACzB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,aAAa,CAAC,KAAa;QAC9B,OAAO,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED;;;;;OAKG;IACI,YAAY,CAAC,KAAa;QAC7B,OAAO,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED;;;;;OAKG;IACI,cAAc,CAAC,WAAqB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QACnF,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,cAAc;QACjB,MAAM,WAAW,GAAa,EAAE,CAAC;QACjC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE;gBACzC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;SACJ;QACD,OAAO,WAAW,CAAC;IACvB,CAAC;IAED;;;;;OAKG;IACI,YAAY,CAAC,SAAmB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/E,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,YAAY;QACf,MAAM,SAAS,GAAa,EAAE,CAAC;QAC/B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE;gBACvC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACzB;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;;;;OAKG;IACI,WAAW,CAAC,EAAU;QACzB,OAAO,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED;;;;OAIG;IACI,kBAAkB;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC;IAChC,CAAC;IAED;;;;OAIG;IACI,kBAAkB,CAAC,eAA8B;QACpD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,eAAe,CAAC,MAA2C;QAC/D,MAAM,QAAQ,GAAG,CAAC,KAAmB,EAAE,EAAE;YACrC,MAAM,CAAC,IAAI,CAAC,IAAI,6CAAqB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QAC3D,OAAO,GAAG,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QAClE,CAAC,CAAC;IACN,CAAC;IAEO,eAAe,CAAC,MAA2C;QAC/D,MAAM,QAAQ,GAAG,CAAC,KAAmB,EAAE,EAAE;YACrC,MAAM,CAAC,IAAI,CAAC,IAAI,6CAAqB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QAC3D,OAAO,GAAG,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QAClE,CAAC,CAAC;IACN,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,IAAI,CAAC;IAC5C,CAAC;IAED;;;;OAIG;IACI,KAAK,CAAC,IAAO,IAAyB,CAAC;IAE9C;;OAEG;IACI,QAAQ,KAA0B,CAAC;IAE1C;;OAEG;IACI,UAAU,KAA0B,CAAC;IAE5C;;OAEG;IACI,OAAO,KAA0B,CAAC;IAEzC;;;;OAIG;IACI,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;IAED;;;;;;;;OAQG;IACI,IAAI,CAAC,GAA6B,EAAE,KAAa,EAAE,MAAc;QACpE,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,EAAE;YAC9B,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC;YACrC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YAClC,GAAG,CAAC,OAAO,EAAE,CAAC;SACjB;QACD,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,2BAA2B,GAAG,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC;QAC1F,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACtD,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACtD,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,OAAO,UAAU,KAAK,CAAC,EAAE;YACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;gBACxB,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC/C,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC3C,IAAI,KAAK,EAAE;oBACP,GAAG,CAAC,IAAI,EAAE,CAAC;oBACX,MAAM,MAAM,GAAG,uBAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;oBAC3C,MAAM,MAAM,GAAG,8BAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;oBACjD,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC;oBAC1B,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC,CAAC;oBACjD,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;oBAChE,MAAM,CAAC,wBAAwB,GAAG,QAAQ,CAAC;oBAC3C,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;oBAChD,IAAI,CAAC,UAAU,EAAE;wBACb,GAAG,CAAC,wBAAwB,GAAG,UAAU,CAAC;qBAC7C;oBACD,2BAA2B,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;oBACjD,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5B,GAAG,CAAC,OAAO,EAAE,CAAC;iBACjB;qBAAM;oBACH,IAAI,GAAG,EAAE;wBACL,GAAG,CAAC,IAAI,EAAE,CAAC;wBACX,2BAA2B,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;qBACpD;oBACD,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;oBAC7C,UAAU,GAAG,KAAK,CAAC;oBACnB,IAAI,GAAG,EAAE;wBACL,GAAG,CAAC,OAAO,EAAE,CAAC;qBACjB;iBACJ;aACJ;YACD,UAAU,MAAM,CAAC,CAAC;YAClB,KAAK,KAAK,CAAC,CAAC;SACf;QACD,IAAI,QAAQ,IAAI,IAAI,EAAE;YAClB,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACnB,OAAO;aACV;iBAAM,IAAI,QAAQ,KAAK,KAAK,EAAE;gBAC3B,QAAQ,EAAE,CAAC;aACd;SACJ;QACD,GAAG,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;CACJ;AA9SD,sBA8SC;;;;;;;;;;;;;;;;ACzUD,mGAA8C;AAC9C,6HAAuF;AACvF,wGAAgD;AAChD,qGAAoF;AAGpF,+FAA0C;AAI1C;;;GAGG;AACH,IAAY,aASX;AATD,WAAY,aAAa;IACrB,yGAAyG;IACzG,yEAAoB;IAEpB;;;OAGG;IACH,+DAAe;AACnB,CAAC,EATW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QASxB;AAED;;;GAGG;AACH,IAAY,eAkBX;AAlBD,WAAY,eAAe;IACvB,gCAAgC;IAChC,+DAAa;IAEb,iDAAiD;IACjD,qFAAwB;IAExB,2CAA2C;IAC3C,yEAAkB;IAElB,4EAA4E;IAC5E,yDAAU;IAEV,kFAAkF;IAClF,sEAAiB;IAEjB,mDAAmD;IACnD,wEAAkB;AACtB,CAAC,EAlBW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAkB1B;AAoED;;;GAGG;AACH,MAAa,SAAS;IAoHlB;;OAEG;IACH,YAAmB,EAAE,EAAE,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,qBAAS,CAAC,MAAM,EACtF,WAAW,GAAG,qBAAS,CAAC,MAAM,EAAE,OAAO,GAAG,CAAC,EAAE,UAAU,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,MAAM,GAAG,KAAK,EAC7F,aAAa,GAAG,CAAC,EAAE,kBAAkB,KAAoB,EAAE;QAxHnE,qCAAqC;QAC7B,WAAM,GAAwB,IAAI,CAAC;QAE3C,2CAA2C;QACnC,gBAAW,GAAwB,IAAI,CAAC;QAEhD,+CAA+C;QACvC,oBAAe,GAAwB,IAAI,CAAC;QAEpD,0CAA0C;QAClC,eAAU,GAAwB,IAAI,CAAC;QAE/C,yCAAyC;QACjC,cAAS,GAAwB,IAAI,CAAC;QAE9C,yDAAyD;QACjD,UAAK,GAA6B,IAAI,CAAC;QAK/C,qDAAqD;QAC7C,aAAQ,GAAG,IAAI,iBAAO,EAAE,CAAC;QAEjC,kCAAkC;QAC1B,SAAI,GAAG,IAAI,aAAK,EAAE,CAAC;QAE3B,0CAA0C;QAClC,kBAAa,GAAG,IAAI,iBAAO,EAAE,CAAC;QAEtC,gEAAgE;QACxD,iBAAY,GAAG,IAAI,iBAAO,EAAE,CAAC;QASrC;;WAEG;QACc,uBAAkB,GAAY,IAAI,iBAAO,EAAE,CAAC;QAQ7D;;;;WAIG;QACc,kBAAa,GAAa,IAAI,mBAAQ,EAAE,CAAC;QAE1D;;;;WAIG;QACc,uBAAkB,GAAa,IAAI,mBAAQ,EAAE,CAAC;QAE/D;;;;WAIG;QACc,mBAAc,GAAG,IAAI,iCAAe,EAAE,CAAC;QAExD;;;WAGG;QACc,wBAAmB,GAAG,IAAI,iCAAe,EAAE,CAAC;QAE7D,gHAAgH;QAC/F,eAAU,GAAsB,EAAE,CAAC;QAqBpD;;;WAGG;QACK,UAAK,GAAW,CAAC,CAAC;QAE1B;;;WAGG;QACO,kBAAa,GAAW,CAAC,CAAC;QAEpC,2DAA2D;QACjD,kBAAa,GAAgB,EAAE,CAAC;QAQtC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,kBAAkB,IAAI,IAAI,EAAE;YAC5B,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;SACzD;IACL,CAAC;IAED;;;;OAIG;IACI,KAAK;QACR,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED;;;;OAIG;IACI,KAAK,CAAC,EAAiB;QAC1B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,IAAI;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,IAAW,CAAC;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,IAAW,CAAC,CAAC,CAAS;QAClB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAED;;;;OAIG;IACI,IAAI,CAAC,CAAS;QACjB,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;SACnD;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,IAAI;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,IAAW,CAAC;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,IAAW,CAAC,CAAC,CAAS;QAClB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAED;;;;OAIG;IACI,IAAI,CAAC,CAAS;QACjB,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;SACnD;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED;;;;OAIG;IACI,gBAAgB;QACnB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YACrD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;gBACrB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC,CAAC;gBAC7D,IAAI,CAAC,aAAa,CAAC,SAAS,CACxB,CAAC,qBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EACrE,CAAC,qBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CACzE,CAAC;aACL;YACD,IAAI,CAAC,KAAK,IAAI,eAAe,CAAC,cAAc,CAAC;SAChD;QACD,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAED;;;;;OAKG;IACI,eAAe;QAClB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YACpD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAClF,IAAI,CAAC,KAAK,IAAI,eAAe,CAAC,aAAa,CAAC;SAC/C;QACD,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED;;;;;;OAMG;IACI,UAAU,CAAC,SAA0B,eAAe,CAAC,SAAS;QACjE,IAAI,YAAY,GAAG,CAAC,CAAC;QAErB,2GAA2G;QAC3G,cAAc;QACd,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACzC,MAAM,IAAI,eAAe,CAAC,YAAY,CAAC;YACvC,MAAM,IAAI,eAAe,CAAC,SAAS,CAAC;YACpC,YAAY,IAAI,eAAe,CAAC,cAAc,CAAC;SAClD;QAED,wFAAwF;QACxF,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YACjD,MAAM,IAAI,eAAe,CAAC,oBAAoB,CAAC;YAC/C,MAAM,IAAI,eAAe,CAAC,aAAa,CAAC;SAC3C;QAED,2GAA2G;QAC3G,4BAA4B;QAC5B,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE;YACvD,MAAM,IAAI,eAAe,CAAC,YAAY,CAAC;YACvC,MAAM,IAAI,eAAe,CAAC,SAAS,CAAC;YACpC,YAAY,IAAI,eAAe,CAAC,cAAc,CAAC;SAClD;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC;YAEtB,mDAAmD;YACnD,IAAI,YAAY,KAAK,CAAC,EAAE;gBACpB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;aAC9D;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACI,OAAO,CAAC,MAAuB;QAClC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,MAAM,CAAC;IAC5C,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,CAAS,EAAE,CAAS;QAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;SACnD;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,CAAS,EAAE,CAAS;QAC9B,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;YAChD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;SACnD;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAC3B,CAAC;IAED,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAC3B,CAAC;IAED,IAAW,KAAK,CAAC,KAAa;QAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACI,QAAQ,CAAC,KAAa;QACzB,IAAI,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SAC3C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;IAED,IAAW,MAAM,CAAC,MAAc;QAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACI,SAAS,CAAC,MAAc;QAC3B,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SAC3C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,OAAO;QACV,IAAI,qBAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC1B;aAAM,IAAI,qBAAS,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;SAC5C;aAAM;YACH,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChD;IACL,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,IAAI,qBAAS,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAChC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC1B;aAAM,IAAI,qBAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACtC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;SAC5C;aAAM;YACH,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChD;IACL,CAAC;IAED;;;;OAIG;IACI,MAAM;QACT,IAAI,qBAAS,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC1B;aAAM,IAAI,qBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACxC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SAC7C;aAAM;YACH,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACjD;IACL,CAAC;IAED;;;;OAIG;IACI,SAAS;QACZ,IAAI,qBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACjC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC1B;aAAM,IAAI,qBAAS,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACrC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SAC7C;aAAM;YACH,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACjD;IACL,CAAC;IAED;;;;;OAKG;IACI,QAAQ,CAAC,KAAa,EAAE,MAAc;QACzC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;YAChD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SAC3C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED;;;;;OAKG;IACI,UAAU,CAAC,OAAe;QAC7B,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QAC/B,IAAI,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE;YAC1B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,mBAAmB;;QACtB,IAAI,IAAI,CAAC,OAAO,KAAK,QAAQ,EAAE;YAC3B,OAAO,CAAC,CAAC;SACZ;QACD,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,aAAC,IAAI,CAAC,MAAM,0CAAE,mBAAmB,qCAAM,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC9F,CAAC;IAED;;;;OAIG;IACI,SAAS,CAAC,MAAe;QAC5B,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;YACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,UAAU,CAAC,OAAgB;QAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACI,SAAS;QACZ,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;IACxB,CAAC;IAED;;OAEG;IACI,IAAI;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED;;OAEG;IACI,IAAI;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED;;;;;;OAMG;IACI,SAAS;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;;;;OAMG;IACI,SAAS,CAAC,MAAiB;QAC9B,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;YACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC;SACzD;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,cAAc;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED;;;;;OAKG;IACI,cAAc,CAAC,WAAsB;QACxC,IAAI,WAAW,KAAK,IAAI,CAAC,WAAW,EAAE;YAClC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC;SAChF;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACI,iBAAiB;QACpB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAED;;;;;OAKG;IACI,sBAAsB;QACzB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE;YAC3D,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAI,MAAM,IAAI,IAAI,EAAE;gBAChB,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC,CAAC;gBACpE,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAC9B,CAAC,qBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAChE,CAAC,qBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CACpE,CAAC;aACL;iBAAM;gBACH,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;aACpC;YACD,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACrE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAClD,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAC9B,CAAC,CAAC,qBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EACxD,CAAC,CAAC,qBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAC5D,CAAC;YACF,IAAI,CAAC,KAAK,IAAI,eAAe,CAAC,oBAAoB,CAAC;SACtD;QACD,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACpC,CAAC;IAED;;;;;OAKG;IACI,SAAS,CAAC,WAAsD;QACnE,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC;IACjE,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACI,OAAO;QACV,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;YACpB,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;SAChF;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;IAC3B,CAAC;IAED;;;;;OAKG;IACO,QAAQ,CAAC,KAAsB;QACrC,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;YACtB,IAAI,IAAI,CAAC,KAAK,EAAE;gBACZ,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;YACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,KAAK,EAAE;gBACP,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;YACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;SACnD;IACL,CAAC;IAED;;;;OAIG;IACI,SAAS;QACZ,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;IAC9B,CAAC;IAED;;OAEG;IACO,QAAQ,KAAU,CAAC;IAE7B;;OAEG;IACO,UAAU,KAAU,CAAC;IAE/B;;;;OAIG;IACI,SAAS;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACI,cAAc;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED;;;;OAIG;IACI,kBAAkB;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC;IAChC,CAAC;IAED;;;;OAIG;IACI,aAAa;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACI,YAAY;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACI,aAAa;QAChB,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC;IACnC,CAAC;IAED;;;;OAIG;IACI,WAAW,CAAC,IAAkB;QACjC,IAAI,IAAI,KAAK,IAAI,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;SACzD;QAED,yCAAyC;QACzC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,IAAI,SAAS,EAAE;YACX,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAC/B;QAED,mBAAmB;QACnB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC;QACtC,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;QACpC,IAAI,YAAY,EAAE;YACd,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;SACnC;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAC1B;QACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,YAAY,CAAC,IAAkB;QAClC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;YACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SACxD;aAAM;YACH,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACjC;IACL,CAAC;IAED;;;;OAIG;IACI,WAAW,CAAC,IAAkB;QACjC,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAChD;QAED,+BAA+B;QAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC;QAClC,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC/B;QACD,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;QAED,+BAA+B;QAC/B,IAAI,IAAI,KAAK,IAAI,CAAC,UAAU,EAAE;YAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAC1B;QACD,IAAI,IAAI,KAAK,IAAI,CAAC,SAAS,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;QAED,kCAAkC;QAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEpB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QAEhD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACI,MAAM;QACT,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACjC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACI,KAAK;QACR,OAAO,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACpC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,iBAAiB,CAAC,OAAqB,EAAE,OAAqB;QACjE,IAAI,OAAO,KAAK,OAAO,EAAE;YACrB,6CAA6C;YAC7C,OAAO,IAAI,CAAC;SACf;QACD,IAAI,OAAO,KAAK,IAAI,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;SAC3D;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;SAC1D;QAED,yCAAyC;QACzC,MAAM,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC;QACjC,IAAI,SAAS,IAAI,IAAI,EAAE;YACnB,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAClC;QAED,kBAAkB;QAClB,MAAM,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;QAC5C,IAAI,WAAW,IAAI,IAAI,EAAE;YACrB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;SAC7B;aAAM;YACH,WAAW,CAAC,WAAW,GAAG,OAAO,CAAC;SACrC;QACD,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC;QAClC,OAAO,CAAC,eAAe,GAAG,WAAW,CAAC;QACtC,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC;QAC9B,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QACtB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE7B,OAAO,CAAC,UAAU,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QAEnD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,YAAY,CAAC,OAAqB;QACrC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9B,IAAI,MAAM,IAAI,IAAI,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;SACnD;QACD,MAAM,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,gBAAgB,CAAC,OAAqB,EAAE,OAAqB;QAChE,IAAI,OAAO,KAAK,OAAO,EAAE;YACrB,4CAA4C;YAC5C,OAAO,IAAI,CAAC;SACf;QACD,IAAI,OAAO,KAAK,IAAI,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;SAC3D;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;SAC1D;QACD,MAAM,cAAc,GAAG,OAAO,CAAC,WAAW,CAAC;QAC3C,IAAI,cAAc,IAAI,IAAI,EAAE;YACxB,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;SAC1D;aAAM;YACH,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SACpC;IACL,CAAC;IAED;;;;OAIG;IACI,WAAW,CAAC,OAAqB;QACpC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9B,IAAI,MAAM,IAAI,IAAI,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;SACnD;QACD,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,YAAY,CAAC,OAAqB,EAAE,OAAqB;QAC5D,IAAI,OAAO,KAAK,IAAI,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;SAC3D;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;SACpD;QAED,0DAA0D;QAC1D,IAAI,OAAO,KAAK,OAAO,EAAE;YACrB,OAAO,IAAI,CAAC;SACf;QAED,MAAM,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SACzC;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC7B;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,WAAW,CAAC,IAAkB;QACjC,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACxC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,QAAQ,CAAC,IAAkB;QAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,SAAS,CAAC,IAAkB;QAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;IAKD;;;;;OAKG;IACI,YAAY,CAAoB,QAA8D,EAC7F,UAAU,IAAS;QACvB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3B,OAAO,IAAI,EAAE;YACT,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9B,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;YACtC,IAAI,GAAG,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,CAAC,QAAQ;QACZ,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3B,OAAO,IAAI,EAAE;YACT,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9B,MAAM,IAAI,CAAC;YACX,IAAI,GAAG,IAAI,CAAC;SACf;IACL,CAAC;IAKD;;;;;OAKG;IACI,iBAAiB,CAAoB,QAA+C,EACnF,UAAU,IAAS;;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3B,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE;YAClC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;YAC3B,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBACzB,IAAI,MAAM,KAAK,IAAI,EAAE;oBACjB,MAAM,GAAG,IAAI,CAAC;iBACjB;gBACD,OAAO,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,WAAW,IAAI,IAAI,EAAE;oBACjD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;iBAC1B;gBACD,IAAI,SAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,mCAAI,IAAI,CAAC;aACtC;YACD,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAC7B,IAAI,GAAG,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,CAAC,WAAW;;QACf,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3B,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE;YAClC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;YAC3B,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBACzB,IAAI,MAAM,KAAK,IAAI,EAAE;oBACjB,MAAM,GAAG,IAAI,CAAC;iBACjB;gBACD,OAAO,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,WAAW,IAAI,IAAI,EAAE;oBACjD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;iBAC1B;gBACD,IAAI,SAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,mCAAI,IAAI,CAAC;aACtC;YACD,MAAK,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,GAAG,IAAI,CAAC;SACf;IACL,CAAC;IAMD;;;;;OAKG;IACI,SAAS,CAAoB,QAAiE,EAC7F,UAAU,IAAS;QACvB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3B,OAAO,IAAI,EAAE;YACT,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9B,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE;gBACvC,OAAO,IAAI,CAAC;aACf;YACD,IAAI,GAAG,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,cAAc,CAAC,QAAyC,EAAE,UAAmB,IAAI;;QACpF,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3B,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE;YAClC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;YAC3B,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBACzB,IAAI,MAAM,KAAK,IAAI,EAAE;oBACjB,MAAM,GAAG,IAAI,CAAC;iBACjB;gBACD,OAAO,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,WAAW,IAAI,IAAI,EAAE;oBACjD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;iBAC1B;gBACD,IAAI,SAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,mCAAI,IAAI,CAAC;aACtC;YACD,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;gBAC9B,OAAO,IAAI,CAAC;aACf;YACD,IAAI,GAAG,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACI,YAAY,CAAC,QAAwD,EAAE,UAAe,IAAI;QAC7F,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3B,OAAO,IAAI,EAAE;YACT,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9B,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE;gBACvC,OAAO,IAAI,CAAC;aACf;YACD,IAAI,GAAG,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;;OAIG;IACI,WAAW;QACd,MAAM,QAAQ,GAAmB,EAAE,CAAC;QACpC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3B,OAAO,IAAI,EAAE;YACT,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpB,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;SAC3B;QACD,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED;;;;;OAKG;IACI,iBAAiB,CAAC,EAAU;QAC/B,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED;;;;;OAKG;IACI,oBAAoB,CAAsB,IAAoB;;QACjE,MAAM,WAAW,GAAQ,EAAE,CAAC;QAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3B,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE;YAClC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;YAC3B,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBACzB,IAAI,MAAM,KAAK,IAAI,EAAE;oBACjB,MAAM,GAAG,IAAI,CAAC;iBACjB;gBACD,OAAO,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,WAAW,IAAI,IAAI,EAAE;oBACjD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;iBAC1B;gBACD,IAAI,SAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,mCAAI,IAAI,CAAC;aACtC;YACD,IAAI,IAAI,YAAY,IAAI,EAAE;gBACtB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;YACD,IAAI,GAAG,IAAI,CAAC;SACf;QACD,OAAO,WAAW,CAAC;IACvB,CAAC;IAED;;;;;OAKG;IACO,mBAAmB,CAAC,MAAgB;QAC1C,MAAM,CAAC,SAAS,CAAC,IAAI,iBAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,SAAS,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;QAClD,MAAM,CAAC,SAAS,CAAC,IAAI,iBAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACjE,MAAM,CAAC,SAAS,CAAC,IAAI,iBAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACvD,CAAC;IAED;;;;OAIG;IACI,gBAAgB;QACnB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC7C,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAC3B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC7C,IAAI,CAAC,KAAK,IAAI,eAAe,CAAC,MAAM,CAAC;SACxC;QACD,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAED;;;;OAIG;IACI,SAAS;QACZ,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,SAAS,EAAE,CAAC;IAC/C,CAAC;IAED;;;;OAIG;IACI,qBAAqB;QACxB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;YACnD,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC9C,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;YAChC,KAAK,MAAM,MAAM,IAAI,aAAa,CAAC,QAAQ,EAAE;gBACzC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;aACrD;YACD,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;YACjE,IAAI,CAAC,KAAK,IAAI,eAAe,CAAC,YAAY,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IAED;;;;OAIG;IACI,cAAc;QACjB,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,SAAS,EAAE,CAAC;IACpD,CAAC;IAED;;;;OAIG;IACI,YAAY,CAAC,SAA0B;QAC1C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACI,gBAAgB;QACnB,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE;YACrC,SAAS,CAAC,MAAM,EAAE,CAAC;SACtB;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC;IAChE,CAAC;IAED;;;;OAIG;IACI,aAAa;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED;;;;OAIG;IACI,aAAa,CAAC,UAAmB;QACpC,IAAG,UAAU,KAAK,IAAI,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAChC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,YAAY;QACf,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;IAED;;;;OAIG;IACI,QAAQ,CAAC,KAAoB;QAChC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,CAAC,EAAE;YAC5C,MAAM,IAAI,KAAK,CAAC,qCAAqC,KAAK,EAAE,CAAC,CAAC;SACjE;QACD,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;QAC5C,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACO,iBAAiB;QACvB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;YACpB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;gBACrB,OAAO,CAAC,CAAC;aACZ;iBAAM;gBACH,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC;aAC1C;SACJ;aAAM;YACH,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;IACL,CAAC;IAED;;;;;OAKG;IACI,gBAAgB,CAAC,IAAe;QACnC,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;IACnF,CAAC;IAED;;;;;;OAMG;IACI,aAAa,CAAC,CAAS,EAAE,CAAS;QACrC,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED;;OAEG;IACK,gBAAgB,CAAC,EAAU;QAC/B,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC;QACtC,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,CAAC,GAAG,aAAa,EAAE;YACtB,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;gBAChC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxB,aAAa,EAAE,CAAC;aACnB;iBAAM;gBACH,CAAC,EAAE,CAAC;aACP;SACJ;IACL,CAAC;IAED;;;;;OAKG;IACO,SAAS,CAAC,EAAU,EAAE,IAAY;QACxC,sCAAsC;QACtC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;QAE1B,qBAAqB;QACrB,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAExE,sEAAsE;QACtE,IAAI,UAAU,IAAI,IAAI,EAAE;YACpB,UAAU,EAAE,CAAC;SAChB;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;OAKG;IACO,cAAc,CAAC,EAAU,EAAE,IAAY;QAC7C,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;;OAMG;IACO,MAAM,CAAC,EAAU,EAAE,IAAY,IAAwB,CAAC;IAElE;;;;;OAKG;IACO,UAAU,CAAC,GAA6B;QAC9C,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAExD,sBAAsB;YACtB,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACnD,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,GAAG,CAAC,SAAS,EAAE,CAAC;YAChB,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACxB,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;YAClB,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;YACxB,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACxB,GAAG,CAAC,cAAc,GAAG,cAAc,CAAC;YACpC,GAAG,CAAC,MAAM,EAAE,CAAC;YACb,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC;YAC1B,GAAG,CAAC,cAAc,GAAG,cAAc,GAAG,CAAC,CAAC;YACxC,GAAG,CAAC,MAAM,EAAE,CAAC;YACb,GAAG,CAAC,OAAO,EAAE,CAAC;YACd,GAAG,CAAC,OAAO,EAAE,CAAC;YAEd,wBAAwB;YACxB,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YACrC,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,GAAG,CAAC,SAAS,EAAE,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjB,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;YAClB,GAAG,CAAC,WAAW,GAAG,MAAM,CAAC;YACzB,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACxB,GAAG,CAAC,cAAc,GAAG,cAAc,GAAG,CAAC,CAAC;YACxC,GAAG,CAAC,MAAM,EAAE,CAAC;YACb,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC;YAC1B,GAAG,CAAC,cAAc,GAAG,cAAc,GAAG,CAAC,CAAC;YACxC,GAAG,CAAC,MAAM,EAAE,CAAC;YACb,GAAG,CAAC,OAAO,EAAE,CAAC;YACd,GAAG,CAAC,OAAO,EAAE,CAAC;SACjB;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED;;;;;;;;OAQG;IACO,OAAO,CAAC,GAA6B,EAAE,KAAa,EAAE,KAAa,EAAE,MAAc;QACzF,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,KAAK,IAAI,eAAe,CAAC,SAAS,CAAC;YACxC,OAAO,CAAC,CAAC;SACZ;QAED,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,WAAW,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC9C,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QACzC,GAAG,CAAC,SAAS,CACT,CAAC,CAAC,qBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EACxD,CAAC,CAAC,qBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAC5D,CAAC;QAEF,+GAA+G;QAC/G,uEAAuE;QACvE,IAAI,GAAG,CAAC,YAAY,EAAE;YAClB,MAAM,SAAS,GAAG,GAAG,CAAC,YAAY,EAAE,CAAC;YACrC,GAAG,CAAC,SAAS,CACT,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EACrC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CACxC,CAAC;SACL;QAED,MAAM,QAAQ,GAAG,KAAK,KAAK,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC3F,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,SAAS,CACT,CAAC,qBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAC5D,CAAC,qBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAChE,CAAC;QACF,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACzD,GAAG,CAAC,OAAO,EAAE,CAAC;QACd,IAAI,QAAQ,IAAI,IAAI,EAAE;YAClB,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACnB,KAAK,IAAI,aAAa,CAAC,gBAAgB,CAAC;aAC3C;iBAAM,IAAI,QAAQ,KAAK,KAAK,EAAE;gBAC3B,QAAQ,EAAE,CAAC;aACd;SACJ;QACD,GAAG,CAAC,OAAO,EAAE,CAAC;QACd,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,GAAG,aAAa,CAAC,WAAW,GAAG,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3G,IAAI,CAAC,KAAK,IAAI,eAAe,CAAC,SAAS,CAAC;QACxC,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;;;;;;OAQG;IACO,YAAY,CAAC,GAA6B,EAAE,KAAa,EAAE,KAAa,EAAE,MAAc;QAE9F,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;YACtB,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;;;;;;;;;;;OAaG;IACO,IAAI,CAAC,GAA6B,EAAE,KAAa,EAAE,MAAc,IAC9B,CAAC;CACjD;AAnnDD,8BAmnDC;;;;;;;;;;;;;;;;;ACxuDD,MAAa,MAAM;IAMf,YAAmC,IAAO;QAAP,SAAI,GAAJ,IAAI,CAAG;QALnC,gBAAW,GAA6B,IAAI,CAAC;QAC5C,eAAU,GAAG,IAAI,OAAO,EAAoB,CAAC;QAC7C,WAAM,GAAwB,EAAE,CAAC;QACjC,iBAAY,GAAwB,EAAE,CAAC;IAEF,CAAC;IAEtC,WAAW,CAAI,UAA4B;QAC/C,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAE5C,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SAC1C;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAIY,SAAS,CAAI,UAA4B,EAAE,IAAO;;YAC3D,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;gBAC1B,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;aACvC;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAE3C,MAAM,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,IAAI,KAAK,CAAC,YAAY,IAAI,IAAI,EAAE;gBAC5B,KAAK,CAAC,iBAAiB,GAAG,KAAK,CAAC,YAAY,CAAC;gBAC7C,MAAM,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC1C,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAClC;YAED,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,MAAM,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC3B,CAAC;KAAA;IAEM,gBAAgB;;QACnB,aAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,mCAAI,IAAI,CAAC;IACvD,CAAC;IAEM,QAAQ,CAAkB,IAAoB;;QACjD,OAAO,OAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,YAAY,IAAI,CAAC,mCAAI,IAAI,CAAe,CAAC;IACpF,CAAC;IAEY,QAAQ,CAAC,EAAE,YAAY,GAAG,KAAK,KAAgC,EAAE;;;YAC1E,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YAErC,IAAI,WAAW,IAAI,IAAI,EAAE;gBACrB,MAAM,WAAW,CAAC,UAAU,EAAE,CAAC;gBAE/B,IAAI,CAAC,YAAY,IAAI,WAAW,CAAC,aAAa,IAAI,IAAI,EAAE;oBACpD,WAAW,CAAC,iBAAiB,GAAG,WAAW,CAAC,aAAa,CAAC;oBAC1D,MAAM,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACjD,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAC;iBACxC;gBAED,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,MAAM,WAAW,CAAC,OAAO,EAAE,CAAC;gBAC5B,IAAI,CAAC,WAAW,SAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,mCAAI,IAAI,CAAC;gBAE/D,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;oBAC1B,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;iBACrC;aACJ;YAED,OAAO,WAAW,CAAC;;KACtB;IAIY,QAAQ,CAAI,aAA+B,EAAE,IAAO;;YAC7D,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;YAEtC,IAAI,YAAY,IAAI,IAAI,EAAE;gBACtB,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;aAC9C;YAED,MAAM,YAAY,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,oBAAoB,GAAyB,IAAI,CAAC;YAEtD,IAAI,YAAY,CAAC,aAAa,EAAE;gBAC5B,YAAY,CAAC,iBAAiB,GAAG,YAAY,CAAC,aAAa,CAAC;gBAC5D,oBAAoB,GAAG,YAAY,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACtE;YAED,MAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YACjD,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YACjD,MAAM,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,IAAI,QAAQ,CAAC,YAAY,IAAI,IAAI,EAAE;gBAC/B,QAAQ,CAAC,iBAAiB,GAAG,QAAQ,CAAC,YAAY,CAAC;gBACnD,MAAM,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC7C,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC;aACrC;YAED,MAAM,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAC1B,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;YAE5B,IAAI,oBAAoB,IAAI,IAAI,EAAE;gBAC9B,MAAM,oBAAoB,CAAC;gBAC3B,YAAY,CAAC,iBAAiB,GAAG,IAAI,CAAC;aACzC;YAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,YAAY,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC;KAAA;IAEO,kBAAkB;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE;gBACvB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aAC1D;iBAAM;gBACH,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;aAC9B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;;YAC9B,WAAK,CAAC,iBAAiB,0CAAE,MAAM,CAAC,EAAE,EAAE;YACpC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,IAAI,CAAC,GAA6B,EAAE,KAAa,EAAE,MAAc;QACpE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC9B,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,IAAI,KAAK,CAAC,iBAAiB,IAAI,IAAI,EAAE;gBACjC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;aAC1F;iBAAM;gBACH,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;aAClC;YACD,GAAG,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAjJD,wBAiJC;;;;;;;;;;;;;;;;;ACnJD,qGAA8C;AAC9C,8FAAwE;AAgBxE;;;;GAIG;AACH,MAAa,SAAiC,SAAQ,qBAAY;IAU9D;;OAEG;IACH,YAAmB,EAAyD;YAAzD,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,GAAG,GAAG,OAA0B,EAArB,IAAI,sBAAxC,+BAA0C,CAAF;QACvD,KAAK,mBAAM,IAAI,EAAG,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACI,QAAQ,CAAC,KAAY;QACxB,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,UAAU,CAAC,2BAAe,CAAC,SAAS,CAAC,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACI,QAAQ,CAAC,KAAa;QACzB,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,UAAU,CAAC,2BAAe,CAAC,SAAS,CAAC,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,YAAY;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACI,YAAY,CAAC,SAAiB;QACjC,IAAI,SAAS,KAAK,IAAI,CAAC,SAAS,EAAE;YAC9B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,UAAU,CAAC,2BAAe,CAAC,SAAS,CAAC,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAkB;IACX,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACvB,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,KAAK,EAAE;YACP,QAAQ,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC,WAAW,CAAC,IAAI,iBAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SACzG;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAChF,IAAI,MAAM,GAAG,CAAC,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE;gBACzB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;aACrB;SACJ;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACrB;IACL,CAAC;CACJ;AAxGD,8BAwGC;;;;;;;;;;;;;;;;;AC/HD,8FAAuD;AAoBvD;;;;GAIG;AACH,MAAa,QAAgC,SAAQ,qBAAY;IAa7D;;OAEG;IACH,YAAmB,EAAiF;YAAjF,EAAE,IAAI,EAAE,IAAI,GAAG,EAAE,EAAE,KAAK,GAAG,OAAO,EAAE,YAAY,GAAG,IAAI,OAA0B,EAArB,IAAI,sBAAhE,yCAAkE,CAAF;QAC/E,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACI,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACI,OAAO,CAAC,IAAY;QACvB,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACI,OAAO,CAAC,IAAgB;QAC3B,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACI,QAAQ,CAAC,KAAa;QACzB,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED;;;;OAIG;IACI,eAAe,CAAC,YAA2B;QAC9C,IAAI,YAAY,KAAK,IAAI,CAAC,YAAY,EAAE;YACpC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YACjC,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACK,UAAU;QACd,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IAED,kBAAkB;IACX,IAAI,CAAC,GAA6B;QACrC,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;YAC3B,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SACtF;aAAM;YACH,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SACxD;IACL,CAAC;CACJ;AAnID,4BAmIC;;;;;;;;;;;;;;;;;AC5JD,mGAA8C;AAE9C,oHAAyD;AACzD,gGAAqE;AACrE,8FAAuD;AAUvD,MAAa,iBAAkC,SAAQ,qBAAY;IAI/D;;OAEG;IACH,YAAmB,EAA6C;YAA7C,EAAE,GAAG,EAAE,IAAI,OAAkC,EAA7B,IAAI,sBAApB,eAAsB,CAAF;QACnC,KAAK,iBACD,KAAK,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,YAAY,EAAE,EAC1C,MAAM,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,GAAG,CAAC,aAAa,EAAE,EAC7C,MAAM,EAAE,qBAAS,CAAC,QAAQ,IACvB,IAAI,EACT,CAAC;QAKC,gBAAW,GAA6B,IAAI,CAAC;QAJjD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAIO,cAAc;QAClB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;YAC1B,MAAM,MAAM,GAAG,uBAAY,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;YAC5H,MAAM,GAAG,GAAG,8BAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,+BAAc,CAAC,CAAC;YAC3D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,YAAY,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;YACxC,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvB,OAAO,IAAI,CAAC;aACf;YACD,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;YAC7B,MAAM,MAAM,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;YACjC,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC/B,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;gBACxC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE;oBACvC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;oBACjC,MAAM,MAAM,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;oBAC3D,IAAI,MAAM,GAAG,CAAC,EAAE;wBACZ,SAAS;qBACZ;oBACD,MAAM,mBAAmB,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;oBAChD,MAAM,iBAAiB,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;oBAC9C,MAAM,iBAAiB,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;oBAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC;oBACxD,MAAM,KAAK,GAAG,MAAM,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBAC5C,GAAG,CAAC,IAAI,EAAE,CAAC;oBACX,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;oBACvE,IAAI,mBAAmB,IAAI,iBAAiB,EAAE;wBAC1C,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;wBACzC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACjB,oCAAoC;qBACvC;oBACD,IAAI,iBAAiB,IAAI,iBAAiB,EAAE;wBACxC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;wBAC1C,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;qBAEpB;oBACD,GAAG,CAAC,SAAS,CACT,YAAY,EACZ,KAAK,GAAG,OAAO,CAAC,YAAY,EAAE,EAAE,KAAK,GAAG,OAAO,CAAC,aAAa,EAAE,EAAE,OAAO,CAAC,YAAY,EAAE,EAAE,OAAO,CAAC,aAAa,EAAE,EAChH,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,YAAY,EAAE,EAAE,OAAO,CAAC,aAAa,EAAE,CACxD,CAAC;oBACF,GAAG,CAAC,OAAO,EAAE,CAAC;iBACjB;aACJ;YACD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;SAC7B;QACD,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAEM,IAAI,CAAC,GAA6B;QACrC,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1C,IAAI,WAAW,IAAI,IAAI,EAAE;YACrB,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACpC;IACL,CAAC;CACJ;AA5ED,8CA4EC;;;;;;;;;;;;;;;;;AC1FD,mGAA8C;AAG9C,yIAAuE;AACvE,oHAAyD;AACzD,oFAAuC;AACvC,8FAAuD;AACvD,sHAAwD;AAcxD,MAAa,YAA6B,SAAQ,qBAAY;IAC1D;;OAEG;IACH,YAAmB,EAA8C;;YAA9C,EAAE,GAAG,EAAE,OAAO,OAAgC,EAA3B,IAAI,sBAAvB,kBAAyB,CAAF;QACtC,KAAK,iBACD,KAAK,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,YAAY,EAAE,EAC1C,MAAM,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,GAAG,CAAC,aAAa,EAAE,EAC7C,MAAM,EAAE,qBAAS,CAAC,QAAQ,EAC1B,WAAW,EAAE,qBAAS,CAAC,QAAQ,IAC5B,IAAI,EACT,CAAC;QACH,KAAK,MAAM,UAAU,IAAI,GAAG,CAAC,SAAS,EAAE,EAAE;YACtC,MAAM,KAAK,SAAG,UAAU,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC,0CAAE,QAAQ,EAAE,CAAC;YACzE,IAAI,UAAU,YAAY,+BAAc,EAAE;gBACtC,IAAI,CAAC,WAAW,CAAC,IAAI,qCAAiB,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;aACvF;iBAAM,IAAI,UAAU,YAAY,6CAAqB,EAAE;gBACpD,KAAK,MAAM,MAAM,IAAI,UAAU,CAAC,UAAU,EAAE,EAAE;oBAC1C,MAAM,WAAW,SAAG,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,mCAAI,qBAAS,CAAC;oBACtF,MAAM,IAAI,GAAmB;wBACzB,EAAE,EAAE,MAAM,CAAC,OAAO,EAAE;wBACpB,CAAC,EAAE,MAAM,CAAC,IAAI,EAAE;wBAChB,CAAC,EAAE,MAAM,CAAC,IAAI,EAAE;wBAChB,UAAU,QAAE,MAAM,CAAC,mBAAmB,CAAC,YAAY,EAAE,MAAM,CAAC,0CAAE,QAAQ,EAAE;wBACxE,KAAK;wBACL,WAAW,EAAE,MAAM;qBACtB,CAAC;oBACF,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;oBAChC,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;oBAClC,IAAI,KAAK,GAAG,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;wBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;wBACrB,IAAI,CAAC,MAAM,GAAG,qBAAS,CAAC,QAAQ,CAAC;qBACpC;oBACD,MAAM,IAAI,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;oBACnC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,cAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC7D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;iBAC1B;aACJ;iBAAM,IAAI,UAAU,YAAY,MAAM,EAAE;gBACrC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aAC7D;SACJ;IACL,CAAC;CACJ;AA3CD,oCA2CC;;;;;;;;;;;;;;;;ACjED,gGAAoD;AAuBpD;;;;GAIG;AACH,MAAa,QAAQ;IA4BjB;;;;;OAKG;IACH,YAAmB,QAA6B,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,EAAE,MAAM,GAAG,gBAAM,KAAmB,EAAE;QAlBjH,kEAAkE;QAC1D,YAAO,GAAW,CAAC,CAAC;QAK5B,oEAAoE;QAC5D,mBAAc,GAAyC,IAAI,CAAC;QAEpE,oDAAoD;QAC5C,aAAQ,GAAY,KAAK,CAAC;QAS9B,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YACjC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC;IACrC,CAAC;IAED,kBAAkB;IACX,MAAM,CAAC,MAAS,EAAE,EAAU;QAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;YACnB,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE;gBAC9B,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE;oBAC3B,MAAM,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;oBACpE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC/D;gBACD,OAAO,KAAK,CAAC;aAChB;iBAAM;gBACH,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;oBAC7B,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACxC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC9B;gBACD,OAAO,IAAI,CAAC;aACf;SACJ;aAAM;YACH,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;gBAC7B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC9B;YACD,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAED,kBAAkB;IACX,MAAM;QACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,kBAAkB;IACX,MAAM;QACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,kBAAkB;IACX,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,kBAAkB;IACX,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;IACzC,CAAC;IAED,kBAAkB;IACX,UAAU;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,kBAAkB;IACX,SAAS;QACZ,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC1D,CAAC;CACJ;AArGD,4BAqGC;;;;;;;;;;;;;;;;ACjID,MAAa,aAAa;IAA1B;QACY,SAAI,GAAW,CAAC,CAAC;QACjB,WAAM,GAAW,CAAC,CAAC;QACnB,WAAM,GAAW,CAAC,CAAC;QACnB,YAAO,GAAW,CAAC,CAAC;QACpB,aAAQ,GAAW,GAAG,CAAC;IA+CnC,CAAC;IA7CW,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ;QAC/C,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,KAA6C,EAAE;QACzE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACvC,CAAC;IAEM,IAAI,CAAC,EAAE,QAAQ,KAA4B,EAAE;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IAClC,CAAC;IAEM,GAAG,CAAC,MAAc;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAClD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,MAAM,CAAC,EAAU;QACpB,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,MAAM,EAAE;YAC9B,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;YACtE,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;gBAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;aAC7D;iBAAM;gBACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;aAC7D;YACD,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;SACnB;IACL,CAAC;IAEM,IAAI,CAAC,GAA6B,EAAE,KAAa,EAAE,MAAc;QACpE,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE;YAClB,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;YACxB,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YAClC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;YAC/B,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,GAAG,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;YAC1C,GAAG,CAAC,OAAO,EAAE,CAAC;YACd,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;AApDD,sCAoDC;;;;;;;;;;;;;;;;ACpDD,MAAa,WAAW;IAAxB;QACY,UAAK,GAAW,OAAO,CAAC;QACxB,SAAI,GAAW,CAAC,CAAC;QACjB,WAAM,GAAW,CAAC,CAAC;QACnB,WAAM,GAAW,CAAC,CAAC;QACnB,YAAO,GAAW,CAAC,CAAC;QACpB,aAAQ,GAAW,GAAG,CAAC;QACvB,YAAO,GAAyB,IAAI,CAAC;QACrC,mBAAc,GAAwB,IAAI,CAAC;IAwDvD,CAAC;IAtDW,IAAI,CAAC,MAAc,EAAE,QAAgB;QACzC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;gBACjC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;YAClC,CAAC,CAAC,CAAC;SACN;QACD,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEM,OAAO,CAAC,EAAE,QAAQ,GAAG,GAAG,EAAE,KAAK,GAAG,OAAO,EAAE,GAAG,EAAE;QACnD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IAClC,CAAC;IAEM,MAAM,CAAC,EAAE,QAAQ,GAAG,GAAG,EAAE,GAAG,EAAE;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IAClC,CAAC;IAEM,GAAG,CAAC,OAAe,EAAE,KAAK,GAAG,OAAO;QACvC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACnD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,MAAM,CAAC,EAAU;QACpB,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,MAAM,EAAE;YAC9B,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;YACtE,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;gBAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;aAC7D;iBAAM;gBACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;aAC7D;YACD,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;SACnB;aAAM,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YACpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC9B;IACL,CAAC;IAEM,IAAI,CAAC,GAA6B,EAAE,KAAa,EAAE,MAAc;QACpE,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE;YAClB,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3B,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;YAC/B,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YAClC,GAAG,CAAC,OAAO,EAAE,CAAC;SACjB;QACD,OAAO,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,MAAM,CAAC;IACxC,CAAC;CACJ;AAhED,kCAgEC;;;;;;;;;;;;;;;;AC/DD,6FAA2C;AAC3C,6HAAwD;AACxD,yIAAgE;AAGhE,MAAa,qBAAuD,SAAQ,qCAAuB;IAAnG;;QACoB,kBAAa,GAAG,IAAI,eAAM,CAA8B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACzF,iBAAY,GAAG,IAAI,eAAM,CAA6B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IA+B1G,CAAC;IA7BW,eAAe,CAAC,MAA2C;QAC/D,MAAM,QAAQ,GAAG,CAAC,KAAmB,EAAE,EAAE;YACrC,MAAM,CAAC,IAAI,CAAC,IAAI,6CAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC;QACF,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;QACtC,MAAM,OAAO,GAAG,GAAG,EAAE;YACjB,MAAM,CAAC,mBAAmB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;YACpD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CAAC;QACF,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QACjD,OAAO,OAAO,CAAC;IACnB,CAAC;IAEO,cAAc,CAAC,MAA0C;QAC7D,MAAM,QAAQ,GAAG,CAAC,KAAmB,EAAE,EAAE;YACrC,MAAM,CAAC,IAAI,CAAC,IAAI,6CAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;YAC1D,OAAO,EAAE,CAAC;QACd,CAAC,CAAC;QACF,MAAM,OAAO,GAAG,GAAG,EAAE;YACjB,MAAM,CAAC,mBAAmB,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;YACtD,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;YAClD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAC3B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC9B,CAAC,CAAC;QACF,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;QACtC,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAC/C,MAAM,CAAC,gBAAgB,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;QACnD,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ;AAjCD,sDAiCC;;;;;;;;;;;;;;;;ACtCD,wGAAkE;AAGlE,MAAa,iBAAiB;IAG1B,YACuB,KAAkB,EAClB,KAAmB;QADnB,UAAK,GAAL,KAAK,CAAa;QAClB,UAAK,GAAL,KAAK,CAAc;QAEtC,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;QACjC,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC;QACjD,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC;QACnD,MAAM,oBAAoB,GAAG,KAAK,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;QACnE,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAO,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAC9G,CAAC;IAEM,IAAI;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC3B,CAAC;IAEM,IAAI;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC3B,CAAC;IAEM,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;CACJ;AAzBD,8CAyBC;;;;;;;;;;;;;;;;AC5BD,6HAAwD;AAExD,MAAa,qBAAuD,SAAQ,qCAAuB;CAClG;AADD,sDACC;;;;;;;;;;;;;;;;ACDD,gHAAoD;AAEpD,MAAsB,kBACd,SAAQ,iCAA+B;IAC3C,YAAsC,IAAO,EAAqB,OAAqB;QACnF,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QADa,SAAI,GAAJ,IAAI,CAAG;QAAqB,YAAO,GAAP,OAAO,CAAc;IAEvF,CAAC;IAEM,MAAM;QACT,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;IAEM,KAAK;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IACxB,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;IAEM,IAAI;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC;IAEM,IAAI;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAC3B,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;CACJ;AArDD,gDAqDC;;;;;;;;;;;;;;;;;AC1DD,uHAA+B;AAC/B,wGAAwB;AAIxB,MAAa,UAAU;IAGnB,YACqB,IAAoB,EACpB,WAAoC;QADpC,SAAI,GAAJ,IAAI,CAAgB;QACpB,gBAAW,GAAX,WAAW,CAAyB;QAJjD,YAAO,GAAuB,IAAI,CAAC;IAKxC,CAAC;IAEG,MAAM,CAAC,QAAQ,CAAC,IAAoB,EAAE,WAAoC;QAC7E,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IAC7C,CAAC;IAEM,MAAM;QACT,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAEM,OAAO;QACV,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACtB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,IAAI,OAAoB,CAAC;YACzB,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAC/B,MAAM,UAAU,GAAG,mBAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjD,IAAI,YAAwB,CAAC;gBAC7B,QAAQ,IAAI,CAAC,WAAW,EAAE;oBACtB,KAAK,EAAE;wBACH,yBAAyB;wBACzB,YAAY,GAAG,UAAU,CAAC;wBAC1B,MAAM;oBACV,KAAK,MAAM;wBACP,YAAY,GAAG,cAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;wBACvC,MAAM;oBACV,KAAK,MAAM;wBACP,YAAY,GAAG,cAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;wBACxC,MAAM;oBACV;wBACI,yFAAyF;wBACzF,6CAA6C;wBAC7C,MAAM,IAAI,KAAK,CAAC,6BAA6B,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;iBACzE;gBACD,OAAO,GAAG,IAAI,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aAClD;iBAAM;gBACH,OAAO,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACxC;YACD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAC3B,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;IAEM,IAAI;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC;IAEM,IAAI;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC;CACJ;AA/DD,gCA+DC;;;;;;;;;;;;;;;;AClED,yHAA0D;AAE1D,SAAgB,qBAAqB,CAAC,IAAoB;IACtD,OAAO,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC;AACjC,CAAC;AAFD,sDAEC;AAED,MAAa,eAAgB,SAAQ,uCAAuC;IACjE,MAAM,CAAC,QAAQ,CAAC,IAAyB,EAAE,OAAqB;QACnE,OAAO,IAAI,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC9C,CAAC;CACJ;AAJD,0CAIC;;;;;;;;;;;;;;;;ACVD,yHAA0D;AAE1D,SAAgB,qBAAqB,CAAC,IAAoB;IACtD,OAAO,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC;AACtC,CAAC;AAFD,sDAEC;AAED,MAAa,eAAgB,SAAQ,uCAAuC;IACjE,MAAM,CAAC,QAAQ,CAAC,IAAyB,EAAE,OAAqB;QACnE,OAAO,IAAI,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC9C,CAAC;CACJ;AAJD,0CAIC;;;;;;;;;;;;;;;;ACTD,gHAA2E;AAC3E,gHAA2E;AAC3E,oGAA4D;AAC5D,kIAAgE;AAEhE,6GAAwE;AAqBxE,IAAiB,UAAU,CAc1B;AAdD,WAAiB,UAAU;IACvB,SAAgB,QAAQ,CAAC,IAAoB,EAAE,OAAqB;QAChE,IAAI,uCAAqB,CAAC,IAAI,CAAC,EAAE;YAC7B,OAAO,iCAAe,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SAClD;aAAM,IAAI,qCAAoB,CAAC,IAAI,CAAC,EAAE;YACnC,OAAO,+BAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SACjD;aAAM,IAAI,yCAA2B,CAAC,IAAI,CAAC,EAAE;YAC1C,OAAO,6CAAqB,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SACxD;aAAM,IAAI,uCAAqB,CAAC,IAAI,CAAC,EAAE;YACpC,OAAO,iCAAe,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SAClD;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,4BAA4B,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7D;IACL,CAAC;IAZe,mBAAQ,WAYvB;AACL,CAAC,EAdgB,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAc1B;;;;;;;;;;;;;;;;;ACxCD,yFAAuC;AAGvC,uFAA4C;AAG5C,iGAA0C;AAC1C,gHAAoD;AACpD,uGAA8C;AAE9C,MAAa,QAAS,SAAQ,iCAA6B;IAChD,MAAM,CAAC,QAAQ,CAAC,IAAkB,EAAE,OAAqB;QAC5D,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACvC,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAO,IAAI,CAAC,MAAc;;YACnC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAkB,CAAC;YAChE,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC/C,OAAO,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC5C,CAAC;KAAA;IACD;;;;OAIG;IAEI,kBAAkB;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,CAAC,CAAC,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACzG,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACI,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;IAED;;;;OAIG;IACI,gBAAgB;;QACnB,aAAO,IAAI,CAAC,IAAI,CAAC,aAAa,mCAAI,IAAI,CAAC;IAC3C,CAAC;IAED;;;;OAIG;IACI,UAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAED;;;;OAIG;IACI,cAAc;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACI,cAAc;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACI,cAAc;;QACjB,aAAO,IAAI,CAAC,IAAI,CAAC,WAAW,mCAAI,IAAI,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACI,eAAe;;QAClB,aAAO,IAAI,CAAC,IAAI,CAAC,YAAY,mCAAI,IAAI,CAAC;IAC1C,CAAC;IAED;;;;OAIG;IACI,eAAe;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;IAClC,CAAC;IAED;;;;OAIG;IACI,YAAY;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IAC/B,CAAC;IAED;;;;OAIG;IACI,aAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IAChC,CAAC;IAED;;;;OAIG;IAEI,WAAW;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,2BAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACrF,CAAC;IAGM,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,uBAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACjF,CAAC;IAEM,eAAe,CAAuB,IAAoB;QAC7D,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,EAAc,EAAE,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC;IACjF,CAAC;IAED;;;;;;OAMG;IACI,QAAQ,CAAuB,IAAY,EAAE,IAAwB;QACxE,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,CAAC;QACvE,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,2BAA2B,IAAI,SAAS,CAAC,CAAC;SAC7D;QACD,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,YAAY,IAAI,CAAC,EAAE;YAC1C,MAAM,IAAI,KAAK,CACX,6BAA6B,IAAI,oBAAoB,IAAI,CAAC,IAAI,aAAa,KAAK,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;SAC7G;QACD,OAAO,KAAU,CAAC;IACtB,CAAC;CACJ;AA5IG;IADC,mBAAW;;;;kDAGX;AA2GD;IADC,mBAAW;;;;2CAGX;AAGD;IADC,mBAAW;;;;yCAGX;AA1IL,4BAkKC;;;;;;;;;;;;;;;;;AC9KD,wGAAgD;AAChD,qGAA8C;AAC9C,uFAA4C;AAC5C,gHAAoD;AAEpD,SAAgB,2BAA2B,CAAC,IAAoB;IAC5D,OAAO,IAAI,CAAC,IAAI,KAAK,aAAa,CAAC;AACvC,CAAC;AAFD,kEAEC;AAED,MAAa,WAAY,SAAQ,iCAAgC;IACtD,MAAM;QACT,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,IAAqB,EAAE,OAAqB;QAC/D,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC1C,CAAC;IAGM,UAAU;QACb,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YAC3B,OAAO,IAAI,CAAC;SACf;QACD,MAAM,OAAO,GAAG,IAAI,mBAAQ,EAAE,CAAC;QAC/B,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACnC,OAAO,CAAC,SAAS,CAAC,IAAI,iBAAO,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACpD;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC;IACtC,CAAC;IAEM,KAAK;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IACxB,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAC3B,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;IAEM,IAAI;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC;IAEM,IAAI;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC;IAEM,WAAW;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC9B,CAAC;CACJ;AAlDG;IADC,mBAAW;;;;6CAUX;AAnBL,kCA4DC;;;;;;;;;;;;;;;;;ACrED,uFAA4C;AAE5C,yHAA0D;AAC1D,oGAA4C;AAE5C,SAAgB,2BAA2B,CAAC,IAAoB;IAC5D,OAAO,IAAI,CAAC,IAAI,KAAK,aAAa,CAAC;AACvC,CAAC;AAFD,kEAEC;AAED,MAAa,qBAAsB,SAAQ,uCAA6C;IAC7E,MAAM,CAAC,QAAQ,CAAC,IAA+B,EAAE,OAAqB;QACzE,OAAO,IAAI,qBAAqB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAEM,YAAY;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IAC/B,CAAC;IAGM,UAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,yBAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACnF,CAAC;CACJ;AAHG;IADC,mBAAW;;;;uDAGX;AAZL,sDAaC;;;;;;;;;;;;;;;;;ACtBD,uFAA4C;AAE5C,0GAAgD;AAEhD,MAAsB,eAAe;IACjC,YAAyC,IAAO,EAAqB,OAAqB;QAAjD,SAAI,GAAJ,IAAI,CAAG;QAAqB,YAAO,GAAP,OAAO,CAAc;IAAG,CAAC;IAEvF,MAAM;QACT,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;;OAIG;IAEI,aAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,6BAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC9G,CAAC;IAED;;;;;;OAMG;IACI,WAAW,CAAkD,IAAY,EAAE,IAAQ;QACtF,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,IAAI,QAAQ,IAAI,IAAI,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,8BAA8B,IAAI,SAAS,CAAC,CAAC;SAChE;QACD,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED;;;;;;OAMG;IACI,mBAAmB,CAAkD,IAAY,EAAE,IAAQ;QAE9F,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,CAAC;QACpF,IAAI,QAAQ,IAAI,IAAI,EAAE;YAClB,OAAO,IAAI,CAAC;SACf;QACD,IAAI,IAAI,IAAI,IAAI,IAAI,QAAQ,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;YAC7C,MAAM,IAAI,KAAK,CACX,gCAAgC,IAAI,oBAAoB,IAAI,aAAa,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;SACvG;QACD,OAAO,QAA4B,CAAC;IACxC,CAAC;IAED;;;;;OAKG;IACI,WAAW,CAAC,IAAY;QAC3B,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC;IACxF,CAAC;CACJ;AAhDG;IADC,mBAAW;;;;oDAGX;AAfL,0CA6DC;;;;;;;;;;;;;;;;ACjED,yFAAuC;AASvC,MAAa,aAAa;IACtB,YAAoC,IAA0B;QAA1B,SAAI,GAAJ,IAAI,CAAsB;IAAG,CAAC;IAE3D,MAAM,CAAC,QAAQ,CAA8B,IAA0B;QAC1E,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAEM,MAAM;QACT,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;IAEM,QAAQ;QACX,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CACnE,CAAC;IAClC,CAAC;IAEM,OAAO;;QACV,aAAO,IAAI,CAAC,IAAI,CAAC,IAAI,mCAAI,QAAa,CAAC;IAC3C,CAAC;IAEM,KAAK;QACR,OAAO,IAAI,CAAC,OAAO,EAAE,KAAK,KAAK,CAAC;IACpC,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,OAAO,EAAE,KAAK,OAAO,CAAC;IACtC,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,OAAO,EAAE,KAAK,MAAM,CAAC;IACrC,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,OAAO,EAAE,KAAK,QAAQ,CAAC;IACvC,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,OAAO,EAAE,KAAK,OAAO,CAAC;IACtC,CAAC;IAEM,MAAM;QACT,OAAO,IAAI,CAAC,OAAO,EAAE,KAAK,MAAM,CAAC;IACrC,CAAC;CACJ;AA/CD,sCA+CC;;;;;;;;;;;;;;;;;ACzDD,uHAA+B;AAC/B,wGAAwB;AAIxB,yHAA0D;AAC1D,iGAA0C;AAC1C,uFAA4C;AAE5C,SAAgB,oBAAoB,CAAC,IAAoB;IACrD,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC;AACrC,CAAC;AAFD,oDAEC;AAED,MAAa,cAAe,SAAQ,uCAAsC;IAC/D,MAAM,CAAC,QAAQ,CAAC,IAAwB,EAAE,OAAqB;QAClE,OAAO,IAAI,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC7C,CAAC;IAGM,OAAO;QACV,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,OAAoB,CAAC;QACzB,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;YAC/B,MAAM,UAAU,GAAG,mBAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,YAAwB,CAAC;YAC7B,QAAQ,IAAI,CAAC,WAAW,EAAE;gBACtB,KAAK,EAAE;oBACH,yBAAyB;oBACzB,YAAY,GAAG,UAAU,CAAC;oBAC1B,MAAM;gBACV,KAAK,MAAM;oBACP,YAAY,GAAG,cAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBACvC,MAAM;gBACV,KAAK,MAAM;oBACP,YAAY,GAAG,cAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;oBACxC,MAAM;gBACV;oBACI,yFAAyF;oBACzF,6CAA6C;oBAC7C,MAAM,IAAI,KAAK,CAAC,6BAA6B,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;aACzE;YACD,OAAO,GAAG,IAAI,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SAClD;aAAM;YACH,OAAO,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxC;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAGM,SAAS;;QACZ,mBAAO,IAAI,CAAC,IAAI,CAAC,MAAM,0CAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,uBAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,oCAAK,IAAI,CAAC;IACnG,CAAC;IAEM,cAAc;;QACjB,aAAO,IAAI,CAAC,IAAI,CAAC,WAAW,mCAAI,IAAI,CAAC;IACzC,CAAC;IAEM,SAAS;;QACZ,aAAO,IAAI,CAAC,IAAI,CAAC,MAAM,mCAAI,IAAI,CAAC;IACpC,CAAC;IAEM,SAAS;;QACZ,aAAO,IAAI,CAAC,IAAI,CAAC,MAAM,mCAAI,IAAI,CAAC;IACpC,CAAC;CACJ;AA7CG;IADC,mBAAW;;;4CACM,WAAW;6CA2B5B;AAGD;IADC,mBAAW;;;;+CAGX;AAtCL,wCAmDC;;;;;;;;;;;;;;;;;AC/DD,yFAAuC;AAEvC,kGAA6C;AAC7C,uFAA4C;AAC5C,gGAA6C;AAE7C,MAAa,YAAY;IAGrB,YACqB,IAAsB,EACtB,OAAqB;QADrB,SAAI,GAAJ,IAAI,CAAkB;QACtB,YAAO,GAAP,OAAO,CAAc;QAJlC,UAAK,GAA4B,IAAI,CAAC;IAK3C,CAAC;IAEG,MAAM,CAAC,QAAQ,CAAC,IAAsB,EAAE,OAAqB;QAChE,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC3C,CAAC;IAEM,MAAM;QACT,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;;OAIG;IAEI,kBAAkB;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,CAAC,CAAC,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACzG,CAAC;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;IAEM,WAAW;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAGY,SAAS;;YAClB,IAAI,CAAC,KAAK,GAAG,MAAM,oBAAS,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACrE,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;KAAA;IAEM,QAAQ;QACX,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;YACrB,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;QACD,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,WAAW;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAC3B,CAAC;IAEM,aAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IAChC,CAAC;IAEM,cAAc;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;IACjC,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;IAEM,SAAS;;QACZ,aAAO,IAAI,CAAC,IAAI,CAAC,MAAM,mCAAI,IAAI,CAAC;IACpC,CAAC;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;IAEM,YAAY;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IAC/B,CAAC;IAEM,eAAe;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;IAClC,CAAC;IAEM,YAAY;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IAC/B,CAAC;IAEM,aAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IAChC,CAAC;IAED;;;;OAIG;IAEI,oBAAoB;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC,mBAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACrG,CAAC;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;CACJ;AA9EG;IADC,mBAAW;;;;sDAGX;AAWD;IADC,mBAAW;;;;6CAIX;AAuDD;IADC,mBAAW;;;;wDAGX;AA/FL,oCAoGC;;;;;;;;;;;;;;;;AC3GD;;GAEG;AACH,MAAM,IAAI;IACN,YAA0B,QAA4B,EAAS,OAAgB;QAArD,aAAQ,GAAR,QAAQ,CAAoB;QAAS,YAAO,GAAP,OAAO,CAAS;IAAG,CAAC;IAC5E,IAAI,CAAC,KAAQ;QAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C,CAAC;CACJ;AAED;;;;;GAKG;AACH,MAAa,MAAM;IAKf;;;;;;OAMG;IACH,YAAmB,MAAmD;QAXrD,UAAK,GAAc,EAAE,CAAC;QAE/B,WAAM,GAAyC,IAAI,CAAC;QAUxD,IAAI,CAAC,MAAM,GAAG,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,IAAI,CAAC;IACjC,CAAC;IAED;;;;;;OAMG;IACI,OAAO,CAAC,QAA4B,EAAE,OAAgB;QACzD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;SAC3C;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;QAC7C,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED;;;;;OAKG;IACI,UAAU,CAAC,QAA4B,EAAE,OAAgB;QAC5D,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC;QACnG,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC/B;QACD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACtB;IACL,CAAC;IAED;;OAEG;IACI,KAAK;QACR,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;YACtB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;gBACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACtB;SACJ;IACL,CAAC;IAED;;;;OAIG;IACI,IAAI,CAAC,KAAQ;QAChB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACjD,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,SAAgC;QAC1C,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC7C,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;gBAClB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACtB;QACL,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED;;;;;OAKG;IACI,GAAG,CAAI,MAAuB;QACjC,OAAO,IAAI,MAAM,CAAI,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAChD,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;CACJ;AA/FD,wBA+FC;;;;;;;;;;;;;;;;AC/GD;;;;GAIG;AACH,SAAgB,WAAW,CAAC,MAA2B,EAAE,WAAmB,EACpE,UAA8C;IAClD,MAAM,UAAU,GAAG,MAAM,CAAC,WAAW,CAAe,CAAC;IACrD,UAAU,CAAC,KAAK,GAAG;QACf,MAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAY,CAAC;QACnD,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,EAAE;YACrC,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE,GAAG,EAAE,CAAC,SAAS;SACzB,CAAC,CAAC;QACH,OAAO,SAAS,CAAC;IACrB,CAAC,CAAC;AACN,CAAC;AAXD,kCAWC;;;;;;;;;;;;;;;;AChBD,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;AAI9B,SAAgB,MAAM,CAAC,CAAS;IAC5B,OAAO,CAAC,CAAC;AACb,CAAC;AAFD,wBAEC;AAED,SAAgB,UAAU,CAAC,CAAS;IAChC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAC/B,CAAC;AAFD,gCAEC;AAED,SAAgB,WAAW,CAAC,CAAS;IACjC,OAAO,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAC3B,CAAC;AAFD,kCAEC;AAED,SAAgB,aAAa,CAAC,CAAS;IACnC,OAAO,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,CAAC;AAFD,sCAEC;AAED,SAAgB,UAAU,CAAC,CAAS;IAChC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjB,CAAC;AAFD,gCAEC;AAED,SAAgB,WAAW,CAAC,CAAS;IACjC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACvB,CAAC;AAFD,kCAEC;AAED,SAAgB,aAAa,CAAC,CAAS;IACnC,IAAI,CAAC,GAAG,GAAG,EAAE;QACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACpB;SAAM;QACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAChC;AACL,CAAC;AAND,sCAMC;AAED,SAAgB,WAAW,CAAC,CAAS;IACjC,OAAO,UAAC,EAAI,CAAC,EAAC;AAClB,CAAC;AAFD,kCAEC;AAED,SAAgB,YAAY,CAAC,CAAS;IAClC,OAAO,UAAC,EAAI,CAAC,IAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC,CAAC;AAFD,oCAEC;AAED,SAAgB,cAAc,CAAC,CAAS;IACpC,IAAI,CAAC,GAAG,GAAG,EAAE;QACT,OAAO,CAAC,GAAG,UAAC,EAAI,CAAC,EAAC;KACrB;SAAM;QACH,OAAO,CAAC,GAAG,UAAC,EAAI,CAAC,IAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;KAC5C;AACL,CAAC;AAND,wCAMC;AAED,SAAgB,WAAW,CAAC,CAAS;IACjC,OAAO,UAAC,EAAI,CAAC,EAAC;AAClB,CAAC;AAFD,kCAEC;AAED,SAAgB,YAAY,CAAC,CAAS;IAClC,OAAO,CAAC,GAAG,UAAC,CAAC,GAAG,CAAC,CAAC,EAAI,CAAC,EAAC;AAC5B,CAAC;AAFD,oCAEC;AAED,SAAgB,cAAc,CAAC,CAAS;IACpC,IAAI,CAAC,GAAG,GAAG,EAAE;QACT,OAAO,CAAC,GAAG,UAAC,EAAI,CAAC,EAAC;KACrB;SAAM;QACH,OAAO,CAAC,GAAG,CAAC,GAAG,UAAC,CAAC,GAAG,CAAC,CAAC,EAAI,CAAC,EAAC;KAC/B;AACL,CAAC;AAND,wCAMC;AAED,SAAgB,WAAW,CAAC,CAAS;IACjC,OAAO,UAAC,EAAI,CAAC,EAAC;AAClB,CAAC;AAFD,kCAEC;AAED,SAAgB,YAAY,CAAC,CAAS;IAClC,OAAO,CAAC,GAAG,UAAC,CAAC,GAAG,CAAC,CAAC,EAAI,CAAC,EAAC;AAC5B,CAAC;AAFD,oCAEC;AAED,SAAgB,cAAc,CAAC,CAAS;IACpC,IAAI,CAAC,GAAG,GAAG,EAAE;QACT,OAAO,EAAE,GAAG,UAAC,EAAI,CAAC,EAAC;KACtB;SAAM;QACH,OAAO,CAAC,GAAG,EAAE,GAAG,UAAC,CAAC,GAAG,CAAC,CAAC,EAAI,CAAC,EAAC;KAChC;AACL,CAAC;AAND,wCAMC;AAED,SAAgB,UAAU,CAAC,CAAS;IAChC,IAAI,CAAC,IAAI,CAAC,EAAE;QAAE,OAAO,CAAC,CAAC;KAAE;IACzB,OAAO,UAAC,EAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;AAC/B,CAAC;AAHD,gCAGC;AAED,SAAgB,WAAW,CAAC,CAAS;IACjC,IAAI,CAAC,IAAI,CAAC,EAAE;QACR,OAAO,CAAC,CAAC;KACZ;IACD,OAAO,CAAC,GAAG,CAAC,GAAG,aAAI,EAAI,CAAC,EAAC;AAC7B,CAAC;AALD,kCAKC;AAED,SAAgB,aAAa,CAAC,CAAS;IACnC,IAAI,CAAC,IAAI,CAAC,EAAE;QACR,OAAO,CAAC,CAAC;KACZ;IACD,IAAI,CAAC,IAAI,CAAC,EAAE;QACR,OAAO,CAAC,CAAC;KACZ;IACD,IAAI,CAAC,GAAG,GAAG,EAAE;QACT,OAAO,gBAAO,EAAI,CAAC,IAAG,IAAI,CAAC;KAC9B;SAAM;QACH,OAAO,CAAC,GAAG,GAAG,GAAG,gBAAO,EAAI,CAAC,EAAC;KACjC;AACL,CAAC;AAZD,sCAYC;AAED,SAAgB,UAAU,CAAC,CAAS;IAChC,OAAO,CAAC,GAAG,UAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAI,GAAG,EAAC;AAClC,CAAC;AAFD,gCAEC;AAED,SAAgB,WAAW,CAAC,CAAS;IACjC,OAAO,UAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAI,GAAG,EAAC;AAClC,CAAC;AAFD,kCAEC;AAED,SAAgB,aAAa,CAAC,CAAS;IACnC,IAAI,CAAC,GAAG,GAAG,EAAE;QACT,OAAO,GAAG,GAAG,UAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAI,GAAG,EAAC;KACtC;SAAM;QACH,OAAO,CAAC,UAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAI,GAAG,IAAG,CAAC,CAAC,GAAG,CAAC,CAAC;KACjD;AACL,CAAC;AAND,sCAMC;AAED,SAAgB,UAAU,CAAC,CAAS;IAChC,OAAO,OAAO,GAAG,UAAC,EAAI,CAAC,IAAG,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AAC9C,CAAC;AAFD,gCAEC;AAED,SAAgB,WAAW,CAAC,CAAS;IACjC,OAAO,OAAO,GAAG,UAAC,EAAI,CAAC,IAAG,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;AAC5D,CAAC;AAFD,kCAEC;AAED,SAAgB,aAAa,CAAC,CAAS;IACnC,IAAI,CAAC,GAAG,GAAG,EAAE;QACT,OAAO,SAAS,GAAG,UAAC,EAAI,CAAC,IAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;KAChD;SAAM;QACH,OAAO,SAAS,GAAG,UAAC,EAAI,CAAC,IAAG,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,QAAQ,CAAC;KAC5E;AACL,CAAC;AAND,sCAMC;AAED,SAAgB,aAAa,CAAC,CAAS;IACnC,IAAI,CAAC,IAAI,CAAC,EAAE;QACR,OAAO,CAAC,CAAC;KACZ;IACD,IAAI,CAAC,IAAI,CAAC,EAAE;QACR,OAAO,CAAC,CAAC;KACZ;IACD,OAAO,aAAI,EAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC;AARD,sCAQC;AAED,SAAgB,cAAc,CAAC,CAAS;IACpC,IAAI,CAAC,IAAI,CAAC,EAAE;QACR,OAAO,CAAC,CAAC;KACZ;IACD,IAAI,CAAC,IAAI,CAAC,EAAE;QACR,OAAO,CAAC,CAAC;KACZ;IACD,OAAO,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,aAAI,EAAI,CAAC,EAAC,GAAG,CAAC,CAAC;AAC1D,CAAC;AARD,wCAQC;AAED,SAAgB,gBAAgB,CAAC,CAAS;IACtC,IAAI,CAAC,IAAI,CAAC,EAAE;QACR,OAAO,CAAC,CAAC;KACZ;IACD,IAAI,CAAC,IAAI,CAAC,EAAE;QACR,OAAO,CAAC,CAAC;KACZ;IACD,IAAI,CAAC,GAAG,GAAG,EAAE;QACT,OAAO,gBAAO,EAAI,CAAC,IAAG,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;KAClE;SAAM;QACH,OAAO,GAAG,GAAG,gBAAO,EAAI,CAAC,IAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;KACpE;AACL,CAAC;AAZD,4CAYC;AAED,SAAgB,aAAa,CAAC,CAAS;IACnC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE;QACZ,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;KAC3B;SAAM,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE;QACnB,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC5C;SAAM,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QACpB,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC5C;SAAM;QACH,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;KACnD;AACL,CAAC;AAVD,sCAUC;AAED,SAAgB,YAAY,CAAC,CAAS;IAClC,OAAO,CAAC,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC,CAAC;AAFD,oCAEC;AAED,SAAgB,eAAe,CAAC,CAAS;IACrC,IAAI,CAAC,GAAG,GAAG,EAAE;QACT,OAAO,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;KAClC;SAAM;QACH,OAAO,aAAa,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;KAC7C;AACL,CAAC;AAND,0CAMC;;;;;;;;;;;;;;;;ACrMD,mDAAmD;AACnD,IAAI,YAAY,GAAmB,IAAI,CAAC;AAExC;;;;GAIG;AACH,SAAgB,cAAc;IAC1B,OAAO,YAAY,aAAZ,YAAY,cAAZ,YAAY,GAAI,CAAC,YAAY,GAAG,IAAI,WAAW,CAAC,IAAI,UAAU,CAAC,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC;AACjH,CAAC;AAFD,wCAEC;AAED,SAAgB,UAAU;IACtB,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AACxD,CAAC;AAFD,gCAEC;AAED;;GAEG;AACH,SAAgB,KAAK;IACjB,mBAAmB;IACnB,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,MAAM,EAAE;QACjC,OAAO,IAAI,CAAC;KACf;IAED,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;QAC1B,OAAO,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAC5D,IAAI,GAAG,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;gBACrC,OAAO,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aACpD;YACD,OAAO,KAAK,CAAC;QACjB,CAAC,CAAC,CAAC;KACN;IAED,OAAO,KAAK,CAAC;AACjB,CAAC;AAhBD,sBAgBC;;;;;;;;;;;;;;;;;ACpCD,SAAsB,SAAS,CAAC,MAAoB;;QAChD,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;QACxB,OAAO,IAAI,OAAO,CAAmB,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrD,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,CAAC;YACjB,CAAC,CAAC;YACF,GAAG,CAAC,OAAO,GAAG,GAAG,EAAE;gBACf,MAAM,CAAC,IAAI,KAAK,CAAC,yBAAyB,MAAM,GAAG,CAAC,CAAC,CAAC;YAC1D,CAAC,CAAC;YACF,GAAG,CAAC,GAAG,GAAG,MAAM,YAAY,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,MAAM,EAAE,CAAC;QACvE,CAAC,CAAC,CAAC;IACP,CAAC;CAAA;AAXD,8BAWC;AAED,SAAgB,YAAY,CAAC,KAAa,EAAE,MAAc;IACtD,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAE,CAAC;IAEjD,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;IAEvB,OAAO,MAAM,CAAC;AAClB,CAAC;AAPD,oCAOC;AAID,SAAgB,mBAAmB,CAAC,MAAyB,EAAE,SAAiB,EAAE,OAAiB;IAC/F,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAClD,IAAI,GAAG,IAAI,IAAI,EAAE;QACb,MAAM,IAAI,KAAK,CAAC,2CAA2C,SAAS,GAAG,CAAC,CAAC;KAC5E;IACD,OAAO,GAAG,CAAC;AACf,CAAC;AAND,kDAMC;AAED,SAAgB,eAAe,CAAC,KAAa,EAAE,MAAc;IACzD,OAAO,mBAAmB,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;AAClE,CAAC;AAFD,0CAEC;AAED,SAAgB,YAAY,CAAC,KAAuB;IAChD,MAAM,GAAG,GAAG,eAAe,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IACvD,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAEtD,OAAO,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;AAC7D,CAAC;AALD,oCAKC;;;;;;;;;;;;;;;;ACzCD,SAAgB,KAAK,CAAC,CAAS,EAAE,GAAW,EAAE,GAAW;IACrD,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC;AAFD,sBAEC;AAED,SAAgB,SAAS,CAAC,CAAS,EAAE,GAAW;IAC5C,IAAI,CAAC,GAAG,CAAC,EAAE;QACP,OAAO,CAAC,CAAC,UAAC,CAAC,CAAC,CAAC,EAAI,GAAG,EAAC,CAAC;KACzB;SAAM;QACH,OAAO,UAAC,EAAI,GAAG,EAAC;KACnB;AACL,CAAC;AAND,8BAMC;AAED,4CAA4C;AAC5C,MAAM,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;AAEjC;;;;;GAKG;AACH,SAAgB,OAAO,CAAC,OAAe;IACnC,OAAO,OAAO,GAAG,UAAU,CAAC;AAChC,CAAC;AAFD,0BAEC;AAED;;;;;GAKG;AACH,SAAgB,OAAO,CAAC,OAAe;IACnC,OAAO,OAAO,GAAG,UAAU,CAAC;AAChC,CAAC;AAFD,0BAEC;AAED;;;;;GAKG;AACH,SAAgB,gBAAgB,CAAC,KAAa;IAC1C,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACxB,OAAO,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AACvC,CAAC;AAHD,4CAGC;AAED;;;;;GAKG;AACH,SAAgB,gBAAgB,CAAC,OAAe;IAC5C,OAAO,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AACzC,CAAC;AAFD,4CAEC;;;;;;;;;;;;;;;;ACtDD,SAAgB,GAAG,CAAC,QAAQ,GAAG,CAAC,EAAE,GAAY;IAC1C,IAAI,GAAG,IAAI,IAAI,EAAE;QACb,OAAO,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC;KACtD;SAAM;QACH,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC;KACnC;AACL,CAAC;AAND,kBAMC;AAED,SAAgB,MAAM,CAAC,QAAgB,EAAE,GAAY;IACjD,IAAI,GAAG,IAAI,IAAI,EAAE;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC;KAClE;SAAM;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC;KAC/C;AACL,CAAC;AAND,wBAMC;AAED,SAAgB,OAAO,CAAC,KAAqB;IACzC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IAEvD,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC;AACxB,CAAC;AAJD,0BAIC;AAED,SAAgB,QAAQ,CAAC,EAAU,EAAE,YAAoB;IACrD,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC;IAE/C,OAAO,MAAM,GAAG,CAAC,EAAE;QACf,KAAK,EAAE,CAAC;QACR,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC;KAC1C;IAED,OAAO,KAAK,CAAC;AACjB,CAAC;AAVD,4BAUC;;;;;;;;;;;;;;;;AChCD;;;;;;;;GAQG;AACH,SAAgB,YAAY,CAAC,KAAa,EAAE,OAAoE;;IAE5G,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;KACtD;IACD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;QAClB,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;KAC9D;IACD,OAAO,KAAK,CAAC,cAAc,OAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,mCAAI,CAAE,UAAU,EAAE,IAAI,CAAE,kBAC9D,WAAW,EAAE,KAAK,EAAE,qBAAqB,EAAE,CAAC,IAAK,OAAO,EAAG,CAAC;AACtE,CAAC;AAVD,oCAUC;AAED;;;;;;GAMG;AACH,SAAgB,KAAK,CAAC,KAAa,EAAE,MAAM,GAAG,CAAC;IAC3C,MAAM,GAAG,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACvC,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;AAC9D,CAAC;AAHD,sBAGC;;;;;;;;;;;;;;;;;AC/BD,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;AAEjD,SAAgB,GAAG;IACf,OAAO,WAAW,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;AACzC,CAAC;AAFD,kBAEC;AAED,SAAsB,KAAK,CAAC,EAAE,GAAG,CAAC;;QAC9B,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC1B,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;CAAA;AAJD,sBAIC;;;;;;;;;;;;;;;;ACRD,MAAa,MAAM;IAGf,YAAmB,KAAe;QAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IAClD,CAAC;CACJ;AAND,wBAMC;AAED,MAAa,UAAU;IAInB,YAAmB,OAAe,EAAE,IAAY;QAC5C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,MAAM,CAAC,UAAU,CAAC,CAAS;QAC9B,MAAM,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC1B,MAAM,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAChC,OAAO,IAAI,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;CACJ;AAdD,gCAcC;;;;;;;;;;;;;;;;ACrBD,MAAa,WAAW;IAOpB;QAJQ,cAAS,GAAW,CAAC,CAAC;QAC9B,iDAAiD;QACzC,eAAU,GAAW,CAAC,CAAC;IAG/B,CAAC;IAEM,eAAe,CAAC,MAAkB,EAAE,IAAe,EAAE,WAAmB;QAC3E,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;YAC3B,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;YAC7B,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACxC,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,oBAAoB,CAAC,MAAkB,EAAE,IAAe;QAC5D,iCAAiC;QACjC,WAAW;QACX,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAChC,MAAM,MAAM,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,CAAC;QAC7B,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE;YACrD,WAAW;YACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7B,CAAC,EAAE;QACH,UAAU;QACV,UAAU,CAAC,GAAG,EAAE;YACZ,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;QAClD,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAEM,OAAO,CAAC,WAAmB;QAC9B,OAAO,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;IAC1D,CAAC;IAEM,MAAM,CAAC,WAAW;QACrB,OAAO,WAAW,CAAC,WAAW,CAAC;IACnC,CAAC;;AAzCL,kCA0CC;AAzCkB,uBAAW,GAAgB,IAAI,WAAW,EAAE,CAAC;;;;;;;;;;;;;;;;;ACJhE,yGAAoD;AACpD,iFAAsC;AAItC,iGAA4C;AAC5C,6EAAkC;AAElC,8GAAsD;AACtD,kGAA8C;AAC9C,4FAA0C;AAC1C,qGAAgD;AAChD,kGAA8C;AAC9C,oGAA+C;AAC/C,6GAAqD;AAErD,IAAY,SAOX;AAPD,WAAY,SAAS;IACjB,yCAAQ;IACR,2CAAS;IACT,2CAAS;IACT,2CAAS;IACT,6CAAU;IACV,2CAAS;AACb,CAAC,EAPW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAOpB;AAED,MAAa,SAAU,SAAQ,WAAI;IAuB/B;QACI,KAAK,EAAE,CAAC;QAvBJ,mBAAc,GAAG,CAAC,CAAC;QACnB,cAAS,GAAG,CAAC,CAAC;QACd,eAAU,GAAG,IAAI,CAAC,CAAC,gBAAgB;QACnC,mBAAc,GAAG,CAAC,CAAC,CAAC,uEAAuE;QAC3F,uBAAkB,GAAG,IAAI,CAAC,CAAC,qDAAqD;QAChF,wBAAmB,GAAG,IAAI,CAAC,CAAC,sDAAsD;QAClF,iBAAY,GAAG,GAAG,CAAC,CAAC,qCAAqC;QACzD,6BAAwB,GAAG,EAAE,CAAC,CAAC,qFAAqF;QAEpH,SAAI,GAAoB,EAAE,CAAC;QAEnC,gBAAgB;QACR,wBAAmB,GAAG,CAAC,CAAC;QACxB,cAAS,GAAG,SAAS,CAAC,IAAI,CAAC;QAC5B,aAAQ,GAAG,KAAK,CAAC,CAAC,wBAAwB;QAC1C,cAAS,GAAG,KAAK,CAAC;QAEzB,SAAS;QACD,qBAAgB,GAAG,KAAK,CAAC;QACzB,sBAAiB,GAAG,CAAC,CAAC;QACtB,kBAAa,GAAkB,IAAI,CAAC;QAKxC,6BAA6B;QAC7B,IAAI,CAAC,OAAO,GAAG;YACX,IAAI,eAAM,CAAC,CAAC,oBAAoB;gBAChC,aAAa;aAiBZ,CAAC;YACF,IAAI,eAAM,CAAC;gBACP,kBAAkB;gBAClB,6BAA6B;aAmBhC,CAAC;SACL,CAAC;IACN,CAAC;IAED,sBAAsB;IACf,UAAU;QACb,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAEM,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC;QAC5C,QAAQ,IAAI,CAAC,SAAS,EAAE;YACpB,KAAK,SAAS,CAAC,KAAK;gBAChB,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,MAAM;YACV,KAAK,SAAS,CAAC,KAAK;gBAChB,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,MAAM;YACV,KAAK,SAAS,CAAC,KAAK;gBAChB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACrB,MAAM;YACV,KAAK,SAAS,CAAC,MAAM;gBACjB,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,MAAM;YACV,KAAK,SAAS,CAAC,KAAK;gBAChB,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,MAAM;SACb;QACD,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;QACD,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEM,QAAQ,CAAC,KAAgB;QAC5B,IAAI,KAAK,KAAK,IAAI,CAAC,SAAS,EAAE;YAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YACrC,QAAO,IAAI,CAAC,SAAS,EAAE;gBACnB,KAAK,SAAS,CAAC,KAAK;oBAChB,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,MAAM;gBACV,KAAK,SAAS,CAAC,KAAK;oBAChB,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,MAAM;gBACV,KAAK,SAAS,CAAC,KAAK;oBAChB,MAAM;gBACV,KAAK,SAAS,CAAC,MAAM;oBACjB,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,MAAM;gBACV,KAAK,SAAS,CAAC,KAAK;oBAChB,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,MAAM;aACb;SACJ;IACL,CAAC;IAEO,SAAS;QACb,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,MAAM,KAAK,GAAG,CAAE,IAAI,iBAAO,CAAC,KAAK,CAAC,EAAE,IAAI,iBAAO,CAAC,IAAI,CAAC,EAAE,IAAI,iBAAO,CAAC,IAAI,CAAC,EAAE,IAAI,iBAAO,CAAC,IAAI,CAAC,EAAE,IAAI,iBAAO,CAAC,KAAK,CAAC,CAAE,CAAC;QAClH,MAAM,SAAS,GAAG,CAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAE,CAAC;QAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACtB,CAAC;IAEM,gBAAgB;QACnB,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACnC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YACxB,KAAK,CAAC,QAAQ,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACzC;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACzC,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;YAC5B,OAAO,CAAC,QAAQ,CAAC,IAAI,mBAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;SACpD;IACL,CAAC;IAEO,YAAY;;QAChB,oCAAoC;QACpC,MAAM,OAAO,SAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,mCAAI,CAAC,CAAC;QACrD,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC1C,IAAI,CAAC,gBAAgB,GAAG,OAAO,KAAK,CAAC,CAAC;QACtC,IAAI,OAAO,IAAI,CAAC,WAAW,EAAE;YACzB,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;IACL,CAAC;IAEO,cAAc;QAClB,yBAAyB;QACzB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE;YACjF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;SAC9B;aAAM,IAAI,IAAI,CAAC,aAAa,EAAE;YAC3B,YAAY;YACZ,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC9D,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;SACjC;IACL,CAAC;IAEO,WAAW,CAAC,GAAW;QAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEO,WAAW;QACf,+EAA+E;QAC/E,wBAAwB;QACxB,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;YACpB,UAAU;YACV,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC/B,OAAO;SACV;IACL,CAAC;IAEO,WAAW;QACf,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC/B,qEAAqE;YACrE,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9B,MAAM,OAAO,GAAG,IAAI,CAAC;YACrB,MAAM,QAAQ,GAAG,OAAO,GAAG,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,cAAc,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;YACvD,OAAO;SACV;QACD,mBAAmB;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QACjD,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,kCAAkC;QACrE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;IAEO,WAAW,CAAC,EAAU;QAC1B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;QACtD,IAAI,QAAQ,IAAI,GAAG,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACnC;aAAM,IAAI,QAAQ,GAAG,CAAC,EAAE;YACrB,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;YAC/C,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9B,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC;YACtC,MAAM,cAAc,GAAG,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;YACvE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;SACtC;IACL,CAAC;IAEO,kBAAkB;QACtB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SAClC;QACD,+CAA+C;IACnD,CAAC;IAEO,WAAW;QACf,iDAAiD;QACjD,4CAA4C;QAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,MAAM,GAAG,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC;QACtC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,wBAAwB,EAAE;YACxF,IAAI,IAAI,GAAG,CAAC,CAAC;YACb,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB,EAAE;gBACjC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;aAC5B;iBAAM,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,mBAAmB,EAAE;gBACzC,IAAI,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;aAC7B;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;aACrC;SACJ;IACL,CAAC;IAEM,SAAS;QACZ,oCAAoC;QACpC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtC,iBAAiB;QACjB,MAAM,GAAG,GAAG,IAAI,6BAAa,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;QAC1D,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IAEM,SAAS;QACZ,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;IAEM,gBAAgB;QACnB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;IAEM,SAAS;QACZ,0BAA0B;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,MAAM,GAAG,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC;QACtC,MAAM,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,EAA0B,CAAC,CAAC;QACzF,KAAK,CAAC,SAAS,EAAE,CAAC;IACtB,CAAC;IAEM,cAAc;QACjB,IAAI,IAAI,CAAC,mBAAmB,GAAG,CAAC,EAAE;YAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,iCAAiC;YACjC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YACnC,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,gBAAgB,EAAE,CAAC;YACtD,MAAM,EAAE,GAAG,IAAI,uBAAU,EAAE,CAAC;YAC5B,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YAC3C,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC;YAC1C,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACrB,SAAS,CAAC,MAAM,EAAE,CAAC;YACnB,mCAAmC;SACtC;aAAM;YACH,uDAAuD;SAC1D;IACL,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,oBAAoB,CAAC,uBAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,oBAAoB,CAAC,qBAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;IAEM,YAAY;QACf,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,EAAE;YACR,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC9C;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC;IACxC,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,MAAM,CAAC;IACtC,CAAC;IAEM,aAAa,CAAC,KAAK,GAAG,CAAC;QAC1B,MAAM,KAAK,GAAG,YAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAC/B,MAAM,QAAQ,GAAG,qBAAG,CAAC,KAAK,CAAC,EAAI,CAAC,EAAC;QACjC,MAAM,EAAE,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvE,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC9D,CAAC;IAEM,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE;QAChD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,wBAAC,KAAK,CAAC,KAAK,EAAE,0CAAE,QAAQ,CAAC,SAAS,IAAC,CAAC,CAAC;IACtE,CAAC;IAEM,YAAY;QACf,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,oBAAoB,CAAC,qBAAS,CAAC,CAAC;IACxE,CAAC;CACJ;AAxUD,8BAwUC;AAED,CAAC,GAAS,EAAE;IACR,MAAM,IAAI,GAAG,IAAI,SAAS,EAAE,CAAC;IAC7B,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,2BAAY,CAAC,CAAC;IACxC,MAAc,CAAC,IAAI,GAAG,IAAI,CAAC;IAC5B,IAAI,CAAC,KAAK,EAAE,CAAC;AACjB,CAAC,EAAC,EAAE,CAAC;;;;;;;;;;;;;;;;ACxWL,mCAAmC;AACtB,kBAAU,GAAG,GAAG,CAAC;AAE9B,oCAAoC;AACvB,mBAAW,GAAG,GAAG,CAAC;AAE/B,YAAY;AACC,qBAAa,GAAG,4BAA4B,CAAC;AAE1D,sBAAsB;AACT,eAAO,GAAG,EAAE,CAAC;AAE1B,aAAa;AACb,IAAY,KAQX;AARD,WAAY,KAAK;IACb,6CAAc;IACd,uCAAW;IACX,6CAAc;IACd,mCAAS;IACT,uCAAW;IACX,qCAAU;IACV,+BAAO;AACX,CAAC,EARW,KAAK,GAAL,aAAK,KAAL,aAAK,QAQhB;;;;;;;;;;;;;;;;ACrBD,8FAA8C;AAC9C,+GAAyD;AAGzD,MAAa,eAAgB,SAAQ,qBAAoB;IAC9C,MAAM;QACT,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,MAAM,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,KAAK,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE;gBACvD,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE;oBAC/B,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;iBAC7E;aACJ;SACJ;IACL,CAAC;CACJ;AAZD,0CAYC;;;;;;;;;;;;;;;;;AChBD,wGAAmD;AACnD,qGAAkD;AAClD,yGAAoD;AACpD,+GAAsF;AACtF,wHAAiF;AACjF,iGAAsD;AACtD,8FAA+C;AAC/C,oGAA+C;AAE/C,wGAAgD;AAEhD,yFAAsC;AACtC,qGAA2D;AAI3D,qCAAqC;AACrC,MAAM,OAAO,GAAG,GAAG,CAAC;AACpB,MAAM,oBAAoB,GAAG,CAAC,CAAC;AAE/B,MAAsB,aAAc,SAAQ,2BAAuB;IA4C/D,YAAmB,IAAsB;QACrC,KAAK,CAAC,IAAI,CAAC,CAAC;QAvCR,kBAAa,GAAG,KAAK,CAAC;QACtB,aAAQ,GAAG,CAAC,CAAC;QASrB,uBAAuB;QACb,eAAU,GAAG,CAAC,CAAC;QACf,cAAS,GAAG,CAAC,CAAC;QAEd,eAAU,GAAG,IAAI,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,IAAI,CAAC;QACjB,cAAS,GAAG,GAAG,CAAC;QAChB,gBAAW,GAAG,IAAI,CAAC;QACnB,UAAK,GAAG,KAAK,CAAC;QAChB,oBAAe,GAA2B,IAAI,CAAC;QAC7C,eAAU,GAAG,KAAK,CAAC;QACrB,sBAAiB,GAAG,IAAI,CAAC;QACzB,6BAAwB,GAAkB,IAAI,CAAC;QAC/C,qBAAgB,GAAmB,IAAI,CAAC;QACxC,mBAAc,GAAmB,IAAI,CAAC;QACtC,8BAAyB,GAAY,IAAI,iBAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/D,mBAAmB;QACX,eAAU,GAAG,CAAC,CAAC;QACf,eAAU,GAAG,CAAC,CAAC;QACf,cAAS,GAAG,EAAE,CAAC;QAIf,mBAAc,GAAY,IAAI,iBAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,kBAAa,GAAG,CAAC,CAAC;QAItB,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,4BAA4B;QAE5B,IAAI,CAAC,YAAY,GAAG,IAAI,2BAAY,CAAC;YACjC,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc;YACjC,QAAQ,EAAE,GAAG,EAAE;gBACX,MAAM,KAAK,GAAG,YAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;gBAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,YAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,YAAG,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,qBAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAI,CAAC,EAAC;gBACrF,OAAO;oBACH,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;oBAC1B,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;iBAC7B,CAAC;YACN,CAAC;YACD,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,YAAG,CAAC,GAAG,EAAC,GAAG,CAAC,KAAK,YAAG,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM;YACrD,IAAI,EAAE,YAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACf,OAAO,EAAE,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAC;YACxB,QAAQ,EAAE,GAAG,EAAE,CAAC,YAAG,CAAC,GAAG,EAAE,CAAC,CAAC;YAC3B,UAAU,EAAE,0BAAW,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;SAC7C,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,IAAI,2BAAY,CAAC;YACjC,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc;YACjC,QAAQ,EAAE,GAAG,EAAE;gBACX,MAAM,KAAK,GAAG,YAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;gBAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,GAAG,YAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,YAAG,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,qBAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAI,CAAC,EAAC;gBAC/F,OAAO;oBACH,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;oBAC1B,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;iBAC7B,CAAC;YACN,CAAC;YACD,KAAK,EAAE,GAAG,EAAE;gBACR,MAAM,CAAC,GAAG,YAAG,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,YAAG,CAAC,YAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,YAAG,CAAC,CAAC,CAAC,CAAC;gBAC/D,OAAO,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;YACnC,CAAC;YACD,IAAI,EAAE,YAAG,CAAC,GAAG,EAAE,GAAG,CAAC;YACnB,OAAO,EAAE,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAC;YACxB,QAAQ,EAAE,GAAG,EAAE,CAAC,YAAG,CAAC,GAAG,EAAE,GAAG,CAAC;YAC7B,UAAU,EAAE,0BAAW,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;SAC7C,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAEM,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC;eACzE,IAAI,CAAC,MAAM,EAAE,KAAK,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC;eAC7D,IAAI,CAAC,MAAM,EAAE,KAAK,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEzE,kBAAkB;QAClB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;YACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpD,IAAI,CAAC,MAAM,EAAE,CAAC;aACjB;YACD,OAAO;SACV;QACD,eAAe;QACf,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QACjD,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YACtB,aAAa;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACpB,EAAE,GAAG,YAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,cAAc,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE,EAClF,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC9C;aAAM;YACH,aAAa;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE;gBACrB,EAAE,GAAG,YAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;aAC3F;iBAAM;gBACH,EAAE,GAAG,YAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;aAC5F;SACJ;QAED,UAAU;QACV,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAEpC,WAAW;QACX,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACvC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAChD,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,EAC/B,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;YACpC,cAAc;YACd,IAAI,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;gBACpC,IAAI,GAAG,CAAC,CAAC;gBACT,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAO,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACnD;YACD,cAAc;YACd,IAAI,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;gBACvC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBAC1B;qBAAM,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;iBACzB;gBACD,IAAI,GAAG,CAAC,CAAC;gBACT,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACnD;YACD,QAAQ;YACR,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE;gBAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnB;SACJ;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACvB;QACD,mBAAmB;QACnB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE;YAC1C,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;SACvB;IACL,CAAC;IAEM,YAAY,CAAC,SAAS,GAAG,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;SACvC;IACL,CAAC;IAEM,IAAI,CAAC,MAAM,GAAG,CAAC;QAClB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YACnC,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,MAAM,CAAC,CAAC;YAC5E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;IACL,CAAC;IAEM,KAAK,CAAC,KAAa,EAAE,KAAa,EAAE,SAAsB,IAAI,iBAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC;;QACtJ,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QAChC,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QAChC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxD,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxD,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,oBAAoB,CAAC,CAAC;QAClG,IAAI,WAAW,EAAE;YACb,MAAM,KAAK,GAAG,IAAI,CAAC,yBAAyB,CAAC;YAC7C,MAAM,QAAQ,GAAG,IAAI,mBAAQ,CAAC,EAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC;YACxD,UAAI,CAAC,SAAS,EAAE,0CAAE,WAAW,CAAC,QAAQ,EAAE;YACxC,IAAI,WAAW,YAAY,aAAa,EAAE;gBACtC,MAAM,MAAM,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC;gBAC5C,MAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBAClE,MAAM,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAChD,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;gBAClD,oCAAoC;gBACpC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACtE;iBAAM;gBACH,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;aAC5C;SACJ;IACL,CAAC;IAEM,SAAS,CAAC,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,KAAK,GAAG,CAAC;QAC3D,MAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,IAAI,iBAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,aAAa,GAAG,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAEM,UAAU,CAAC,CAAS,EAAE,CAAS,EAAE,KAAa;QACjD,MAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,IAAI,iBAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,aAAa,GAAG,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACvC,CAAC;IAES,gBAAgB,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,QAAQ,GAAG,CAAC;QACnF,IAAI,WAAW,GAAyC,IAAI,CAAC;QAC7D,MAAM,cAAc,GAAG,IAAI,iBAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC;QAC3C,MAAM,KAAK,GAAG,EAAE,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,GAAG,KAAK,CAAC;QAC7C,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;YAC7B,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;YAC7F,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YAC3C,IAAI,IAAI,CAAC,KAAK,EAAE;gBACZ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAiB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;gBAC3E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAe,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;aAC1E;YACD,IAAI,WAAW,EAAE;gBACb,IAAI,CAAC,yBAAyB,GAAG,cAAc,CAAC;gBAChD,OAAO,WAAW,CAAC;aACtB;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,IAAI,CAAC,OAAiC;QACzC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpB,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;SAClC;QACD,sCAAsC;QACtC,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YACnD,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;YAChE,OAAO,CAAC,IAAI,EAAE,CAAC;YACf,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC;YAC5B,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC7B,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC/B,OAAO,CAAC,OAAO,EAAE,CAAC;SACrB;IACL,CAAC;IAEO,gBAAgB,CAAC,OAAiC;QACtD,iBAAiB;QACjB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,cAAc,EAAE;YAC9C,OAAO,CAAC,IAAI,EAAE,CAAC;YACf,MAAM,IAAI,GAAG,IAAI,aAAK,CAClB,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,cAAc,CACtB,CAAC;YACF,OAAO,CAAC,IAAI,EAAE,CAAC;YACf,OAAO,CAAC,SAAS,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACnB,OAAO,CAAC,WAAW,GAAG,SAAS,CAAC;YAChC,OAAO,CAAC,MAAM,EAAE,CAAC;YACjB,OAAO,CAAC,SAAS,EAAE,CAAC;YACpB,OAAO,CAAC,OAAO,EAAE,CAAC;YAClB,OAAO,CAAC,OAAO,EAAE,CAAC;SACrB;IACL,CAAC;IAED;;;;;OAKG;IACI,IAAI,CAAC,MAAc,EAAE,MAAuB;QAC/C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;YACjB,OAAO,KAAK,CAAC;SAChB;QACD,8CAA8C;QAC9C,WAAW;QACX,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,MAAM,SAAS,GAAG,MAAM,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAO,CAAC,SAAS,GAAG,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,GAAG,GAAG,CAAC,CAAC;QACtF,SAAS;QACT,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC;QACzB,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE;YACrB,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,OAAO,IAAI,CAAC;SACf;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,GAAG,CAAC,IAAI,GAAG,EAAE,EAAE,QAAQ,GAAG,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAEM,MAAM,CAAC,GAAkB;;QAC5B,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAClB,UAAI,CAAC,SAAS,0CAAE,MAAM,CAAC,GAAG,EAAE;YAC5B,UAAI,CAAC,SAAS,0CAAE,MAAM,CAAC,GAAG,EAAE;SAC/B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,GAAG;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACvB,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC9B,CAAC;IAEM,cAAc;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAES,eAAe;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,gBAAgB;QAChB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,wBAAwB,GAAQ,UAAU,CAAC,GAAG,EAAE;YAC7C,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACnC,CAAC;IAES,aAAa;QACnB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,OAAO;SACV;QACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;IAEO,oBAAoB;QACxB,IAAI,IAAI,CAAC,wBAAwB,EAAE;YAC/B,aAAa,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;YAC7C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;SACxC;IACL,CAAC;IAEO,oBAAoB,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;QACzD,kBAAkB;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACtC,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACrC,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;QAC1C,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAC7E,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,qBAAqB,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC;IAEO,iBAAiB,CAAC,CAAS,EAAE,CAAS,EAAE,OAAO,GAAG,IAAI,CAAC,kBAAkB,EAAE,EAC3E,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE;QACnC,UAAU;QACV,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;YACrB,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;gBACvB,OAAO,CAAC,CAAC;aACZ;SACJ;QACD,QAAQ;QACR,KAAK,MAAM,CAAC,IAAI,SAAS,EAAE;YACvB,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;gBACvB,OAAO,CAAC,CAAC;aACZ;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAGO,YAAY;;QAChB,MAAM,SAAS,eAAG,IAAI,CAAC,QAAQ,EAAE,0CAAE,QAAQ,CAAC,oBAAoB,CAAC,6BAAa,oCAAK,EAAE,CAAC;QACtF,OAAO,SAAS,CAAC;IACrB,CAAC;IAIM,uBAAuB;QAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1C,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxC,IAAI,OAAO,GAAG,QAAQ,EAAE,OAAO,GAAyB,IAAI,CAAC;QAC7D,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;YACrB,MAAM,IAAI,GAAG,CAAC,CAAC,gBAAgB,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC7D,IAAI,IAAI,GAAG,OAAO,EAAE;gBAChB,OAAO,GAAG,IAAI,CAAC;gBACf,OAAO,GAAG,CAAC,CAAC;aACf;SACJ;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAEM,eAAe;QAClB,MAAM,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAClC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACtB,OAAO,IAAI,iBAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IAC3C,CAAC;IAEM,aAAa,CAAC,CAAS,EAAE,CAAS;QACrC,MAAM,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACvD,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;IAC5D,CAAC;IAEM,uBAAuB,CAAC,IAAqB;QAChD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAChC,CAAC;IAEM,yBAAyB,CAAC,IAAqB;QAClD,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,EAAE;YAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC/B;IACL,CAAC;IAEM,qBAAqB;QACxB,OAAO,IAAI,CAAC,eAAe,CAAC;IAChC,CAAC;CACJ;AA7CG;IADC,mBAAW;;;;iDAIX;AAlYD;IADC,cAAK,CAAC,uBAAuB,CAAC;sCACK,aAAK;uCAAC;AAF9C,sCA8aC;;;;;;;;;;;;;;;;AClcD,6GAAwD;AACxD,+GAAwD;AACxD,+GAAwE;AAGxE,MAAa,aAAc,SAAQ,qBAAoB;IACnD,YAAmB,IAAoB;QACnC,KAAK,iBAAG,MAAM,EAAE,qBAAS,CAAC,QAAQ,IAAK,IAAI,EAAG,CAAC;QAI5C,UAAK,GAAW,EAAE,CAAC;QAHtB,4BAA4B;IAChC,CAAC;IAMM,qBAAqB,CAAC,EAAoB,EAAE,KAAa,CAAC,EAAE,IAAY,CAAC,EAAE,IAAY,CAAC;QAC3F,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,EAClG,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACzC,IAAI,EAAE,YAAY,iBAAO,EAAE;YACvB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;YACb,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC;YACb,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;YACd,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;SAChB;QACD,OAAO,IAAI,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;IACxE,CAAC;IAEM,aAAa,CAAC,CAAS,EAAE,CAAS;QACrC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,EAClG,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACzC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;IAC5D,CAAC;CACJ;AA7BD,sCA6BC;;;;;;;;;;;;;;;;;AClCD,8GAAwD;AACxD,6GAAwD;AACxD,8GAAoD;AACpD,wGAAmD;AAGnD,MAAa,UAAW,SAAQ,iCAAe;IAM3C,YAAmB,IAAmB;QAClC,KAAK,iBACD,QAAQ,EAAE,UAAU,CAAC,MAAM,EAC3B,MAAM,EAAE,qBAAS,CAAC,MAAM,EACxB,GAAG,EAAE,KAAK,IACP,IAAI,GACR,0BAA0B,CAAC,CAAC;QAR3B,aAAQ,GAAG,KAAK,CAAC;IASzB,CAAC;IAEM,QAAQ;QACX,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,qCAAqC;YACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,UAAU,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,OAAO,EAAE,CAAC,gBAAgB,EAAE,CAAC;YACtC,CAAC,EAAE,IAAI,CAAC,CAAC;SACZ;IACL,CAAC;IAEM,WAAW;QACd,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC1B,CAAC;CAEJ;AA7BG;IADC,cAAK,CAAC,8BAA8B,CAAC;sCACN,mBAAQ;gCAAC;AAF7C,gCA+BC;;;;;;;;;;;;;;;;;ACrCD,8GAAwD;AACxD,6FAA6C;AAC7C,8GAAoD;AAEpD,qGAAkD;AAElD,wGAAmD;AAEnD,MAAa,QAAS,SAAQ,iCAAe;IAWzC,YAAmB,IAAqB;;QACpC,KAAK,iBACD,QAAQ,EAAE,QAAQ,CAAC,MAAM,IACtB,IAAI,GACR,kBAAkB,CAAC,CAAC;QATnB,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,CAAC,CAAC;QACb,aAAQ,GAAG,EAAE,CAAC;QACd,SAAI,GAAG,EAAE,CAAC;QAOd,IAAI,CAAC,QAAQ,qBAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,2CAAG,QAAQ,qCAAM,EAAE,CAAC;QAC7F,IAAI,CAAC,IAAI,eAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,OAAO,qCAAM,EAAE,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,CAAC;IAEM,QAAQ;QACX,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAChC,IAAI,MAAM,EAAE;gBACR,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;gBACpC,IAAI,MAAM,EAAE;oBACR,yBAAW,CAAC,WAAW,EAAE,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACzE,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;oBAC1B,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;iBAC7B;aACJ;SACJ;IACL,CAAC;IAEM,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACzB,CAAC;IAEM,WAAW;QACd,OAAO,yBAAW,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC9E,CAAC;IAEM,SAAS,CAAC,MAAe;QAC5B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACvB,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEO,aAAa;;QACjB,MAAM,MAAM,eAAG,IAAI,CAAC,QAAQ,EAAE,0CAAE,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,EAC7D,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,EAAE,CAAC,oCAAK,IAAI,CAAC;QAChE,OAAO,MAAM,CAAC;IAClB,CAAC;CAEJ;AAzDG;IADC,cAAK,CAAC,yBAAyB,CAAC;sCACE,aAAK;iCAAC;AAGzC;IADC,cAAK,CAAC,2BAA2B,CAAC;sCACZ,mBAAQ;8BAAC;AALpC,4BA2DC;;;;;;;;;;;;;;;;ACnED,+GAAyE;AACzE,oGAA+C;AAC/C,8FAA6C;AAC7C,wGAAgD;AAChD,+FAA0C;AAG1C,IAAY,OAMX;AAND,WAAY,OAAO;IACf,uCAAS;IACT,yCAAU;IACV,yCAAU;IACV,uCAAS;IACT,mDAAe;AACnB,CAAC,EANW,OAAO,GAAP,eAAO,KAAP,eAAO,QAMlB;AAED,MAAsB,SAAU,SAAQ,6BAAa;IAArD;;QAEI,qBAAqB;QACX,kBAAa,GAAG,GAAG,CAAC;QACpB,UAAK,GAAG,GAAG,CAAC;QACZ,iBAAY,GAAG,GAAG,CAAC;QACnB,iBAAY,GAAG,GAAG,CAAC;QACnB,cAAS,GAAG,GAAG,CAAC;QAE1B,gDAAgD;QACtC,wBAAmB,GAAG,YAAG,EAAI,CAAC,EAAC;QAEzC,iDAAiD;QACvC,wBAAmB,GAAG,YAAG,EAAI,CAAC,EAAC;QAEzC,0FAA0F;QAChF,iBAAY,GAAG,GAAG,CAAC;QAE7B,qDAAqD;QAC3C,6BAAwB,GAAG,YAAG,EAAI,CAAC,EAAC;QAE9C,mEAAmE;QACzD,6BAAwB,GAAG,WAAE,EAAI,CAAC,EAAC;QAE7C,gEAAgE;QACtD,0BAAqB,GAAG,WAAE,EAAI,CAAC,EAAC;QAE1C,6CAA6C;QACnC,gBAAW,GAAG,GAAG,CAAC;QAElB,cAAS,GAAqB,MAAM,CAAC;QACvC,gBAAW,GAAG,CAAC,CAAC;QACP,2BAAsB,GAAG,IAAI,CAAC;QAErC,UAAK,GAAY,OAAO,CAAC,KAAK,CAAC;QAEjC,oBAAe,GAAG,CAAC,CAAC;QAE5B,0CAA0C;QAChC,2BAAsB,GAAG,CAAC,CAAC;QAC3B,4BAAuB,GAAG,GAAG,CAAC;QAC9B,4BAAuB,GAAG,CAAC,CAAC;QAE5B,qBAAgB,GAAG,EAAE,CAAC;QAEtB,8BAAyB,GAAG,WAAE,EAAI,CAAC,EAAC;QAE9C;;;WAGG;QACO,yBAAoB,GAAG,KAAK,CAAC;QAG7B,qBAAgB,GAAY,IAAI,iBAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QA4L9C,kBAAa,GAAG,CAAC,CAAC;QAClB,wBAAmB,GAAG,CAAC,CAAC;QACxB,WAAM,GAAG,CAAC,CAAC;QACX,iBAAY,GAAG,GAAG,CAAC;IA+CjC,CAAC;IA5OU,gBAAgB;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IACM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IACM,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IACM,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IACM,YAAY;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAEM,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,4BAA4B;IAClB,QAAQ,CAAC,EAAU,EAAE,IAAY;QACvC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;YACjB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACrB,OAAO;SACV;QACD,KAAK;QACL,QAAQ,IAAI,CAAC,KAAK,EAAE;YAChB,KAAK,OAAO,CAAC,KAAK,CAAC;YACnB,KAAK,OAAO,CAAC,KAAK;gBACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACxB,MAAM;YACV,KAAK,OAAO,CAAC,MAAM;gBACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACxB,MAAM;YACV,KAAK,OAAO,CAAC,MAAM;gBACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACxB,MAAM;YACV,KAAK,OAAO,CAAC,WAAW;gBACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC5B,MAAM;SACb;QAED,iBAAiB;QACjB,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,wBAAwB,EAAE;YAC3F,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE;gBACrC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACzB;iBAAM;gBACH,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aACxB;SACJ;aAAM;YACH,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;SACxB;IACL,CAAC;IAES,SAAS;;QACf,MAAM,MAAM,SAAG,IAAI,CAAC,QAAQ,EAAE,0CAAE,QAAQ,CAAC,oBAAoB,CAAC,uBAAU,EAAE,CAAC,CAAC,CAAC;QAC7E,OAAO,OAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,IAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;IAClD,CAAC;IAES,MAAM;QACZ,yCAAyC;IAC7C,CAAC;IAES,YAAY,CAAC,IAAY;QAC/B,2BAA2B;QAC3B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,MAAM,EAAE;YACR,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE;gBACjC,kBAAkB;gBAClB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAC9B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;gBAC3C,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,OAAO;aACV;SACJ;QACD,IAAI,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,EAAE;YAC9D,oCAAoC;YACpC,MAAM,wBAAwB,GAAG,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC;YAC3H,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,YAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,MAAM,IAAI,IAAI,CAAC,uBAAuB,GAAG,wBAAwB,GAAG,IAAI,EAAE;gBACxF,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;gBACnC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;aACvC;SACJ;QAED,6CAA6C;QAC7C,IAAI,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK;eACzB,YAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,EAAE;YAC3E,wDAAwD;YACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;YAC9E,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;SACxB;IACL,CAAC;IAES,YAAY,CAAC,IAAY;QAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,0CAA0C;QAC1C,IAAI,MAAM,EAAE;YACR,4BAA4B;YAC5B,MAAM,eAAe,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;YACnF,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,OAAO,IAAI,UAAG,EAAE,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC;mBACnF,eAAe,GAAG,IAAI,CAAC,wBAAwB,EAAE;gBACpD,kBAAkB;gBAClB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAC9B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;gBAC3C,cAAc;gBACd,IAAI,eAAe,GAAG,IAAI,CAAC,qBAAqB,EAAE;oBAC9C,IAAI,CAAC,WAAW,EAAE,CAAC;iBACtB;aACJ;iBAAM;gBACH,sBAAsB;gBACtB,IAAI,IAAI,CAAC,oBAAoB,EAAE;oBAC3B,iDAAiD;oBACjD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;oBACnC,yCAAyC;oBACzC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;iBACxD;qBAAM;oBACH,uCAAuC;oBACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBAC7B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;iBACxB;aACJ;SACJ;IACL,CAAC;IAES,YAAY,CAAC,IAAY;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,EAAE;YAChD,cAAc;YACd,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAChC,MAAM,UAAU,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;YAC5D,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,UAAU,EAAE;gBACZ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAC7B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBACrB,OAAO;aACV;YACD,yBAAyB;YACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACjC;IACL,CAAC;IAES,QAAQ,CAAC,KAAc,EAAE,OAAe,IAAI,CAAC,UAAU;QAC7D,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC/B;QACD,IAAI,IAAI,CAAC,MAAM,EAAE,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,KAAK,KAAK,EAAE;YACrD,OAAO;SACV;QACD,QAAQ,KAAK,EAAE;YACX,KAAK,OAAO,CAAC,KAAK,CAAC;YACnB,KAAK,OAAO,CAAC,KAAK;gBACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACpB,MAAM;YACV,KAAK,OAAO,CAAC,MAAM;gBACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACtB,MAAM;YACV,KAAK,OAAO,CAAC,MAAM,CAAC;YACpB,KAAK,OAAO,CAAC,WAAW;gBACpB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACpB,MAAM;SACb;IACL,CAAC;IAES,WAAW;QACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,IAAI,CAAC,MAAc,EAAE,MAAuB;QAC/C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;YAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACpB,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAC5B,IAAI,EAAE,EAAE;gBACJ,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,gBAAgB,EAAE,CAAC;gBAC5C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACjC;YACD,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,IAAI,CAAC;IAChB,CAAC;IAQS,gBAAgB,CAAC,IAAY;QACnC,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,yBAAyB,EAAE;YAC9F,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;gBAC1B,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE;oBACxC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;iBAC7B;aACJ;iBAAM,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,EAAE;gBAC7D,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE;oBACvC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;iBACzB;qBAAM;oBACH,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;iBACxB;gBACD,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACtB;SACJ;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAEM,kBAAkB;;QACrB,MAAM,OAAO,eAAG,IAAI,CAAC,QAAQ,EAAE,0CAAE,QAAQ,CAAC,oBAAoB,CAAC,uBAAU,oCAAK,EAAE,CAAC;QACjF,OAAO,OAAO,CAAC;IACnB,CAAC;IAEO,0BAA0B,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE;QACxD,OAAO,MAAM,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAC3F,CAAC;IAEM,kBAAkB,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE;QAC/C,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,KAAK,CAAC;SAChB;QACD,MAAM,eAAe,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QACnF,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,EAAE,MAAM,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC;QACzE,MAAM,eAAe,GAAG,CAAC,UAAG,EAAE,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,IAAI,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC7H,MAAM,eAAe,GAAG,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,IAAI,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC9G,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC;QACnH,IAAI,WAAW,EAAE;YACb,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;YACpD,IAAI,CAAC,WAAW,GAAG,UAAG,EAAE,CAAC;SAC5B;QACD,OAAO,CAAC,eAAe,IAAI,eAAe,CAAC,IAAI,WAAW,CAAC;IAC/D,CAAC;CACJ;AApSD,8BAoSC;;;;;;;;;;;;;;;;;ACnTD,8GAAwD;AACxD,6GAAwD;AACxD,8GAAoD;AAEpD,qGAAkD;AAClD,wGAAmD;AAEnD,MAAa,WAAY,SAAQ,iCAAe;IAa5C,YAAmB,IAAmB;QAClC,KAAK,iBACD,QAAQ,EAAE,WAAW,CAAC,MAAM,EAC5B,MAAM,EAAE,qBAAS,CAAC,MAAM,EACxB,GAAG,EAAE,QAAQ,IACV,IAAI,GACR,oBAAoB,CAAC,CAAC;QATrB,WAAM,GAAG,KAAK,CAAC;QACf,SAAI,GAAG,KAAK,CAAC;IASrB,CAAC;IAEM,QAAQ;QACX,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBACxB,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC;gBACpC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;aAChC;iBAAM;gBACH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACvB,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC;gBAChC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;gBAC7B,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;aACjC;SACJ;IACL,CAAC;IAEM,WAAW;QACd,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;IAChF,CAAC;CAEJ;AAzCG;IADC,cAAK,CAAC,4BAA4B,CAAC;sCACJ,mBAAQ;iCAAC;AAGzC;IADC,cAAK,CAAC,6BAA6B,CAAC;sCACD,aAAK;qCAAC;AAG1C;IADC,cAAK,CAAC,6BAA6B,CAAC;sCACF,aAAK;oCAAC;AAR7C,kCA2CC;;;;;;;;;;;;;;;;ACjDD,wHAAiF;AACjF,8FAA+C;AAG/C,+FAA0C;AAE1C,MAAsB,eAAgB,SAAQ,2BAAuB;IAMjE,YAAmB,IAAsB,EAAE,UAAkB,EAAE;QAC3D,KAAK,CAAC,IAAI,CAAC,CAAC;QANR,WAAM,GAAyB,IAAI,CAAC;QAEpC,mBAAc,GAAG,CAAC,CAAC;QACjB,eAAU,GAAG,KAAK,CAAC;QAIzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAES,QAAQ;QACd,OAAO,EAAE,CAAC;IACd,CAAC;IAEM,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAChC,IAAI,MAAM,EAAE;gBACR,MAAM,GAAG,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;gBACjF,IAAI,GAAG,GAAG,aAAI,CAAC,QAAQ,EAAE,EAAI,CAAC,GAAE;oBAC5B,MAAM,GAAG,MAAM,CAAC;iBACnB;aACJ;SACJ;QACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAEvB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,cAAc,GAAG,YAAK,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACnE;aAAM;YACH,IAAI,CAAC,cAAc,GAAG,YAAK,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACnE;IACL,CAAC;IAIM,WAAW;QACd,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,SAAS,CAAC,MAA4B;QAC1C,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;YACxB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,IAAI,CAAC,MAAM,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;aAC/C;YACD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;aAC7C;SACJ;IACL,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAES,SAAS;;QACf,aAAO,IAAI,CAAC,QAAQ,EAAE,0CAAE,QAAQ,CAAC,oBAAoB,CAAC,uBAAU,EAAE,CAAC,EAAE;IACzE,CAAC;IAEM,IAAI,CAAC,OAAiC;QACzC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACvB;QACD,eAAe;QACf,IAAI,IAAI,CAAC,OAAO,KAAK,EAAE,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE;YAChD,OAAO,CAAC,IAAI,EAAE,CAAC;YACf,OAAO,CAAC,IAAI,GAAG,WAAW,CAAC;YAC3B,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC7B,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC;YAC5B,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC;YAC9B,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,cAAc,CAAC;YAC3C,MAAM,IAAI,GAAG,CAAC,EAAE,CAAC;YACjB,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YAC1C,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YACxC,OAAO,CAAC,OAAO,EAAE,CAAC;SACrB;IACL,CAAC;CACJ;AA/ED,0CA+EC;;;;;;;;;;;;;;;;ACrFD,4GAAuD;AACvD,6GAAwD;AAExD,+GAAwD;AACxD,+GAA0E;AAE1E,0GAA+E;AAC/E,8FAAiD;AAGjD,SAAgB,cAAc,CAAC,KAAe,EAAE,CAAS;IACrD,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;IAC9E,IAAI,CAAC,GAAG,CAAC,EAAE;QACP,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,GAAG,CAAC,CAAC;KACT;IACD,IAAI,CAAC,GAAG,CAAC,EAAE;QACP,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,GAAG,CAAC,CAAC;KACT;IACD,IAAI,CAAC,GAAG,CAAC,EAAE;QACP,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,GAAG,CAAC,CAAC;KACT;IACD,OAAO,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjC,CAAC;AAlBD,wCAkBC;AAED,MAAa,SAAU,SAAQ,qBAAoB;IAO/C,YAAmB,IAAqB;;QACpC,KAAK,iBAAG,MAAM,EAAE,qBAAS,CAAC,QAAQ,IAAK,IAAI,EAAG,CAAC;QAH3C,aAAQ,GAA0B,IAAI,CAAC;QAI3C,IAAI,CAAC,KAAK,qBAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,mBAAmB,CAAC,OAAO,EAAE,OAAO,2CAAG,QAAQ,qCAAM,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3G,IAAI,CAAC,OAAO,eAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,UAAU,qCAAM,IAAI,CAAC;QACvD,IAAI,CAAC,SAAS,qBAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,mBAAmB,CAAC,WAAW,EAAE,KAAK,2CAAG,QAAQ,qCAAM,GAAG,CAAC;QAC/F,IAAI,CAAC,IAAI,qBAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,mBAAmB,CAAC,MAAM,EAAE,OAAO,2CAAG,QAAQ,qCAAM,CAAC,CAAC;QACrF,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEO,cAAc;;QAClB,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAChE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;aAAM;YACH,MAAM,MAAM,GAAY,EAAE,CAAC;YAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACjC,MAAM,KAAK,GAAG,EAAE,CAAC;YACjB,MAAM,SAAS,GAAG,GAAG,CAAC;YACtB,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,IAAI,EAAE,EAAE;gBACrC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,UAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,EAAI,CAAC,EAAC;gBACpD,MAAM,GAAG,GAAG,cAAc,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACrC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACpB;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEnC,MAAM,MAAM,GAAG,uBAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,GAAG,GAAG,8BAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC9C,MAAM,MAAM,eAAG,IAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,CAAC,oCAAK,IAAI,iBAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9D,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;YAC7E,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YAC/F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;gBACxD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;aAC/D;SACJ;IACL,CAAC;IAEM,QAAQ,CAAC,KAAY;QACxB,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,UAAU,CAAC,2BAAe,CAAC,SAAS,CAAC,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,mBAAmB,CAAC,MAAgB;QACvC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACtB,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACxC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aAC5B;SACJ;aAAM;YACH,KAAK,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;SACrC;IACL,CAAC;IAEM,MAAM,CAAC,EAAU;QACpB,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;YACjB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;;gBACf,MAAM,CAAC,SAAG,IAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,EAAE;oBACH,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;iBACzB;gBACD,CAAC,CAAC,MAAM,CAAC,cAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;gBAClC,IAAI,CAAC,EAAE;oBACH,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC3B;YACL,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAEM,IAAI,CAAC,GAA6B;;QACrC,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,SAAS,EAAE,CAAC;QAChB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,GAAG,CAAC,SAAS,SAAG,IAAI,CAAC,QAAQ,mCAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACvD,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC1B;aAAM,IAAI,KAAK,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,EAAE;YACpC,MAAM,aAAa,GAAG,SAAS,GAAG,CAAC,CAAC;YACpC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;SAC5E;aAAM;YACH,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;SACjC;QACD,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;CACJ;AA9FD,8BA8FC;;;;;;;;;;;;;;;;AC7HD,+GAAwE;AACxE,uFAAqC;AAIrC,MAAa,QAAS,SAAQ,qBAAoB;IAI9C,YAAmB,IAAmB;QAClC,KAAK,iBACD,KAAK,EAAE,CAAC,EACR,MAAM,EAAE,CAAC,EACT,KAAK,EAAE,iBAAK,CAAC,OAAO,IAChB,IAAI,EACV,CAAC;QATC,cAAS,GAAG,CAAC,CAAC;QACd,aAAQ,GAAG,CAAC,CAAC;IASrB,CAAC;IAEM,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACtC;aAAM,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE;YAC7B,KAAK,CAAC,MAAM,EAAE,CAAC;SAClB;IACL,CAAC;IAEM,IAAI,CAAC,OAAiC;QACzC,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC;QAC9B,OAAO,CAAC,SAAS,EAAE,CAAC;QACpB,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC9B,OAAO,CAAC,SAAS,EAAE,CAAC;QACpB,OAAO,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;CACJ;AA9BD,4BA8BC;;;;;;;;;;;;;;;;;ACnCD,4FAAwC;AACxC,8GAAwD;AACxD,6GAAwD;AAGxD,qGAAkD;AAClD,wGAAmD;AACnD,oGAA+C;AAC/C,8FAA8C;AAE9C,MAAa,WAAY,SAAQ,qBAAS;IAYtC,YAAmB,IAAoB;QACnC,KAAK,iBACD,QAAQ,EAAE,WAAW,CAAC,MAAM,EAC5B,MAAM,EAAE,qBAAS,CAAC,MAAM,EACxB,GAAG,EAAE,MAAM,EACX,YAAY,EAAE,IAAI,WAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,IACjC,IAAI,EACT,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACzC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,YAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,YAAG,CAAC,YAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC;IAEM,IAAI,CAAC,MAAc,EAAE,MAAuB;QAC/C,WAAW,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;QACtC,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACtC,CAAC;IAEO,UAAU;QACd,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,WAAW,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;SACzC;IACL,CAAC;IAEO,WAAW;QACf,OAAO,WAAW,CAAC,kBAAkB,CAAC,SAAS,EAAE,CAAC;IACtD,CAAC;IAES,MAAM;QACZ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YACrB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,WAAW,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;SACzC;IACL,CAAC;CACJ;AA5CG;IADC,cAAK,CAAC,+BAA+B,CAAC;sCAChB,mBAAQ;iCAAC;AAGhC;IADC,cAAK,CAAC,4BAA4B,CAAC;sCACQ,aAAK;6CAAC;AAGlD;IADC,cAAK,CAAC,oBAAoB,CAAC;sCACgB,aAAK;6CAAC;AARtD,kCA8CC;;;;;;;;;;;;;;;;ACvDD,4GAAuD;AACvD,6GAAwD;AAExD,+GAAwD;AACxD,+GAA0E;AAE1E,0GAA+E;AAC/E,8FAA6C;AAE7C,4FAA6C;AAE7C,MAAa,eAAgB,SAAQ,qBAAoB;IAQrD,YAA2B,QAAgB,EAAE,IAAqB;;QAC9D,KAAK,iBAAG,MAAM,EAAE,qBAAS,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,IAAK,IAAI,EAAG,CAAC;QAD1C,aAAQ,GAAR,QAAQ,CAAQ;QAHnC,aAAQ,GAA0B,IAAI,CAAC;QACvC,kBAAa,GAAkB,IAAI,CAAC;QAIxC,IAAI,CAAC,KAAK,qBAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,mBAAmB,CAAC,OAAO,EAAE,OAAO,2CAAG,QAAQ,qCAAM,IAAI,mBAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC/G,IAAI,CAAC,OAAO,eAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,UAAU,qCAAM,IAAI,CAAC;QACvD,IAAI,CAAC,SAAS,qBAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,mBAAmB,CAAC,WAAW,EAAE,KAAK,2CAAG,QAAQ,qCAAM,GAAG,CAAC;QAC/F,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEO,cAAc;;QAClB,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAChE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;aAAM;YACH,MAAM,MAAM,GAAY,EAAE,CAAC;YAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACjC,MAAM,KAAK,GAAG,EAAE,CAAC;YACjB,MAAM,SAAS,GAAG,GAAG,CAAC;YACtB,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,IAAI,EAAE,EAAE;gBACrC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,UAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,EAAI,CAAC,EAAC;gBACpD,MAAM,GAAG,GAAG,0BAAc,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACrC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACpB;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEnC,MAAM,MAAM,GAAG,uBAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,GAAG,GAAG,8BAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC9C,MAAM,MAAM,eAAG,IAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,CAAC,oCAAK,IAAI,iBAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9D,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC;YACnG,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YAC/F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;gBACxD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;aAC/D;SACJ;IACL,CAAC;IAEM,QAAQ,CAAC,KAAY;QACxB,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,UAAU,CAAC,2BAAe,CAAC,SAAS,CAAC,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,mBAAmB,CAAC,MAAgB;QACvC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACtB,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACxC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aAC5B;SACJ;aAAM;YACH,KAAK,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;SACrC;IACL,CAAC;IAEM,MAAM,CAAC,EAAU;QACpB,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,MAAM,YAAY,GAAG,CAAC,UAAG,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;YAC3E,IAAI,YAAY,GAAG,GAAG,EAAE;gBACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,OAAO;aACV;YACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC;YAChE,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;IACL,CAAC;IAEM,IAAI;QACP,IAAI,CAAC,aAAa,GAAG,UAAG,EAAE,CAAC;IAC/B,CAAC;IAEM,IAAI,CAAC,GAA6B;;QACrC,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,GAAG,CAAC,SAAS,EAAE,CAAC;YAChB,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC;YAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAChC,GAAG,CAAC,SAAS,SAAG,IAAI,CAAC,QAAQ,mCAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;YACvD,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC1B;iBAAM,IAAI,KAAK,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,EAAE;gBACpC,MAAM,aAAa,GAAG,SAAS,GAAG,CAAC,CAAC;gBACpC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;aAC5E;iBAAM;gBACH,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;aACjC;YACD,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,GAAG,CAAC,OAAO,EAAE,CAAC;SACjB;IACL,CAAC;CACJ;AAlGD,0CAkGC;;;;;;;;;;;;;;;;;AC9GD,8GAAwD;AACxD,wGAAgD;AAChD,6GAAwD;AAIxD,wGAAmD;AACnD,8FAA8C;AAE9C,MAAa,OAAQ,SAAQ,6BAAa;IAWtC,YAAmB,MAAe,EAAE,IAAoB;QACpD,KAAK,iBACD,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,EAC5D,MAAM,EAAE,qBAAS,CAAC,MAAM,EACxB,WAAW,EAAE,qBAAS,CAAC,MAAM,EAC7B,GAAG,EAAE,MAAM,EACX,EAAE,EAAE,QAAQ,EACZ,YAAY,EAAE,IAAI,WAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAChC,IAAI,EACT,CAAC;QAdP,qBAAqB;QACJ,iBAAY,GAAG,GAAG,CAAC;QACnB,iBAAY,GAAG,GAAG,CAAC;QACnB,cAAS,GAAG,GAAG,CAAC;IAYjC,CAAC;IAEM,gBAAgB;QACnB,OAAO,CAAC,CAAC;IACb,CAAC;IACM,QAAQ;QACX,OAAO,CAAC,CAAC;IACb,CAAC;IACM,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IACM,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IACM,YAAY;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAEM,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC3B,CAAC;IAGM,GAAG;QACN,KAAK,CAAC,GAAG,EAAE,CAAC;IAChB,CAAC;IAGM,kBAAkB;QACrB,OAAO,EAAE,CAAC;IACd,CAAC;CAEJ;AAnDG;IADC,cAAK,CAAC,4BAA4B,CAAC;sCACT,mBAAQ;iCAAC;AAEpC;IADC,cAAK,CAAC,8BAA8B,CAAC;sCACT,mBAAQ;mCAAC;AAJ1C,0BAqDC;;;;;;;;;;;;;;;;AC7DD,+GAAwE;AACxE,uFAAuC;AA6BvC,MAAa,YAAa,SAAQ,qBAAoB;IAmBlD,YAAmB,IAAsB;;QACrC,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,WAAW,OAAC,IAAI,CAAC,MAAM,mCAAI,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,iBAAiB,GAAG,WAAW,OAAC,IAAI,CAAC,QAAQ,mCAAI,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,cAAc,GAAG,WAAW,OAAC,IAAI,CAAC,KAAK,mCAAI,OAAO,CAAC,CAAC;QACzD,IAAI,CAAC,cAAc,GAAG,WAAW,OAAC,IAAI,CAAC,KAAK,mCAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,GAAG,WAAW,OAAC,IAAI,CAAC,IAAI,mCAAI,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,gBAAgB,GAAG,WAAW,OAAC,IAAI,CAAC,OAAO,mCAAI,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,mBAAO,EAAC,CAAC,CAAC;QACxE,IAAI,CAAC,iBAAiB,GAAG,WAAW,OAAC,IAAI,CAAC,QAAQ,mCAAI,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,cAAc,GAAG,WAAW,OAAC,IAAI,CAAC,KAAK,mCAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,mBAAmB,GAAG,WAAW,OAAC,IAAI,CAAC,UAAU,mCAAI,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,aAAa,CAAC;QACjD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,mBAAW,CAAC,QAAQ,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,mBAAW,CAAC,QAAQ,CAAC;QACxD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC;QAEhC,SAAS,WAAW,CAAK,GAAoB;YACzC,IAAI,GAAG,YAAY,QAAQ,EAAE;gBACzB,OAAO,GAAG,CAAC;aACd;iBAAM;gBACH,OAAO,GAAG,EAAE,CAAC,GAAG,CAAC;aACpB;QACL,CAAC;IACL,CAAC;IAEM,cAAc;QACjB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAEM,IAAI,CAAC,KAAK,GAAG,CAAC;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5B,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;IACL,CAAC;IAEM,UAAU;QACb,MAAM,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACnC,MAAM,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACnC,MAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACpC,MAAM,QAAQ,GAAG,IAAI,QAAQ,CACzB,IAAI,EACJ,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EACb,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EACb,CAAC,CAAC,CAAC,EACH,CAAC,CAAC,CAAC,EACH,IAAI,CAAC,cAAc,EAAE,EACrB,IAAI,CAAC,mBAAmB,EAAE,EAC1B,IAAI,CAAC,cAAc,EAAE,EACrB,IAAI,CAAC,aAAa,EAAE,EACpB,IAAI,CAAC,iBAAiB,EAAE,EACxB,IAAI,CAAC,cAAc,EAAE,CACxB,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE9B,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEM,MAAM,CAAC,EAAU;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAEvC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;gBAC9B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC/B;SACJ;QAED,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAC5B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aACxB;SACJ;IACL,CAAC;IAEM,IAAI,CAAC,GAA6B;QACrC,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,wBAAwB,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9C,MAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACpC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACzC,GAAG,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;CACJ;AAzGD,oCAyGC;AAED,MAAa,QAAQ;IAKjB,YACY,OAAqB,EACtB,CAAS,EACT,CAAS,EACT,KAAK,CAAC,EACN,KAAK,CAAC,EACL,QAAQ,CAAC,EACT,aAAa,CAAC,EACd,eAAmC,OAAO,EAClC,OAAO,CAAC,EAChB,WAAW,CAAC,EACZ,QAAQ,CAAC;QAVT,YAAO,GAAP,OAAO,CAAc;QACtB,MAAC,GAAD,CAAC,CAAQ;QACT,MAAC,GAAD,CAAC,CAAQ;QACT,OAAE,GAAF,EAAE,CAAI;QACN,OAAE,GAAF,EAAE,CAAI;QACL,UAAK,GAAL,KAAK,CAAI;QACT,eAAU,GAAV,UAAU,CAAI;QACd,iBAAY,GAAZ,YAAY,CAA8B;QAClC,SAAI,GAAJ,IAAI,CAAI;QAChB,aAAQ,GAAR,QAAQ,CAAI;QACZ,UAAK,GAAL,KAAK,CAAI;QAbb,aAAQ,GAAW,CAAC,CAAC;QAezB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACtB,CAAC;IAEM,MAAM,CAAC,EAAU;QACpB,OAAO;QACP,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QAEpB,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;YACpB,kDAAkD;YAClD,OAAO,IAAI,CAAC;SACf;aAAM;YACH,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC/D;QAED,UAAU;QACV,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;QAEvC,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,CAAC,EAAE;YAChC,MAAM,MAAM,GAAG,aAAI,CAAC,OAAO,CAAC,WAAW,EAAI,EAAE,EAAC;YAC9C,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC;YAClB,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC;SACrB;QAED,WAAW;QACX,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAEnC,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,IAAI,CAAC,GAA6B;QACrC,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1E,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAE9B,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC1B;QAED,IAAI,IAAI,CAAC,YAAY,YAAY,MAAM,EAAE;YACrC,QAAQ;YACR,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC;YAC9B,MAAM,CAAC,GAAG,CAAO,GAAI,CAAC,YAAY,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAO,GAAI,CAAC,aAAa,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC;YAC/F,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1B,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SAC9F;aAAM;YACH,QAAQ;YACR,GAAG,CAAC,SAAS,GAAI,IAAI,CAAC,YAAuB,CAAC;YAC9C,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACtE;QAED,GAAG,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;CACJ;AA3ED,4BA2EC;AAED,MAAa,UAAU;IAGnB,YAA6B,IAA2B,EAAmB,QAAQ,IAAI;QAA1D,SAAI,GAAJ,IAAI,CAAuB;QAAmB,UAAK,GAAL,KAAK,CAAO;QAF/E,YAAO,GAAa,EAAE,CAAC;QAG3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;SACrC;IACL,CAAC;IAEM,GAAG,CAAC,CAAS;QAChB,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC;IAEM,QAAQ,CAAC,CAAS;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;IAEM,MAAM;QACT,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACnE,CAAC;IAEM,MAAM,CAAC,UAAsB,EAAE,cAAc,GAAG,CAAC;QACpD,MAAM,KAAK,GAAG,CAAC,GAAG,cAAc,CAAC;QACjC,MAAM,GAAG,GAAG,CAAC,KAAK,GAAG,cAAc,CAAC,GAAG,KAAK,CAAC;QAC7C,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACvD,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,cAAc,CAAC,EAC/C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACpD,CAAC;CACJ;AA7BD,gCA6BC;AAED,SAAS,eAAe,CAAC,CAAS,EAAE,KAAa,CAAC;IAC9C,OAAO,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC;AAEY,mBAAW,GAAG;IACvB,QAAQ,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrC,MAAM,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAChC,OAAO,EAAE,CAAC,IAAY,GAAG,EAAE,KAAa,CAAC,EAAE,EAAE,CAAC,IAAI,UAAU,CAAC,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACpF,GAAG,EAAE,CAAC,IAAY,GAAG,EAAE,KAAa,CAAC,EAAE,EAAE,CAAC,qBAAqB;KACvD,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxF,KAAK,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,gBAAgB;CAC3E,CAAC;;;;;;;;;;;;;;;;;ACjQF,8GAAwD;AACxD,wGAAgD;AAChD,oIAAuE;AACvE,6GAAwD;AAExD,yHAAyD;AACzD,qGAAgD;AAChD,kGAA4C;AAC5C,sHAAuD;AACvD,yHAAyD;AACzD,sFAAoC;AAGpC,qGAAkD;AAClD,+GAAwD;AACxD,wGAAmD;AACnD,4HAA2D;AAC3D,oHAA4D;AAC5D,uFAAoD;AACpD,2FAA8C;AAC9C,8FAAoD;AACpD,qGAA2D;AAC3D,oGAAkE;AAClE,8FAA8C;AAC9C,8GAAoD;AACpD,kIAA+D;AAC/D,4FAAwC;AAExC,MAAM,YAAY,GAAG;IACjB,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;CACZ,CAAC;AAEF,MAAa,UAAW,SAAQ,6BAAa;IAkDzC,YAAmB,IAAoB;;QACnC,KAAK,iBACD,QAAQ,EAAE,UAAU,CAAC,MAAM,EAC3B,MAAM,EAAE,qBAAS,CAAC,MAAM,EACxB,WAAW,EAAE,qBAAS,CAAC,MAAM,EAC7B,GAAG,EAAE,MAAM,EACX,EAAE,EAAE,QAAQ,EACZ,YAAY,EAAE,IAAI,WAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACnC,kBAAkB,EAAE,IAAI,iBAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IACpC,IAAI,EACT,CAAC;QAtCP,iCAAiC;QACzB,gBAAW,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QAE1B,gBAAW,GAAG,KAAK,CAAC;QACpB,gBAAW,GAAkB,IAAI,CAAC;QAClC,iBAAY,GAAW,CAAC,CAAC;QACzB,eAAU,GAAG,GAAG,CAAC;QAKjB,SAAI,GAAG,EAAE,CAAC;QACV,aAAQ,GAAG,CAAC,CAAC;QACb,sBAAiB,GAAG,CAAC,CAAC;QAE9B,qBAAqB;QACJ,kBAAa,GAAG,GAAG,CAAC;QACpB,UAAK,GAAG,EAAE,CAAC;QACX,iBAAY,GAAG,GAAG,CAAC;QACnB,iBAAY,GAAG,GAAG,CAAC;QACnB,cAAS,GAAG,GAAG,CAAC;QAChB,cAAS,GAAG,GAAG,CAAC;QAChB,iBAAY,GAAG,EAAE,CAAC;QAClB,gBAAW,GAAG,IAAI,CAAC;QAC5B,kBAAa,GAAG,KAAK,CAAC;QAe1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,6BAAa,EAAE,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,IAAI,+BAAc,EAAE,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,+BAAc,EAAE,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,iCAAe,CAAC,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC;QACjE,IAAI,CAAC,WAAW,GAAG,IAAI,iCAAe,CAAC;YACnC,IAAI,EAAE,UAAU,CAAC,IAAI;YACrB,MAAM,EAAE,qBAAS,CAAC,SAAS;YAC3B,KAAK,EAAE,iBAAK,CAAC,GAAG;SACnB,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACjC,MAAM,kBAAkB,GAAG,IAAI,qCAAiB,EAAE,CAAC;QACnD,UAAI,CAAC,SAAS,0CAAE,WAAW,CAAC,kBAAkB,EAAE;QAChD,UAAI,CAAC,SAAS,0CAAE,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE;QAC7C,UAAI,CAAC,UAAU,0CAAE,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE;QAC/C,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACvB,MAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,aAAa,GAAG,IAAI,2BAAY,CAAC;YAClC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC;YACvB,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,YAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,YAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC;YAC7D,KAAK,EAAE,GAAG,EAAE,CAAC,gBAAO,CAAC,YAAY,CAAC;YAClC,IAAI,EAAE,YAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACf,OAAO,EAAE,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAC;YACxB,QAAQ,EAAE,GAAG,EAAE,CAAC,YAAG,CAAC,GAAG,EAAE,GAAG,CAAC;YAC7B,UAAU,EAAE,0BAAW,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;SAC7C,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IA3DD,IAAY,sBAAsB;QAC9B,OAAO,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IAC3C,CAAC;IA2DM,gBAAgB;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IACM,QAAQ;;QACX,gCAAgC;QAChC,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,WAAI,CAAC,QAAQ,EAAE,0CAAE,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/E,CAAC;IACM,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IACM,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IACM,YAAY;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IACM,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IACM,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IACM,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAEM,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,WAAK,EAAE,EAAE;YAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC;YACxD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;YAChD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC1B,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC1C;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;YACjB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACrB,OAAO;SACV;QACD,IAAI,IAAI,CAAC,SAAS,EAAE,YAAY,qBAAS,EAAE;YACvC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnB,OAAO;SACV;QACD,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAEnB,WAAW;QACX,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QAE1C,kBAAkB;QAClB,MAAM,SAAS,GAAG,CAAC,KAAK,CAAC,oBAAoB,GAAG,mCAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACrF,CAAC,KAAK,CAAC,oBAAoB,GAAG,mCAAgB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/E,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QAC7B,OAAO;QACP,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,CAAC,mCAAgB,CAAC,WAAW,CAAC,EAAE;YACnE,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;QACD,IAAI,IAAI,CAAC,MAAM,EAAE,KAAK,MAAM,EAAE;YAC1B,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAClC;aAAM;YACH,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAClC;QACD,SAAS;QACT,IAAI,IAAI,CAAC,WAAW,CAAC,mCAAgB,CAAC,aAAa,CAAC,EAAE;YAClD,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;QACD,QAAQ;QACR,IAAI,IAAI,CAAC,WAAW,CAAC,mCAAgB,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;YACxE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBAC5C,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;aACzC;SACJ;QACD,WAAW;QACX,IAAI,IAAI,CAAC,WAAW,CAAC,mCAAgB,CAAC,eAAe,CAAC,EAAE;YACpD,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC1C,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;SACJ;QACD,aAAa;QACb,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,QAAQ,EAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;SACtD;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,4CAA4C;QAC5C,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;YAClB,IAAI,IAAI,CAAC,MAAM,EAAE,KAAK,MAAM,EAAE;gBAC1B,IAAI,iBAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE;oBACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC9B;aACJ;SACJ;QACD,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACnC,CAAC;IAEO,uBAAuB;QAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,oBAAoB,CAAC;IACxD,CAAC;IAED;;OAEG;IACK,WAAW,CAAC,MAAwB;QACxC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;QACnC,OAAO,CAAC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAClG,CAAC;IAEM,KAAK;QACR,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;YACjB,UAAU,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAC/B,UAAU,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAClC;aAAM,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAC3C,IAAI,CAAC,YAAY,GAAG,UAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YACxB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC;SACpF;IACL,CAAC;IAEY,MAAM;;YACf,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,YAAY,EAAE;gBACrD,OAAO;aACV;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACrC,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC9B,MAAM,YAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;YAC9B,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,CAAC;KAAA;IAEO,aAAa;;QACjB,UAAI,CAAC,SAAS,0CAAE,SAAS,CAAC,CAAC,CAAC,EAAE;;YAC1B,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,MAAM,aAAa,GAAG,IAAI,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;gBACzC,MAAM,YAAY,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;gBACzC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBACnB,IAAI,CAAC,WAAW,GAAG,UAAG,EAAE,CAAC;iBAC5B;gBACD,MAAM,cAAc,GAAG,CAAC,UAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;gBACrE,IAAI,MAAM,GAAG,aAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,cAAc,CAAC,EAAI,GAAG,EAAC;gBACvD,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;gBAChD,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;oBACtB,MAAM,UAAU,GAAG,IAAI,CAAC,sBAAsB,GAAG,aAAa,CAAC;oBAC/D,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,GAAG,UAAU,GAAG,MAAM,CAAC,CAAC;iBACpE;qBAAM;oBACH,MAAM,UAAU,GAAG,IAAI,CAAC,sBAAsB,GAAG,YAAY,CAAC;oBAC9D,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,GAAG,UAAU,GAAG,MAAM,CAAC,CAAC;iBACpE;aACJ;iBAAM,IAAI,UAAG,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,EAAE;gBAC1D,MAAM,YAAY,GAAG,CAAC,UAAG,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;gBAC3E,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;oBACtB,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC;iBACnG;qBAAM;oBACH,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC;iBACnG;aACJ;iBAAM;gBACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;aAC9C;YACD,wBAAwB;YACxB,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;gBACtB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aAChB;iBAAM;gBACH,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACf;YACD,2BAA2B;YAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;YACtC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,KAAK,CAAC,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC;YACjH,UAAI,CAAC,SAAS,0CAAE,WAAW,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE;YAC9E,iEAAiE;YACjE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBAC1B,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;oBAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBAC1B;qBAAM;oBACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACxB,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;iBACpB;YACL,CAAC,CAAC,CAAC;QACP,CAAC,EAAE;QACH,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACvB;aAAM,IAAI,IAAI,CAAC,SAAS,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACvB;aAAM,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACvB;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACvB;QACD,UAAI,CAAC,SAAS,0CAAE,UAAU,CAAC,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,EAAE;IAClG,CAAC;IAGM,GAAG;;QACN,KAAK,CAAC,GAAG,EAAE,CAAC;QACZ,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QAC5B,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QAC5B,kDAAkD;QAClD,MAAM,MAAM,SAAG,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAS,CAAC,0CAAE,MAAM,CAAC;QACjE,IAAI,MAAM,EAAE;YACR,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC;YACjC,KAAK,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;YAC/B,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE;gBACf,QAAQ,EAAE,CAAC;gBACX,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;aACxB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBACT,eAAe;gBACf,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACtB,KAAK,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC9B,6BAA6B;gBAC7B,wCAAwC;gBACxC,IAAI,CAAC,OAAO,EAAE,CAAC,cAAc,EAAE,CAAC;YACpC,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAGM,kBAAkB;;QACrB,MAAM,QAAQ,eAAG,IAAI,CAAC,QAAQ,EAAE,0CAAE,QAAQ,CAAC,oBAAoB,CAAC,yBAAW,oCAAK,EAAE,CAAC;QACnF,MAAM,IAAI,eAAG,IAAI,CAAC,QAAQ,EAAE,0CAAE,QAAQ,CAAC,oBAAoB,CAAC,iBAAO,oCAAK,EAAE,CAAC;QAC3E,MAAM,OAAO,GAAG,CAAC,GAAG,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;QACvC,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;IAC5C,CAAC;IAEM,QAAQ,CAAC,KAAc;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAEO,iBAAiB,CAAC,KAA4B;QAClD,IAAI,CAAC,WAAW,GAAG,IAAI,iBAAO,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;aACrD,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACjF,QAAQ,EAAE,CAAC;IACpB,CAAC;IAES,QAAQ;;QACd,UAAI,CAAC,QAAQ,EAAE,0CAAE,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,EAAE;IACzE,CAAC;IAES,UAAU;;QAChB,UAAI,CAAC,QAAQ,EAAE,0CAAE,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,EAAE;IAC5E,CAAC;IAES,aAAa;QACnB,KAAK,CAAC,aAAa,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC;IACrD,CAAC;IAEO,qBAAqB;QACzB,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE;YACzC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC7B;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE;YACvC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC9B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAnWG;IADC,cAAK,CAAC,yBAAa,CAAC;sCACA,uBAAU;8BAAC;AAGhC;IADC,cAAK,CAAC,6BAA6B,CAAC;sCACF,aAAK;mCAAC;AAGzC;IADC,cAAK,CAAC,yBAAyB,CAAC;sCACE,aAAK;mCAAC;AAGzC;IADC,cAAK,CAAC,uBAAuB,CAAC;sCACO,aAAK;sCAAC;AAG5C;IADC,cAAK,CAAC,sBAAsB,CAAC;sCACO,aAAK;qCAAC;AAG3C;IADC,cAAK,CAAC,qCAAqC,CAAC;sCACtB,mBAAQ;gCAAC;AAlBpC,gCAsWC;;;;;;;;;;;;;;;;;ACzYD,4FAAiD;AACjD,8GAAwD;AACxD,6GAAwD;AAGxD,qGAAkD;AAClD,wGAAmD;AACnD,8FAA8C;AAC9C,oGAA+C;AAE/C,MAAa,OAAQ,SAAQ,qBAAS;IAelC,YAAmB,IAAoB;QACnC,KAAK,iBACD,QAAQ,EAAE,OAAO,CAAC,MAAM,EACxB,MAAM,EAAE,qBAAS,CAAC,MAAM,EACxB,GAAG,EAAE,MAAM,EACX,YAAY,EAAE,IAAI,WAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAC/B,IAAI,EACT,CAAC;QAVP,iEAAiE;QACzD,0BAAqB,GAAG,YAAG,EAAI,CAAC,EAAC;QAqCjC,gBAAW,GAAG,GAAG,CAAC;QAClB,gBAAW,GAAG,CAAC,CAAC;QAChB,gBAAW,GAAG,CAAC,CAAC;QAChB,gBAAW,GAAG,CAAC,CAAC;QAChB,cAAS,GAAG,YAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACpD,aAAQ,GAAG,YAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAuBnD,sBAAiB,GAAG,GAAG,CAAC;QACxB,sBAAiB,GAAG,GAAG,CAAC;QACxB,0BAAqB,GAAG,qBAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAI,CAAC,EAAC;QAzDrF,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,mBAAO,CAAC,WAAW,CAAC,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACvB,CAAC;IAEM,sBAAsB,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE;QACvD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAES,QAAQ,CAAC,EAAU,EAAE,IAAY;QACvC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;YACjB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,OAAO;SACV;QACD,KAAK;QACL,QAAQ,IAAI,CAAC,KAAK,EAAE;YAChB,KAAK,mBAAO,CAAC,KAAK;gBACd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBACvB,MAAM;YACV,KAAK,mBAAO,CAAC,WAAW;gBACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC5B,MAAM;SACb;IACL,CAAC;IASS,gBAAgB,CAAC,IAAY;QACnC,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;YAC1B,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,EAAE;gBACrC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,QAAQ,GAAG,YAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;aAC3D;SACJ;aAAM,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE;YAClD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,YAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SAC5D;QACD,IAAI,IAAI,CAAC,0BAA0B,EAAE,GAAG,IAAI,CAAC,qBAAqB,EAAE;YAChE,IAAI,CAAC,qBAAqB,GAAG,qBAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAI,CAAC,EAAC;YACtF,IAAI,CAAC,QAAQ,CAAC,mBAAO,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;SACjC;IACL,CAAC;IAMO,WAAW,CAAC,IAAY;QAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,MAAM,IAAI,IAAI,CAAC,0BAA0B,EAAE,GAAG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,EAAE;YACvG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3D;aAAM;YACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,mBAAO,CAAC,WAAW,CAAC,CAAC;SACtC;IACL,CAAC;IAEO,0BAA0B;QAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,QAAQ,CAAC;SACnB;QACD,OAAO,MAAM,CAAC,WAAW,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IACtE,CAAC;IAEO,UAAU;QACd,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;YACvB,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC9B,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;SACjC;IACL,CAAC;IAEO,cAAc;QAClB,OAAO,OAAO,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,OAAO,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;IACpF,CAAC;CACJ;AA5GG;IADC,cAAK,CAAC,6BAA6B,CAAC;sCACd,mBAAQ;6BAAC;AAGhC;IADC,cAAK,CAAC,yBAAyB,CAAC;sCACO,aAAK;qCAAC;AAG9C;IADC,cAAK,CAAC,0BAA0B,CAAC;sCACM,aAAK;qCAAC;AARlD,0BA8GC;;;;;;;;;;;;;;;;;ACxHD,8GAAwD;AACxD,6GAAwD;AACxD,8GAAoD;AAEpD,qGAAkD;AAClD,wGAAmD;AAOnD,MAAa,UAAW,SAAQ,iCAAe;IAY3C,YAAmB,EAAuD;YAAvD,EAAE,QAAQ,GAAG,KAAK,EAAE,QAAQ,OAA2B,EAAtB,IAAI,sBAArC,wBAAuC,CAAF;QACpD,KAAK,iBACD,QAAQ,EAAE,UAAU,CAAC,MAAM,EAC3B,MAAM,EAAE,qBAAS,CAAC,MAAM,EACxB,GAAG,EAAE,KAAK,IACP,IAAI,GACR,yBAAyB,CAAC,CAAC;QAX1B,aAAQ,GAAY,KAAK,CAAC;QAE1B,iBAAY,GAAG,CAAC,CAAC;QAUrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAEM,QAAQ;QACX,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,UAAU,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC7B,UAAU,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAChC;YACD,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;IACL,CAAC;IAEM,WAAW;QACd,OAAO,IAAI,CAAC,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IACrD,CAAC;IAEM,WAAW;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;CAaJ;AArDG;IADC,cAAK,CAAC,iCAAiC,CAAC;sCACT,mBAAQ;gCAAC;AAGzC;IADC,cAAK,CAAC,gCAAgC,CAAC;sCACJ,aAAK;oCAAC;AAL9C,gCAuDC;;;;;;;;;;;;;;;;;ACnED,wGAAmD;AAEnD,+GAA0D;AAI1D,MAAM,WAAW,GAAG;IAChB,iCAAiC;IACjC,uCAAuC;IACvC,qCAAqC;IACrC,2BAA2B;IAC3B,oCAAoC;IACpC,6BAA6B;IAC7B,2BAA2B;IAC3B,+BAA+B;IAC/B,gCAAgC;IAChC,wCAAwC;CAC3C,CAAC;AACF,MAAM,YAAY,GAA8B;IAC5C,WAAW,EAAE,CAAC;IACd,iBAAiB,EAAE,CAAC;IACpB,eAAe,EAAE,CAAC;IAClB,KAAK,EAAE,CAAC;IACR,cAAc,EAAE,CAAC;IACjB,OAAO,EAAE,CAAC;IACV,KAAK,EAAE,CAAC;IACR,SAAS,EAAE,CAAC;IACZ,UAAU,EAAE,CAAC;IACb,kBAAkB,EAAE,CAAC;CACxB,CAAC;AACF,SAAS,oBAAoB,CAAC,IAAY;;IACtC,aAAO,YAAY,CAAC,IAAI,CAAC,mCAAI,CAAC,CAAC,CAAC;AACpC,CAAC;AAED,MAAa,cAAe,SAAQ,qBAAoB;IAIpD,YAAmB,IAAqB;;QACpC,MAAM,KAAK,qBAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,mBAAmB,CAAC,OAAO,EAAE,KAAK,2CAAG,QAAQ,qCAAM,EAAE,CAAC;QACvF,MAAM,SAAS,qBAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,mBAAmB,CAAC,WAAW,EAAE,KAAK,2CAAG,QAAQ,qCAAM,GAAG,CAAC;QAChG,MAAM,SAAS,qBAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,mBAAmB,CAAC,OAAO,EAAE,QAAQ,2CAAG,QAAQ,qCAAM,EAAE,CAAC;QAE9F,MAAM,eAAe,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAC;QACxD,IAAI,KAAY,CAAC;QACjB,IAAI,eAAe,KAAK,CAAC,CAAC,EAAE;YACxB,KAAK,GAAG,cAAc,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;SAClD;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,UAAU,SAAS,uBAAuB,CAAC,CAAC;SAC/D;QAED,KAAK,iCAAM,IAAI,KAAG,KAAK,EAAE,SAAS,EAAE,KAAK,IAAE,CAAC;IAChD,CAAC;CACJ;AAjBG;IADC,cAAK,CAAC,WAAW,CAAC;;oCACY;AAFnC,wCAmBC;;;;;;;;;;;;;;;;;ACrDD,8GAAwD;AACxD,wGAAmD;AACnD,4GAAuD;AACvD,6GAAwD;AACxD,wHAA+D;AAE/D,8FAA+C;AAC/C,uFAAqC;AAErC,4FAAwC;AAExC,MAAa,SAAU,SAAQ,2BAAuB;IAalD,YAAmB,IAAoB;QACnC,KAAK,+BACD,QAAQ,EAAE,SAAS,CAAC,MAAM,EAC1B,MAAM,EAAE,qBAAS,CAAC,MAAM,IACrB,IAAI,KACP,KAAK,EAAE,iBAAK,CAAC,UAAU,IACzB,CAAC;QAVC,iBAAY,GAAG,CAAC,CAAC;QACjB,eAAU,GAAG,CAAC,CAAC;QACf,kBAAa,GAAG,CAAC,CAAC;QAStB,IAAI,CAAC,aAAa,GAAG,IAAI,qBAAS,CAAC;YAC/B,CAAC,EAAE,CAAC,GAAG;YACP,CAAC,EAAE,CAAC,EAAE;YACN,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,iBAAK,CAAC,KAAK;SACrB,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,mBAAQ,CAAC,GAAG,EAAE,GAAG,EAAC,GAAG,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,IAAI,2BAAY,CAAC;YAC/B,QAAQ,EAAE,SAAS,CAAC,gBAAgB;YACpC,MAAM,EAAE,qBAAS,CAAC,MAAM;YACxB,KAAK,EAAE,iBAAK,CAAC,OAAO;SACvB,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACpC,MAAc,CAAC,KAAK,GAAG,IAAI,CAAC;IACjC,CAAC;IAEM,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,aAAa,EAAE;YACxC,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,UAAU,GAAG,YAAK,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACpF,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC5C,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;SACtD;IACL,CAAC;IAEM,SAAS;QACZ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IAC3B,CAAC;IAEM,SAAS;QACZ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IAC3B,CAAC;CACJ;AArDG;IADC,cAAK,CAAC,oCAAoC,CAAC;sCACrB,mBAAQ;+BAAC;AAEhC;IADC,cAAK,CAAC,oCAAoC,CAAC;sCACX,mBAAQ;yCAAC;AAJ9C,8BAuDC;;;;;;;;;;;;;;;;ACjED,+GAA0D;AAC1D,gHAA2D;AAC3D,kHAA2D;AAC3D,kHAA6E;AAE7E,6GAAkF;AAClF,0FAAwC;AAExC,6FAA8C;AAE9C,MAAa,iBAAkB,SAAQ,qBAAoB;IAKvD,YAAmB,IAAqB;;QACpC,KAAK,iBACD,MAAM,EAAE,qBAAS,CAAC,MAAM,EACxB,EAAE,EAAE,YAAY,EAChB,KAAK,EAAE,iBAAK,CAAC,KAAK,IACf,IAAI,EACT,CAAC;QARC,aAAQ,GAA0B,IAAI,CAAC;QAS3C,IAAI,CAAC,KAAK,qBAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,mBAAmB,CAAC,OAAO,EAAE,OAAO,2CAAG,QAAQ,qCAAM,IAAI,mBAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACjH,IAAI,CAAC,SAAS,qBAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,mBAAmB,CAAC,WAAW,EAAE,KAAK,2CAAG,QAAQ,qCAAM,GAAG,CAAC;QAC/F,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEO,cAAc;QAClB,MAAM,MAAM,GAAY,EAAE,CAAC;QAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACjC,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,MAAM,SAAS,GAAG,GAAG,CAAC;QACtB,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,IAAI,EAAE,EAAE;YACrC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,UAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,EAAI,CAAC,EAAC;YACpD,MAAM,GAAG,GAAG,0BAAc,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACpB;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEnC,MAAM,MAAM,GAAG,uBAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,GAAG,GAAG,8BAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC9C,MAAM,MAAM,GAAG,IAAI,iBAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;QAC/F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;YACxD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC/D;IACL,CAAC;IAEM,QAAQ,CAAC,KAAY;QACxB,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,UAAU,CAAC,2BAAe,CAAC,SAAS,CAAC,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,IAAI,CAAC,GAA6B;;QACrC,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,SAAS,EAAE,CAAC;QAChB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,GAAG,CAAC,SAAS,SAAG,IAAI,CAAC,QAAQ,mCAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACvD,MAAM,aAAa,GAAG,SAAS,GAAG,CAAC,CAAC;QACpC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;QACzE,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;CACJ;AA1DD,8CA0DC;;;;;;;;;;;;;;;;ACrED,+GAA0D;AAG1D,MAAa,eAAgB,SAAQ,mBAAmB;IAE7C,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;IAC9G,CAAC;CACJ;AAND,0CAMC;;;;;;;;;;;;;;;;ACRD,gHAA2D;AAC3D,kHAA2E;AAC3E,0FAAwC;AAExC,gGAA2C;AAE3C,MAAa,cAAe,SAAQ,qBAAoB;IAGpD,YAA2B,YAAsB,EAAE,IAAoB;QACnE,KAAK,iBACD,MAAM,EAAE,qBAAS,CAAC,MAAM,EACxB,EAAE,EAAE,YAAY,EAChB,KAAK,EAAE,iBAAK,CAAC,KAAK,IACf,IAAI,EACT,CAAC;QANoB,iBAAY,GAAZ,YAAY,CAAU;IAOjD,CAAC;IAEM,IAAI,CAAC,OAAiC;QACzC,OAAO,CAAC,IAAI,EAAE,CAAC;QACf,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE,EAAE;YAC9B,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACxB;QACD,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;YAC7B,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YAChH,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC/B;QACD,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAChD,OAAO,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;IAEO,MAAM,CAAC,aAAa,CAAC,KAAa,EAAE,MAAc;QACtD,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAA6B,CAAC;QAChE,MAAM,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACxD,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC5B,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC5B,MAAM,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;gBACrB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC9B,MAAM,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;gBACvB,IAAI,CAAC,GAAG,CAAC,CAAC;gBACV,IAAI,EAAE,GAAG,IAAI,EAAE;oBACX,MAAM,MAAM,GAAG,UAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAI,GAAG,EAAC;oBACxE,MAAM,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,EAAI,GAAG,EAAC,CAAC;oBAClG,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,MAAM,CAAC;iBAC7B;gBACD,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBACxC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;aACrB;SACJ;QACD,GAAG,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;QACxB,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;QAC7B,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,SAAS;QACZ,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC5B,OAAO,IAAI,IAAI,CAAC,CAAC,IAAI,YAAY,uBAAU,CAAC,EAAE;YAC1C,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;SAC3B;QACD,OAAO,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,IAAI,CAAC;IACxB,CAAC;;AA/DL,wCAgEC;AA/DkB,oBAAK,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;;;;;;;;;;;;;;;;;ACRlE,iHAA2D;AAC3D,2GAAsD;AACtD,gHAA2D;AAC3D,iGAAiD;AACjD,2HAAkE;AAIlE,MAAa,aAAc,SAAQ,2BAAuB;IAGtD,qCAAqC;IAErC,YAAmB,IAAoB;QACnC,KAAK,iBACD,QAAQ,EAAE,aAAa,CAAC,MAAM,EAC9B,MAAM,EAAE,qBAAS,CAAC,IAAI,EACtB,WAAW,EAAE,qBAAS,CAAC,SAAS,EAChC,GAAG,EAAE,MAAM,EACX,EAAE,EAAE,WAAW,EACf,CAAC,EAAE,CAAC,CAAC,EACL,YAAY,EAAE,IAAI,WAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAChC,IAAI,EACT,CAAC;IACP,CAAC;CACJ;AAfG;IADC,cAAK,CAAC,oCAAoC,CAAC;sCACrB,mBAAQ;mCAAC;AAFpC,sCAiBC;;;;;;;;;;;;;;;;;ACzBD,iHAA2D;AAC3D,2GAAsD;AACtD,gHAA2D;AAC3D,iGAAiD;AACjD,2HAAkE;AAIlE,MAAa,cAAe,SAAQ,2BAAuB;IAIvD,YAAmB,IAAoB;QACnC,KAAK,iBACD,QAAQ,EAAE,cAAc,CAAC,MAAM,EAC/B,MAAM,EAAE,qBAAS,CAAC,MAAM,EACxB,GAAG,EAAE,MAAM,EACX,EAAE,EAAE,YAAY,EAChB,YAAY,EAAE,IAAI,WAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAChC,IAAI,EACT,CAAC;IACP,CAAC;CACJ;AAZG;IADC,cAAK,CAAC,qCAAqC,CAAC;sCACtB,mBAAQ;oCAAC;AAFpC,wCAcC;;;;;;;;;;;;;;;;;ACrBD,mGAAiD;AACjD,sGAAiD;AACjD,wGAAmD;AACnD,4GAAuD;AACvD,wHAA+D;AAC/D,+GAAuD;AACvD,mGAA+C;AAC/C,mGAA+C;AAC/C,sGAAiD;AACjD,uFAA6E;AAC7E,qHAA2D;AAC3D,gGAA6C;AAE7C,2FAA8C;AAC9C,oHAA4D;AAC5D,8HAAmE;AACnE,6GAAwD;AACxD,yGAAmD;AACnD,6FAA2C;AAC3C,sGAAiD;AACjD,yGAAmD;AACnD,+GAAyD;AACzD,qGAAkD;AAClD,kHAAyD;AAEzD,MAAa,SAAU,SAAQ,aAAgB;IAA/C;;QAUY,cAAS,GAAY,KAAK,CAAC;QAE3B,YAAO,GAAG,IAAI,2BAAY,CAAY,EAAE,GAAG,EAAE,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE;gBACzE,WAAW,EAAE,6BAAa;gBAC1B,QAAQ,EAAE,uBAAU;gBACpB,OAAO,EAAE,yBAAW;gBACpB,KAAK,EAAE,iBAAO;gBACd,OAAO,EAAE,qBAAS;gBAClB,OAAO,EAAE,qBAAS;gBAClB,aAAa,EAAE,iCAAe;gBAC9B,MAAM,EAAE,mBAAQ;gBAChB,QAAQ,EAAE,uBAAU;gBACpB,aAAa,EAAE,uBAAU;gBACzB,SAAS,EAAE,yBAAW;gBACtB,OAAO,EAAE,+BAAc;aAC1B,EAAC,CAAC,CAAC;IAmGR,CAAC;IAjGU,KAAK;QACR,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7E,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,cAAc,CAAC,CAAE,iBAAK,CAAC,KAAK,CAAE,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,CAAE,iBAAK,CAAC,GAAG,CAAE,CAAC,CAAC;QAEjC,+BAA+B;QAC/B,iEAAiE;QACjE,6HAA6H;QAC7H,8EAA8E;QAC9E,eAAe;QACf,IAAI,yBAAW,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3D,IAAI,yBAAW,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3D,IAAI,yBAAW,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3D,IAAI,qBAAS,CAAC,EAAE,KAAK,EAAE,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEzH,IAAI,WAAK,EAAE,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,+BAAc,CAAC;gBACzC,IAAI,EAAE,SAAS,CAAC,IAAI;gBACpB,MAAM,EAAE,qBAAS,CAAC,QAAQ;gBAC1B,CAAC,EAAE,EAAE;gBACL,CAAC,EAAE,EAAE;gBACL,KAAK,EAAE,iBAAK,CAAC,GAAG;aACnB,CAAC,CAAC,CAAC;SACP;QAED,UAAU,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,OAAO;QACV,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAEM,QAAQ;QACX,IAAI,WAAK,EAAE,EAAE;YACT,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YAC/D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;SAC9D;IACL,CAAC;IAEM,UAAU;QACb,IAAI,WAAK,EAAE,EAAE;YACT,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YAClE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;SACjE;IACL,CAAC;IAEO,aAAa,CAAC,KAAoB;QACtC,IAAI,KAAK,CAAC,GAAG,KAAK,KAAK,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,cAAc,EAAE,CAAC;aACzB;YACD,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;SAC3B;IACL,CAAC;IAEO,WAAW,CAAC,KAAoB;QACpC,IAAI,KAAK,CAAC,GAAG,KAAK,KAAK,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,cAAc,EAAE,CAAC;aACzB;YACD,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;SAC3B;IACL,CAAC;IAEO,cAAc;QAClB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;YAC7C,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,sBAAU,GAAG,MAAM,CAAC,KAAK,EAAE,uBAAW,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC/H,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;SAC9D;IACL,CAAC;IAEM,cAAc;QACjB,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACxD,IAAI,MAAM,IAAI,IAAI,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aAC5C;YACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;YAC9D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;IACL,CAAC;IAEO,mBAAmB,CAAC,KAA4B;QACpD,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,MAAM,IAAI,IAAI,EAAE;YAChB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;SAC7C;IACL,CAAC;CACJ;AA1HG;IADC,cAAK,CAAC,yBAAa,CAAC;sCACA,uBAAU;6BAAC;AAGhC;IADC,cAAK,CAAC,gCAAgC,CAAC;sCACpB,mBAAQ;4BAAC;AAG7B;IADC,cAAK,CAAC,2BAA2B,CAAC;sCACM,aAAK;wCAAC;AARnD,8BA4HC;;;;;;;;;;;;;;;;;ACrJD,mGAAiD;AACjD,iIAAqE;AACrE,gGAA0C;AAE1C,MAAa,YAAa,SAAQ,aAAgB;IAGvC,KAAK;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,iCAAe,CAAC;YACnC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC;YACvB,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC;SAC3B,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IAEM,OAAO;QACV,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAEY,QAAQ;;YACjB,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,uBAAU,CAAC,CAAC;QAC1C,CAAC;KAAA;IAEO,cAAc,CAAC,KAAa,EAAE,MAAc;QAChD,IAAI,MAAM,GAAG,KAAK,EAAE;YAChB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;SAChD;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;SAC7B;IACL,CAAC;CACJ;AA1BD,oCA0BC;;;;;;;;;;;;;;;;;AC9BD,mGAAiD;AACjD,uFAAsE;AACtE,4GAAuD;AACvD,oHAA4D;AAC5D,wGAAmD;AACnD,6GAAwD;AACxD,+GAAyD;AACzD,6FAAwC;AACxC,qGAAkD;AAClD,oIAAuE;AAEvE,MAAa,UAAW,SAAQ,aAAgB;IAAhD;;QAUY,cAAS,GAAc,IAAI,qBAAS,CAAC,EAAE,KAAK,EAAE,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,qBAAS,CAAC,QAAQ,EAAC,CAAC,CAAC;QAClG,aAAQ,GAAG,IAAI,mBAAQ,CAAC,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,qBAAS,CAAC,MAAM,EAAE,CAAC,CAAC;IA4BzF,CAAC;IA1BU,KAAK;QACR,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ;aACR,OAAO,CAAC,sBAAsB,CAAC;aAC/B,MAAM,CAAC,sBAAU,GAAG,CAAC,EAAE,uBAAW,GAAG,EAAE,CAAC;aACxC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE7B,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC7B,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IACM,OAAO;QACV,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAEM,SAAS;QACZ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAS,CAAC,CAAC;IACzC,CAAC;IAEM,MAAM,CAAC,EAAU,EAAE,IAAY;QAClC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACvB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAE9B,IAAI,KAAK,CAAC,oBAAoB,GAAG,mCAAgB,CAAC,OAAO,EAAE;YACvD,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;IACL,CAAC;CACJ;AArCG;IADC,cAAK,CAAC,yBAAa,CAAC;sCACA,uBAAU;8BAAC;AAGhC;IADC,cAAK,CAAC,wBAAwB,CAAC;sCACL,gBAAgB;oCAAC;AAG5C;IADC,cAAK,CAAC,mCAAmC,CAAC;sCACvB,aAAK;6BAAC;AAR9B,gCAuCC;;;;;;;;;;;;;ACnDW;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACvJA;AACa;;AAEb,gBAAgB,mBAAO,CAAC,mEAAoB;;AAE5C,gBAAgB,mBAAO,CAAC,yDAAe;AACvC,gBAAgB,mBAAO,CAAC,yDAAe;AACvC,gBAAgB,mBAAO,CAAC,uEAAsB;;AAE9C;;AAEA;;AAEA;;;;;;;;;;;;;ACba;;;AAGb,mBAAmB,mBAAO,CAAC,+DAAgB;AAC3C,mBAAmB,mBAAO,CAAC,+DAAgB;AAC3C,mBAAmB,mBAAO,CAAC,iEAAiB;AAC5C,mBAAmB,mBAAO,CAAC,iEAAiB;AAC5C,mBAAmB,mBAAO,CAAC,+DAAgB;;AAE3C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA,8BAA8B;AAC9B;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe;;AAElB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB;AAClB,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,cAAc;;AAEjC;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,yCAAyC;;AAE9D;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ya;;;AAGb,mBAAmB,mBAAO,CAAC,+DAAgB;AAC3C,mBAAmB,mBAAO,CAAC,+DAAgB;AAC3C,mBAAmB,mBAAO,CAAC,iEAAiB;AAC5C,mBAAmB,mBAAO,CAAC,mEAAkB;AAC7C,mBAAmB,mBAAO,CAAC,iEAAiB;AAC5C,mBAAmB,mBAAO,CAAC,+DAAgB;AAC3C,mBAAmB,mBAAO,CAAC,iEAAiB;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA,8BAA8B;AAC9B;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,eAAe;;AAElB;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAsD;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,kEAAkE;;AAEvF;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,yCAAyC;;AAE9D;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;ACtaa;;;AAGb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,4BAA4B,YAAY;AACxC,qBAAqB,8BAA8B;AACnD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACxGA;AACa;;;AAGb,YAAY,mBAAO,CAAC,yDAAU;;;AAG9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK,wCAAwC,EAAE,aAAa,sBAAsB;AAClF,KAAK,oDAAoD,EAAE,aAAa,0BAA0B;;;AAGlG;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA,kCAAkC;;;AAGlC;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA,mBAAmB,qBAAqB,UAAU;;AAElD;AACA;AACA,oBAAoB,0BAA0B,gBAAgB,UAAU;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,0BAA0B,UAAU;;AAExD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,kBAAkB;;AAE3C;AACA;AACA,kDAAkD,OAAO;;AAEzD;AACA;AACA,gBAAgB,YAAY;;AAE5B;AACA;AACA,kBAAkB,YAAY;;AAE9B;AACA;;;;;;;;;;;;;AC1La;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;;;;;;AClDa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnEa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA,sBAAsB;AACtB;;;AAGA;;;;;;;;;;;;;AC1Da;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,gEAAiB;AACvC,cAAc,mBAAO,CAAC,sDAAS;AAC/B,cAAc,mBAAO,CAAC,0DAAW;AACjC,cAAc,mBAAO,CAAC,sDAAS;AAC/B,cAAc,mBAAO,CAAC,4DAAY;;AAElC;AACA;;;AAGA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;;;AAGA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;;AAE1B,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,sBAAsB,qBAAqB,cAAc,EAAE;;;AAG/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B,kBAAkB,UAAU;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,wBAAwB;AACxB,YAAY;AACZ,UAAU;AACV,+BAA+B;AAC/B,gCAAgC;AAChC;AACA;;AAEA,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;;AAE3D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;;AAEb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;;AAEnE;AACA,yDAAyD;AACzD;;AAEA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;;AAEb;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO,EAAE;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,mBAAmB;;AAEnB;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO,EAAE;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oEAAoE;AACpE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,mBAAmB;AACnB,kBAAkB;AAClB,0BAA0B;AAC1B,4BAA4B;AAC5B,uBAAuB;AACvB,mBAAmB;AACnB,gBAAgB;AAChB,qBAAqB;AACrB,mBAAmB;AACnB,2BAA2B;AAC3B,uBAAuB;;AAEvB,kBAAkB;AAClB,kBAAkB;AAClB,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;;AAEnB,iBAAiB;AACjB,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB,sBAAsB;AACtB,2BAA2B;AAC3B,oBAAoB;AACpB,uBAAuB;AACvB,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB,oBAAoB;;AAEpB;AACA;;AAEA,sBAAsB;;AAEtB;;AAEA;;AAEA,2CAA2C;AAC3C,6CAA6C;AAC7C,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,0BAA0B;AAC1B,+CAA+C;AAC/C;;AAEA,oBAAoB;AACpB,oBAAoB;AACpB;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;AACnB,kBAAkB;;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,6BAA6B,uBAAuB;AACpD,8BAA8B,uBAAuB;AACrD;AACA;AACA;;;AAGA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;;AAErB,sCAAsC;;AAEtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA,uBAAuB;AACvB,qBAAqB;AACrB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,6BAA6B,uBAAuB;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B,2BAA2B,aAAa;AACxC,oBAAoB,qBAAqB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;;AAEA,aAAa;;AAEb;AACA;AACA,qBAAqB;AACrB,yBAAyB;AACzB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACj1Da;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACzDa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,WAAW;AACX,WAAW;AACX,UAAU;AACV,UAAU;AACV;AACA,WAAW;AACX;AACA,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ;AACA,eAAe;AACf,WAAW;AACX,WAAW;AACX,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,WAAW;AACX,SAAS;AACT;AACA,UAAU;AACV,WAAW;AACX,WAAW;AACX;;;AAGA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,gCAAgC;AAChC;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB,qCAAqC;AACrC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,uCAAuC;AACvC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,kBAAkB;AAClB;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxVa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,gEAAiB;AAC7C,oBAAoB,mBAAO,CAAC,0DAAW;AACvC,oBAAoB,mBAAO,CAAC,sDAAS;AACrC,oBAAoB,mBAAO,CAAC,0DAAW;AACvC,oBAAoB,mBAAO,CAAC,4DAAY;;AAExC;AACA;AACA;;AAEA;AACA;;;AAGA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;;AAGA,gBAAgB;AAChB,iBAAiB;AACjB,gBAAgB;AAChB,cAAc;AACd,iBAAiB;AACjB,iBAAiB;AACjB,gBAAgB;AAChB,mBAAmB;AACnB,gBAAgB;AAChB,mBAAmB;AACnB,iBAAiB;AACjB,qBAAqB;AACrB,uBAAuB;AACvB,uBAAuB;AACvB,sBAAsB;AACtB,qBAAqB;AACrB,sBAAsB;AACtB,wBAAwB;AACxB,yBAAyB;AACzB,yBAAyB;AACzB,wBAAwB;AACxB,2BAA2B;AAC3B,yBAAyB;AACzB,4BAA4B;AAC5B,0BAA0B;AAC1B,wBAAwB;AACxB,kBAAkB;AAClB,mBAAmB;AACnB,iBAAiB;AACjB,gBAAgB;AAChB,gBAAgB;AAChB,iBAAiB;;AAEjB;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,gBAAgB;AAChB,oBAAoB;AACpB,gBAAgB;AAChB,wBAAwB;AACxB,iBAAiB;AACjB,gBAAgB;AAChB,iBAAiB;AACjB,iBAAiB;AACjB;AACA,mBAAmB;;AAEnB;AACA,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,qBAAqB;;AAErB;AACA,gBAAgB;AAChB,gBAAgB;;AAEhB;AACA,kBAAkB;AAClB,kBAAkB;;AAElB;AACA,iBAAiB;;AAEjB;AACA,sBAAsB;AACtB,uBAAuB;AACvB,mBAAmB;AACnB,oBAAoB;;AAEpB;AACA,iBAAiB;AACjB,gBAAgB;AAChB,iBAAiB;AACjB,gBAAgB;AAChB,mBAAmB;;AAEnB,mCAAmC;AACnC,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qBAAqB;AACrB,sBAAsB;AACtB,gBAAgB;AAChB,gBAAgB;AAChB,eAAe;AACf;;AAEA;AACA;;AAEA,6BAA6B,uBAAuB;AACpD;AACA;AACA,gBAAgB;AAChB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6BAA6B,uBAAuB;AACpD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B,uBAAuB;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,uBAAuB;AACrC,sBAAsB;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;;AAE9C,uEAAuE,UAAU;;AAEjF;AACA;AACA,sBAAsB,uBAAuB;;AAE7C,uEAAuE,UAAU;;AAEjF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB,WAAW;AACX,UAAU;AACV,iBAAiB;AACjB,WAAW;AACX,WAAW;AACX,gBAAgB;AAChB,WAAW;AACX,WAAW;AACX;AACA,eAAe;AACf,mCAAmC;AACnC,aAAa;AACb,mCAAmC;AACnC,UAAU;AACV,UAAU;AACV,+BAA+B;AAC/B;;AAEA,QAAQ;;AAER;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,qBAAqB,EAAE;;;AAGnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,4BAA4B,aAAa;AACzC,2BAA2B,iBAAiB;AAC5C,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oEAAoE;AACpE;AACA;AACA;;AAEA,sCAAsC,OAAO;AAC7C;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,OAAO;;AAExC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,kEAAkE;AAClE;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,OAAO;AACzD;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,oEAAoE;AACpE;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,OAAO;AACzD;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA,aAAa;AACb,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT,iCAAiC,kBAAkB;AACnD;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,uBAAuB;AACpD;AACA,+BAA+B,uBAAuB;;AAEtD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6DAA6D,uBAAuB;AACpF;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnhDa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,gEAAiB;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB,cAAc;AACd,cAAc;AACd,uBAAuB;AACvB,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,WAAW;AACX,WAAW;AACX,UAAU;AACV,WAAW;AACX,WAAW;AACX,kBAAkB;AAClB;AACA,iBAAiB;AACjB,UAAU;AACV,2CAA2C,eAAe;AAC1D,0CAA0C,eAAe;AACzD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,eAAe,aAAa;AAC5B;AACA;;AAEA;AACA;AACA,qBAAqB,UAAU;AAC/B,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA,kBAAkB;AAClB,sCAAsC,2BAA2B;AACjE,uCAAuC;AACvC,wCAAwC;AACxC;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA,eAAe,WAAW;AAC1B,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;;AAEA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,GAAG,OAAO;AACV;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX,UAAU;AACV,YAAY;AACZ,qBAAqB;AACrB,cAAc;AACd,WAAW;AACX,WAAW;AACX,mBAAmB;AACnB,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtVa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ba;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,YAAY,mBAAO,CAAC,gEAAiB;;AAErC;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B;;AAEA;;;AAGA,oBAAoB,sBAAsB,qBAAqB,cAAc,EAAE;;AAE/E;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA,kCAAkC;AAClC,iCAAiC;AACjC,iCAAiC;AACjC,4BAA4B;AAC5B,iCAAiC;;AAEjC;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA,2BAA2B;AAC3B,oBAAoB;AACpB,6BAA6B;AAC7B;;;;AAIA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,WAAW;AACX,WAAW;AACX,YAAY;AACZ,QAAQ;AACR,mBAAmB;;AAEnB,gBAAgB,kBAAkB;AAClC;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;;AAE/C,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,UAAU,EAAE;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;;AAE/B;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C,uBAAuB;AACvB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB,qBAAqB;AACrB;AACA,0CAA0C;AAC1C,eAAe;AACf,WAAW;AACX,QAAQ;;AAER;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;AACA,oBAAoB,UAAU;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR,WAAW;AACX,aAAa;AACb,WAAW;AACX,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA,aAAa;AACb,QAAQ,gBAAgB;AACxB;AACA,eAAe,oCAAoC;AACnD;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,kBAAkB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA,aAAa,aAAa,QAAQ,iCAAiC;AACnE,aAAa,aAAa,QAAQ,iCAAiC;AACnE,aAAa,cAAc,OAAO,+BAA+B;;AAEjE;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,eAAe;AACf,kBAAkB;AAClB;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,YAAY;AACZ;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA,WAAW;AACX,SAAS;AACT,aAAa;AACb,WAAW;AACX,YAAY;;AAEZ;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA,OAAO;AACP;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,kCAAkC;AAClC;AACA,eAAe;AACf;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA,oCAAoC;AACpC;AACA,OAAO;;AAEP;AACA;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,oBAAoB;AACpB,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,QAAQ,OAAO,wBAAwB;;AAE9E;AACA;AACA;AACA,eAAe;AACf;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;;AAE9B,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB;AACA,QAAQ;AACR,mBAAmB;AACnB,aAAa;;AAEb,wCAAwC;;AAExC,gBAAgB;AAChB,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA,KAAK;AACL;;AAEA,KAAK;;AAEL,+BAA+B,kCAAkC;AACjE;;AAEA,KAAK;AACL;;AAEA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB;AACA,QAAQ;AACR,mBAAmB;AACnB,aAAa;;AAEb,wCAAwC;;AAExC,gBAAgB;AAChB,oBAAoB;AACpB,oBAAoB;;AAEpB,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA,KAAK;AACL,UAAU,iCAAiC,EAAE;;AAE7C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,gCAAgC;AAChC,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;;AAEA,wCAAwC;AACxC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI,MAAM,GAAG,MAAM,GAAG;AAChD;AACA;AACA;AACA,SAAS,IAAI,KAAK,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,IAAI;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iBAAiB;AACjB,WAAW;AACX;AACA,wDAAwD;AACxD,uCAAuC;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iBAAiB;AACjB,WAAW;AACX;AACA,4BAA4B;AAC5B,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,wBAAwB;;AAE1D,GAAG;AACH;AACA,4CAA4C;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,kBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrsCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9CA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAA0C;AAClD,QAAQ,iCAAgB,CAAC,OAAS,CAAC,mCAAE,oBAAoB,wDAAwD,EAAE;AAAA,oGAAC;AACpH;AACA,SAAS,EAKJ;AACL;AACA;AACA;AACA,8DAA8D,cAAc;AAC5E;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAqD;AACtF;AACA,CAAC;AACD;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,8EAA8E;;AAEvG;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;;AAEA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gEAAgE,cAAc;AAC9E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;;AAEA;AACA,uCAA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","file":"Hyperloop.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/main/Hyperloop.js\");\n","import { Assets } from \"./assets/Assets\";\nimport { clamp } from \"./util/math\";\nimport { ControllerManager } from \"./input/ControllerManager\";\nimport { createCanvas, getRenderingContext } from \"./util/graphics\";\nimport { GamepadInput } from \"./input/GamepadInput\";\nimport { Keyboard } from \"./input/Keyboard\";\nimport { Scenes } from \"./scene/Scenes\";\nimport { GAME_HEIGHT, GAME_WIDTH } from \"../main/constants\";\n\n/**\n * Max time delta (in s). If game freezes for a few seconds for whatever reason, we don't want\n * updates to jump too much.\n */\nconst MAX_DT = 0.1;\n\nexport abstract class Game {\n    public readonly controllerManager = ControllerManager.getInstance();\n    public readonly keyboard = new Keyboard();\n    public readonly gamepad = new GamepadInput();\n    public readonly scenes = new Scenes(this);\n    public readonly assets = new Assets();\n\n    public backgroundColor: string = \"black\";\n\n    public canvas: HTMLCanvasElement;\n    private readonly ctx: CanvasRenderingContext2D;\n    private readonly gameLoopCallback = this.gameLoop.bind(this);\n    private gameLoopId: number | null = null;\n    private lastUpdateTime: number = performance.now();\n    protected currentTime: number = 0;\n\n    public constructor(public readonly width: number = GAME_WIDTH, public readonly height: number = GAME_HEIGHT) {\n        const canvas = this.canvas = createCanvas(width, height);\n        // Desynchronized sounds like a good idea but unfortunately it prevents pixelated graphics\n        // on some systems (Chrome+Windows+NVidia for example which forces bilinear filtering). So\n        // it is deactivated here.\n        this.ctx = getRenderingContext(canvas, \"2d\", { alpha: false, desynchronized: false });\n        const style = canvas.style;\n        style.position = \"absolute\";\n        style.margin = \"auto\";\n        style.left = style.top = style.right = style.bottom = \"0\";\n        style.imageRendering = \"pixelated\";\n        style.imageRendering = \"crisp-edges\";\n        document.body.appendChild(this.canvas);\n        this.updateCanvasSize();\n        window.addEventListener(\"resize\", () => this.updateCanvasSize());\n        canvas.addEventListener(\"contextmenu\", event => {\n            event.preventDefault();\n        });\n\n        // Use Alt+Enter to toggle fullscreen mode.\n        window.addEventListener(\"keydown\", async (event) => {\n            if (event.altKey && event.key === \"Enter\") {\n                const lockingEnabled = \"keyboard\" in navigator && \"lock\" in navigator.keyboard && typeof navigator.keyboard.lock === \"function\";\n                // If the browser is in full screen mode AND fullscreen has been triggered by our own keyboard shortcut...\n                if (window.matchMedia(\"(display-mode: fullscreen)\").matches && document.fullscreenElement != null) {\n                    if (lockingEnabled) {\n                        navigator.keyboard.unlock();\n                    }\n                    await document.exitFullscreen();\n                } else {\n                    if (lockingEnabled) {\n                        await navigator.keyboard.lock([\"Escape\"]);\n                    }\n                    await document.body.requestFullscreen();\n                }\n            }\n        });\n\n    }\n\n    public get input(): ControllerManager {\n        return this.controllerManager;\n    }\n\n    private updateCanvasSize(): void {\n        const { width, height } = this;\n\n        const scale = Math.max(\n            1,\n            Math.floor(Math.min(window.innerWidth / width, window.innerHeight / height))\n        );\n\n        const style = this.canvas.style;\n        style.width = width * scale + \"px\";\n        style.height = height * scale + \"px\";\n    }\n\n    private gameLoop(): void {\n        const currentUpdateTime = performance.now();\n        const dt = clamp((currentUpdateTime - this.lastUpdateTime) / 1000, 0, MAX_DT);\n        this.currentTime = currentUpdateTime / 1000;\n        // TODO if we are fancy, we may differentiate between elapsed system time and actual game time (e.g. to allow\n        // pausing the game and stuff, or slow-mo effects)\n        this.update(dt, this.currentTime);\n        this.lastUpdateTime = currentUpdateTime;\n\n        const { ctx, width, height } = this;\n        ctx.save();\n        ctx.imageSmoothingEnabled = false;\n        ctx.fillStyle = this.backgroundColor;\n        ctx.fillRect(0, 0, width, height);\n        this.draw(ctx, width, height);\n        ctx.restore();\n\n        this.nextFrame();\n    }\n\n    private nextFrame(): void {\n        this.gameLoopId = requestAnimationFrame(this.gameLoopCallback);\n    }\n\n    protected update(dt: number, time: number): void {\n        this.gamepad.update();\n        this.scenes.update(dt, time);\n    }\n\n    protected draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        this.scenes.draw(ctx, width, height);\n    }\n\n    public start(): void {\n        if (this.gameLoopId == null) {\n            this.lastUpdateTime = performance.now();\n            this.nextFrame();\n        }\n    }\n\n    public stop(): void {\n        if (this.gameLoopId != null) {\n            cancelAnimationFrame(this.gameLoopId);\n            this.gameLoopId = null;\n        }\n    }\n\n    public getTime(): number {\n        return this.currentTime;\n    }\n}\n","import type {\n    AsepriteDirection, AsepriteFrameJSON, AsepriteFrameTagJSON, AsepriteJSON, AsepriteLayerJSON\n} from \"*.aseprite.json\";\nimport { Rect } from \"../geom/Rect\";\nimport { loadImage } from \"../util/graphics\";\nimport { now } from \"../util/time\";\n\n/**\n * Sprite implementation which uses the Aseprite JSON format. Use the static asynchronous [[load]] method to load the\n * sprite and then use [[draw]] or [[drawTag]] to draw the sprite animation.\n */\nexport class Aseprite {\n    private readonly frames: AsepriteFrameJSON[];\n    private readonly frameSourceBounds: Rect[];\n    private readonly frameTags: Record<string, AsepriteFrameTagJSON> = {};\n    private readonly frameTagDurations: Record<string, number> = {};\n    private readonly duration: number;\n    private readonly fallbackTag = \"idle\";\n\n    private direction: AsepriteDirection = \"forward\";\n\n    private constructor(private readonly json: AsepriteJSON, private readonly image: HTMLImageElement) {\n        this.frames = Object.values(json.frames);\n        this.frameSourceBounds = this.frames.map(frame => new Rect(\n            frame.spriteSourceSize.x, frame.spriteSourceSize.y, frame.spriteSourceSize.w, frame.spriteSourceSize.h));\n        this.duration = this.frames.reduce((duration, frame) => duration + frame.duration, 0);\n\n        for (const frameTag of json.meta.frameTags ?? []) {\n            let duration = 0;\n\n            for (let i = frameTag.from; i <= frameTag.to; i++) {\n                duration += this.frames[i].duration;\n            }\n\n            this.frameTags[frameTag.name] = frameTag;\n            this.frameTagDurations[frameTag.name] = duration;\n        }\n    }\n\n    /**\n     * Loads the sprite from the given source.\n     *\n     * @param source - The URL pointing to the JSON file of the sprite.\n     * @return The loaded sprite.\n     */\n    public static async load(source: string): Promise<Aseprite> {\n        const json = await (await fetch(source)).json() as AsepriteJSON;\n        const baseURL = new URL(source, location.href);\n        const image = await loadImage(new URL(json.meta.image, baseURL));\n\n        return new Aseprite(json, image);\n    }\n\n    /**\n     * Returns the sprite width in pixels.\n     *\n     * @return The sprite width in pixels.\n     */\n    public get width(): number {\n        return this.frames[0].sourceSize.w;\n    }\n\n    /**\n     * Returns the sprite height in pixels.\n     *\n     * @return The sprite height in pixels.\n     */\n    public get height(): number {\n        return this.frames[0].sourceSize.h;\n    }\n\n    public setDirection(direction: AsepriteDirection) {\n        this.direction = direction;\n    }\n\n    private calculateFrameIndex(\n        time: number = now(), duration = this.duration, from = 0, to = this.frames.length - 1,\n        direction = this.direction\n    ): number {\n        let delta = direction === \"reverse\" ? -1 : 1;\n\n        if (direction === \"pingpong\") {\n            duration = duration * 2 - this.frames[from].duration - this.frames[to].duration;\n        }\n\n        let frameTime = time % duration;\n        let frameIndex = direction === \"reverse\" ? to : from;\n\n        while (\n            (\n                (delta > 0 && frameIndex < to)\n                || (delta < 0 && frameIndex > from)\n            ) && frameTime >= this.frames[frameIndex].duration\n        ) {\n            frameTime -= this.frames[frameIndex].duration;\n            frameIndex += delta;\n\n            if (frameIndex === to) {\n                delta = -delta;\n            }\n        }\n\n        return frameIndex;\n    }\n\n    /**\n     * Returns the frame index to be drawn at the given time.\n     *\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     * @return The frame index to draw.\n     */\n    public getFrameIndex(time: number = now()): number {\n        return this.calculateFrameIndex(time);\n    }\n\n    /**\n     * Draws a single sprite animation frame.\n     *\n     * @param ctx   - The canvas context to draw to.\n     * @param index - The frame index to draw.\n     * @param x     - The X position in pixels to draw to the sprite at.\n     * @param y     - The Y position in pixels to draw to the sprite at.\n     */\n    public drawFrame(ctx: CanvasRenderingContext2D, index: number, x: number, y: number): void {\n        const frame = this.frames[index];\n\n        if (frame == null) {\n            throw new Error(\"Frame index not found: \" + index);\n        }\n\n        ctx.drawImage(\n            this.image,\n            frame.frame.x, frame.frame.y,\n            frame.frame.w, frame.frame.h,\n            Math.round(x) + frame.spriteSourceSize.x, Math.round(y) + frame.spriteSourceSize.y,\n            frame.spriteSourceSize.w, frame.spriteSourceSize.h\n        );\n    }\n\n    /**\n     * Returns the frame index of a tagged sprite animation at the given time.\n     *\n     * @param tag  - The animation tag to draw.\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     * @return The frame index to draw.\n     */\n    public getTaggedFrameIndex(tag: string, time: number = now()): number {\n        const frameTag = this.frameTags[tag] || this.frameTags[this.fallbackTag];\n        if (frameTag == null) {\n            throw new Error(`Frame tag not found and fallback is not available as well. Tag: '${tag}' | FallbackTag: '${this.fallbackTag}'`);\n        }\n        return this.calculateFrameIndex(\n            time, this.frameTagDurations[tag], frameTag.from, frameTag.to, frameTag.direction\n        );\n    }\n\n    /**\n     * Return the full animation duration for a specific animation tag.\n     *\n     * @param tag - The animation tag to get the duration from.\n     * @return The animation duration.\n     */\n    public getAnimationDurationByTag(tag: string): number {\n        const duration = this.frameTagDurations[tag] || this.frameTagDurations[this.fallbackTag];\n        if (duration == null) {\n            throw new Error(`Frame tag not found and fallback is not available as well. Tag: '${tag}' | FallbackTag: '${this.fallbackTag}'`);\n        }\n\n        return duration;\n    }\n\n    /**\n     * Checks if sprite has the given tag.\n     *\n     * @param tag - The tag to look for.\n     * @return True if sprite has the given tag, false if not.\n     */\n    public hasTag(tag: string): boolean {\n        return tag in this.frameTags;\n    }\n\n    /**\n     * Draws a tagged sprite animation.\n     *\n     * @param ctx  - The canvas context to draw to.\n     * @param tag  - The animation tag to draw.\n     * @param x    - The X position in pixels to draw to the sprite at.\n     * @param y    - The Y position in pixels to draw to the sprite at.\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     */\n    public drawTag(ctx: CanvasRenderingContext2D, tag: string, x: number, y: number, time: number = now()): void {\n        this.drawFrame(ctx, this.getTaggedFrameIndex(tag, time), x, y);\n    }\n\n    /**\n     * Returns the source bounds of the tagged sprite animation at the given time index.\n     *\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     * @return The source bounds of the frame played at the given time.\n     */\n    public getTaggedSourceBounds(tag: string,time: number = now()): Rect {\n        const frameIndex = this.getTaggedFrameIndex(tag, time);\n        return this.frameSourceBounds[frameIndex];\n    }\n\n    /**\n     * Draws the untagged sprite animation (Simply all defined frames).\n     *\n     * @param ctx  - The canvas context to draw to.\n     * @param x    - The X position in pixels to draw to the sprite at.\n     * @param y    - The Y position in pixels to draw to the sprite at.\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     */\n    public draw(ctx: CanvasRenderingContext2D, x: number, y: number, time: number = now()): void {\n        const frameIndex = this.calculateFrameIndex(time);\n        this.drawFrame(ctx, frameIndex, x, y);\n    }\n\n    /**\n     * Returns the source bounds of the untagged sprite animation (All defined frames) at the given time index.\n     *\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     * @return The source bounds of the frame played at the given time.\n     */\n    public getSourceBounds(time: number = now()): Rect {\n        const frameIndex = this.calculateFrameIndex(time);\n        return this.frameSourceBounds[frameIndex];\n    }\n\n    /**\n     * Returns the layer with the given name.\n     *\n     * @param name - The layer name.\n     * @return The found layer. Null if none.\n     */\n    public getLayer(name: string): AsepriteLayerJSON | null {\n        return this.json.meta.layers?.find(layer => layer.name === name) ?? null;\n    }\n}\n","import { AppInfoJSON } from \"appinfo.json\";\nimport { Aseprite } from \"./Aseprite\";\nimport { BitmapFont } from \"./BitmapFont\";\nimport { loadImage } from \"../util/graphics\";\nimport { Sound } from \"./Sound\";\nimport { TiledMap } from \"../tiled/TiledMap\";\nimport { DialogJSON } from \"*.dialog.json\";\n\nconst assets = new Map<string, unknown>();\n\nexport interface AssetOptions {\n    map?: (asset: any) => unknown;\n}\n\nclass AssetRequest<\n        S extends string | string[] = string | string[],\n        A extends (S extends string ? unknown : unknown[]) = (S extends string ? unknown : unknown[])> {\n    constructor(\n        private readonly target: any,\n        private readonly propertyKey: string | symbol,\n        public readonly src: S,\n        private readonly options: AssetOptions\n    ) {}\n\n    public resolve(asset: A): void {\n        this.target[this.propertyKey] = this.options.map ? this.options.map(asset) : asset;\n    }\n}\n\nconst assetRequests: AssetRequest[] = [];\n\nexport function asset(src: string | string[], options: AssetOptions = {}): PropertyDecorator {\n    return (target: Object, propertyKey: string | symbol): void => {\n        assetRequests.push(new AssetRequest(target, propertyKey, src, options));\n    };\n}\n\nexport class Assets {\n    private async loadAsset(src: string): Promise<unknown> {\n        let asset = assets.get(src);\n\n        if (asset == null) {\n            if (src.endsWith(\".aseprite.json\")) {\n                asset = await Aseprite.load(\"assets/\" + src);\n            } else if (src.endsWith(\".tiledmap.json\")) {\n                asset = await TiledMap.load(\"assets/\" + src);\n            } else if (src.endsWith(\".font.json\")) {\n                asset = await BitmapFont.load(\"assets/\" + src);\n            } else if (src.endsWith(\".png\")) {\n                asset = await loadImage(src);\n            } else if (src.endsWith(\".mp3\")) {\n                asset = await Sound.load(\"assets/\" + src);\n            } else if (src.endsWith(\".ogg\")) {\n                asset = await Sound.load(\"assets/\" + src);\n            } else if (src === \"appinfo.json\") {\n                asset = await (await fetch(\"appinfo.json\")).json() as AppInfoJSON;\n            } else if (src.endsWith(\".dialog.json\")) {\n                asset = await (await fetch(\"assets/\" + src)).json() as DialogJSON;\n            } else {\n                throw new Error(\"Unknown asset format: \" + src);\n            }\n\n            assets.set(src, asset);\n        }\n\n        return asset;\n    }\n\n    public async load(onProgress?: (total: number, loaded: number) => void): Promise<void> {\n        const total = assetRequests.length;\n        let loaded = 0;\n\n        if (onProgress) {\n            onProgress(total, loaded);\n        }\n\n        let request;\n\n        while ((request = assetRequests.pop()) != null) {\n            if (typeof request.src === \"string\") {\n                request.resolve(await this.loadAsset(request.src));\n            } else {\n                request.resolve(await Promise.all(request.src.map(src => this.loadAsset(src))));\n            }\n\n            loaded++;\n\n            if (onProgress) {\n                onProgress(total, loaded);\n            }\n        }\n    }\n}\n","import { FontJSON } from \"*.font.json\";\nimport { loadImage } from \"../util/graphics.js\";\n\nconst CHAR_SPACING = 1;\n\nexport class BitmapFont {\n    private sourceImage: HTMLImageElement;\n    private canvas: HTMLCanvasElement;\n    private colorMap: Record<string, number>;\n    private charMap: string;\n    private charWidths: number[];\n    private compactablePrecursors: string[][];\n    private charStartPoints: number[];\n    private charCount: number;\n    private charReverseMap: Record<string, number>;\n    public charHeight!: number;\n\n    private constructor(\n        sourceImage: HTMLImageElement, colors: Record<string, string>, charMap: string,\n        charHeight: number, charWidths: number[], compactablePrecursors: string[][], charMargin = 1\n    ) {\n        this.sourceImage = sourceImage;\n        this.canvas = document.createElement(\"canvas\");\n        this.charMap = charMap;\n        this.charHeight = charHeight;\n        this.colorMap = this.prepareColors(colors);\n        this.charWidths = charWidths;\n        this.compactablePrecursors = compactablePrecursors;\n        this.charStartPoints = [];\n        this.charCount = charMap.length;\n        this.charReverseMap = {};\n\n        for (let i = 0; i < this.charCount; i++) {\n            this.charStartPoints[i] = (i === 0) ? 0 : this.charStartPoints[i - 1] + this.charWidths[i - 1] + charMargin;\n            const char = this.charMap[i];\n            this.charReverseMap[char] = i;\n        }\n    }\n\n    /**\n     * Loads the sprite from the given source.\n     *\n     * @param source - The URL pointing to the JSON file of the sprite.\n     * @return The loaded sprite.\n     */\n    public static async load(source: string): Promise<BitmapFont> {\n        const json = await (await fetch(source)).json() as FontJSON;\n        const baseURL = new URL(source, location.href);\n        const image = await loadImage(new URL(json.image, baseURL));\n        const characters = json.characterMapping.map(charDef => charDef.char).join(\"\");\n        const widths = json.characterMapping.map(charDef => charDef.width);\n        const compactablePrecursors = json.characterMapping.map(charDef => charDef.compactablePrecursors || []);\n\n        return new BitmapFont(image, json.colors, characters, json.characterHeight, widths, compactablePrecursors, json.margin);\n    }\n\n    private prepareColors(colorMap: { [x: string]: string; }): { [x: string]: number } {\n        const result: { [x: string]: number} = {};\n        const colors = Object.keys(colorMap);\n        const count = colors.length;\n        const w = this.canvas.width = this.sourceImage.width;\n        const h = this.charHeight;\n        this.canvas.height = h * count;\n        const ctx = this.canvas.getContext(\"2d\")!;\n\n        // Fill with font\n        for (let i = 0; i < count; i++) {\n            result[colors[i]] = i;\n            ctx.drawImage(this.sourceImage, 0, h * i);\n        }\n\n        // Colorize\n        ctx.globalCompositeOperation = \"source-in\";\n\n        for (let i = 0; i < count; i++) {\n            ctx.fillStyle = colorMap[colors[i]];\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(0, h * i, w, h);\n            ctx.clip();\n            ctx.fillRect(0, 0, w, h * count);\n            ctx.restore();\n        }\n\n        ctx.globalCompositeOperation = \"source-over\";\n\n        return result;\n    }\n\n    private getCharIndex(char: string): number {\n        let charIndex = this.charReverseMap[char];\n\n        if (charIndex == null) {\n            // To signalize missing char, use last char, which is a not-def glyph\n            charIndex = this.charCount - 1;\n        }\n\n        return charIndex;\n    }\n\n    private drawCharacter(ctx: CanvasRenderingContext2D, char: number, color: string): void {\n        const colorIndex = this.colorMap[color];\n        const charIndex = (typeof char === \"number\") ? char : this.getCharIndex(char);\n        const charX = this.charStartPoints[charIndex], charY = colorIndex * this.charHeight;\n\n        ctx.drawImage(\n            this.canvas, charX, charY, this.charWidths[charIndex], this.charHeight,\n            0, 0, this.charWidths[charIndex], this.charHeight\n        );\n    }\n\n    public drawText(\n        ctx: CanvasRenderingContext2D, text: string, x: number, y: number, color: string, align = 0,\n        alpha = 1\n    ): void {\n        ctx.save();\n        ctx.translate(x, y);\n\n        // Ugly hack to correct text position to exact pixel boundary because Chrome renders broken character images\n        // when exactly between two pixels (Firefox doesn't have this problem).\n        if (ctx.getTransform) {\n            const transform = ctx.getTransform();\n            ctx.translate(\n                Math.round(transform.e) - transform.e,\n                Math.round(transform.f) - transform.f\n            );\n        }\n\n        text = \"\" + text;\n        ctx.globalAlpha *= alpha;\n\n        const { width } = this.measureText(text);\n        ctx.translate(-align * width, 0);\n\n        let precursorChar = null;\n\n        for (const currentChar of text) {\n            const index = this.getCharIndex(currentChar);\n            const spaceReduction = precursorChar && this.compactablePrecursors[index].includes(precursorChar) ? 1 : 0;\n            ctx.translate(-spaceReduction, 0);\n            this.drawCharacter(ctx, index, color);\n            ctx.translate(this.charWidths[index] + CHAR_SPACING, 0);\n            precursorChar = currentChar;\n        }\n\n        ctx.restore();\n    }\n\n    public measureText(text: string): { width: number, height: number } {\n        let width = 0;\n        let precursorChar = null;\n        for (const currentChar of text) {\n            const index = this.getCharIndex(currentChar);\n            const spaceReduction = precursorChar && this.compactablePrecursors[index].includes(precursorChar) ? 1 : 0;\n            width += this.charWidths[index] - spaceReduction + CHAR_SPACING;\n            precursorChar = currentChar;\n        }\n\n        if (text.length > 0) {\n            width -= CHAR_SPACING;\n        }\n\n        return { width, height: this.charHeight };\n    }\n\n    public drawTextWithOutline(\n        ctx: CanvasRenderingContext2D, text: string, xPos: number, yPos: number, textColor: string,\n        outlineColor: string, align = 0\n    ): void {\n        for (let yOffset = yPos - 1; yOffset <= yPos + 1; yOffset++) {\n            for (let xOffset = xPos - 1; xOffset <= xPos + 1; xOffset++) {\n                if (xOffset !== xPos || yOffset !== yPos) {\n                    this.drawText(ctx, text, xOffset, yOffset, outlineColor, align);\n                }\n            }\n        }\n\n        this.drawText(ctx, text, xPos, yPos, textColor, align);\n    }\n}\n","import { clamp } from \"../util/math\";\nimport { ControllerManager } from \"../input/ControllerManager\";\n\n// Get cross-browser AudioContext (Safari still uses webkitAudioContext…)\nconst AudioContext = window.AudioContext ?? (window as any).webkitAudioContext as AudioContext;\n\nlet audioContext: AudioContext | null = null;\nlet globalGainNode: GainNode | null = null;\n\nexport function getAudioContext(): AudioContext {\n    const controllerManager = ControllerManager.getInstance();\n\n    if (audioContext == null) {\n        audioContext = new AudioContext();\n\n        // When audio context is suspended then try to wake it up on next key or pointer press\n        if (audioContext.state === \"suspended\") {\n            const resume = () => {\n                audioContext?.resume();\n            };\n\n            controllerManager.onButtonDown.connect(resume);\n            document.addEventListener(\"pointerdown\", resume);\n\n            audioContext.addEventListener(\"statechange\", () => {\n                if (audioContext?.state === \"running\") {\n                    controllerManager.onButtonDown.disconnect(resume);\n                    document.removeEventListener(\"pointerdown\", resume);\n                }\n            });\n        }\n    }\n\n    return audioContext;\n}\n\nexport function getGlobalGainNode(): GainNode {\n    if (globalGainNode == null) {\n        const audioContext = getAudioContext();\n        globalGainNode = audioContext.createGain();\n        globalGainNode.connect(audioContext.destination);\n    }\n\n    return globalGainNode;\n}\n\nexport class Sound {\n    private readonly gainNode: GainNode;\n    private source: AudioBufferSourceNode | null = null;\n    private loop: boolean = false;\n\n    private constructor(private readonly buffer: AudioBuffer) {\n        this.gainNode = getAudioContext().createGain();\n        this.gainNode.connect(getGlobalGainNode());\n    }\n\n    public static async load(url: string): Promise<Sound> {\n        const arrayBuffer = await (await fetch(url)).arrayBuffer();\n\n        return new Promise((resolve, reject) => {\n            getAudioContext().decodeAudioData(arrayBuffer,\n                buffer => resolve(new Sound(buffer)),\n                error => reject(error)\n            );\n        });\n    }\n\n    public static shallowClone(sound: Sound): Sound {\n        const cloned = Object.create(sound.constructor.prototype);\n        Object.keys(sound).forEach(key => {\n            cloned[key] = (<any>sound)[key];\n        });\n        return cloned;\n    }\n\n    public shallowClone(): Sound {\n        return Sound.shallowClone(this);\n    }\n\n    public isPlaying(): boolean {\n        return this.source != null;\n    }\n\n    public play(fadeIn = 0, delay = 0, duration?: number): void {\n        if (!this.isPlaying()) {\n            const source = getAudioContext().createBufferSource();\n            source.buffer = this.buffer;\n            source.loop = this.loop;\n            source.connect(this.gainNode);\n\n            source.addEventListener(\"ended\", () => {\n                if (this.source === source) {\n                    this.source = null;\n                }\n            });\n\n            this.source = source;\n            if (fadeIn > 0) {\n                this.gainNode.gain.setValueAtTime(0, this.source.context.currentTime);\n                this.gainNode.gain.linearRampToValueAtTime(1, this.source.context.currentTime + fadeIn);\n            }\n            source.start(this.source.context.currentTime, delay, duration);\n        }\n    }\n\n    public async stop(fadeOut = 0): Promise<void> {\n        if (this.source) {\n            if (fadeOut > 0) {\n                const stopTime = this.source.context.currentTime + fadeOut;\n                this.gainNode.gain.linearRampToValueAtTime(0, stopTime);\n                this.source.stop(stopTime);\n            } else {\n                try {\n                    this.source.stop();\n                } catch (e) {\n                    // Ignored. Happens on Safari sometimes. Can't stop a sound which may not be really playing?\n                }\n            }\n\n            this.source = null;\n        }\n    }\n\n    public setLoop(loop: boolean): void {\n        this.loop = loop;\n\n        if (this.source) {\n            this.source.loop = loop;\n        }\n    }\n\n    public setVolume(volume: number): void {\n        const gain = this.gainNode.gain;\n        gain.value = clamp(volume, gain.minValue, gain.maxValue);\n    }\n\n    public getVolume(): number {\n        return this.gainNode.gain.value;\n    }\n}\n","import { namedColors } from \"./colors\";\nimport { RGBAColor } from \"./RGBAColor\";\nimport { RGBColor } from \"./RGBColor\";\n\n/**\n * Base interface of a color.\n */\nexport interface Color {\n    /**\n     * Serializes the color into a string.\n     *\n     * @return The serialized color.\n     */\n    toJSON(): string;\n\n    /**\n     * Converts the color into a string.\n     *\n     * @return The color as a string.\n     */\n    toString(): string;\n\n    /**\n     * Converts the color to RGB.\n     *\n     * @return The RGB color.\n     */\n    toRGB(): RGBColor;\n\n    /**\n     * Converts the color to RGBA.\n     *\n     * @return The RGBA color.\n     */\n    toRGBA(): RGBAColor;\n\n    /**\n     * Darkens the color by the given factor and returns the new darker color.\n     *\n     * @param factor - The darkening factor (0.0 - 1.0)\n     * @return The darker color.\n     */\n    darken(factor: number): Color;\n}\n\nexport namespace Color {\n    /**\n     * Converts the given string into a color object. The string can be a named color or a color defined in HTML or\n     * CSS format.\n     *\n     * @param s - The color string to parse.\n     * @return The parsed color.\n     */\n    export function fromString(s: string): Color {\n        const color = namedColors[s.trim().toLowerCase()];\n        if (color != null) {\n            return color;\n        }\n\n        for (const implementation of [ RGBColor, RGBAColor ]) {\n            try {\n                return implementation.fromString(s);\n            } catch (e) {\n                // Incompatible implementation, continue searching\n            }\n        }\n        throw new Error(\"Unknown color format: \" + s);\n    }\n\n    /**\n     * Deserializes the given serialized color. This simply does the same same as [[fromString]].\n     *\n     * @param The serialized color.\n     * @return The deserialized color.\n     */\n    export function fromJSON(json: string): Color {\n        return Color.fromString(json);\n    }\n}\n","import { isLittleEndian } from \"../util/env\";\nimport { clamp } from \"../util/math\";\nimport { formatNumber } from \"../util/string\";\nimport { WritableArrayLike } from \"../util/types\";\nimport { Color } from \"./Color\";\nimport { RGBColor } from \"./RGBColor\";\n\n/** Regular expression to parse RGBA color in HTML format. */\nconst RGBAColorHTMLRegExp = /^\\s*#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\\s*$/i;\n\n/** Regular expression to parse RGBA color in CSS format. */\nconst RGBAColorCSSRegExp = /^\\s*rgba\\s*\\(\\s*([+-]?\\d*(?:\\.\\d+)?(?:e[+-]?\\d+)?%?)\\s*[\\s,]\\s*([+-]?\\d*(?:\\.\\d+)?(?:e[+-]?\\d+)?%?)\\s*[\\s,]\\s*([+-]?\\d*(?:\\.\\d+)?(?:e[+-]?\\d+)?%?)\\s*[\\s,]\\s*([+-]?\\d*(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\s*\\)\\s*$/i;\n\n/**\n * Immutable color with red, green, blue and alpha component.\n */\nexport class RGBAColor implements Color {\n    /** The red color component (0.0 - 1.0) */\n    private readonly red: number;\n\n    /** The green color component (0.0 - 1.0) */\n    private readonly green: number;\n\n    /** The blue color component (0.0 - 1.0) */\n    private readonly blue: number;\n\n    /** The alpha component (0.0 - 1.0) */\n    private readonly alpha: number;\n\n    /**\n     * Creates a new RGBA color with the given color components. Values are clamped into the valid range of 0.0 to 1.0.\n     *\n     * @param red   - The red color component (0.0 - 1.0).\n     * @param green - The green color component (0.0 - 1.0).\n     * @param blue  - The blue color component (0.0 - 1.0).\n     * @param alpha - Optional alpha component (0.0 - 1.0). Defaults to 1.\n     */\n    public constructor(red: number, green: number, blue: number, alpha = 1) {\n        this.red = clamp(red, 0, 1);\n        this.green = clamp(green, 0, 1);\n        this.blue = clamp(blue, 0, 1);\n        this.alpha = clamp(alpha, 0, 1);\n    }\n\n    /**\n     * Deserializes the given serialized RGBA color. This simply does the same same as [[fromString]].\n     *\n     * @param The serialized RGBA color.\n     * @return The deserialized RGBA color.\n     */\n    public static fromJSON(json: string): RGBAColor {\n        return this.fromString(json);\n    }\n\n    /**\n     * Parses the given string into an RGBA color object. The string can be defined in HTML or CSS format.\n     *\n     * @param string - The RGBA color string to parse.\n     * @return The parsed RGBA color.\n     */\n    public static fromString(s: string): RGBAColor {\n        let match = RGBAColorCSSRegExp.exec(s);\n        if (match != null) {\n            return new RGBAColor(\n                parseFloat(match[1]) / (match[1].endsWith(\"%\") ? 100 : 255),\n                parseFloat(match[2]) / (match[2].endsWith(\"%\") ? 100 : 255),\n                parseFloat(match[3]) / (match[3].endsWith(\"%\") ? 100 : 255),\n                parseFloat(match[4])\n            );\n        }\n        match = RGBAColorHTMLRegExp.exec(s);\n        if (match != null) {\n            return new RGBAColor(\n                parseInt(match[2], 16) / 255,\n                parseInt(match[3], 16) / 255,\n                parseInt(match[4], 16) / 255,\n                parseInt(match[1], 16) / 255\n            );\n        }\n        throw new Error(\"Invalid RGBA color format: \" + s);\n    }\n\n    /** @inheritDoc */\n    public toJSON(): string {\n        return this.toCSS();\n    }\n\n    /** @inheritDoc */\n    public toString(): string {\n        return this.toCSS();\n    }\n\n    /**\n     * Returns the color as a CSS string.\n     *\n     * @param maximumFractionDigits - Optional maximum number of fraction digits of values in output.\n     * @return The color as a CSS string.\n     */\n    public toCSS(maximumFractionDigits = 5): string {\n        const red = formatNumber(this.red * 100, { maximumFractionDigits });\n        const green = formatNumber(this.green * 100, { maximumFractionDigits });\n        const blue = formatNumber(this.blue * 100, { maximumFractionDigits });\n        const alpha = formatNumber(this.alpha, { maximumFractionDigits });\n        return `rgba(${red}%,${green}%,${blue}%,${alpha})`;\n    }\n\n    /** @inheritDoc */\n    public toRGB(): RGBColor {\n        return new RGBColor(this.red, this.green, this.blue);\n    }\n\n    /** @inheritDoc */\n    public toRGBA(): RGBAColor {\n        return this;\n    }\n\n    /**\n     * Creates color from given 32 bit integer.\n     *\n     * @param value        - The 32 bit integer to read the color from.\n     * @param littleEndian - True for little endian byte order. False for big-endian. Default is platform-specific to\n     *                       be compatible with UInt32Array behavior.\n     * @return The created color.\n     */\n    public static fromUint32(value: number, littleEndian = isLittleEndian()): RGBAColor {\n        if (littleEndian) {\n            return new RGBAColor(\n                (value & 255) / 255,\n                ((value >> 8) & 255) / 255,\n                ((value >> 16) & 255) / 255,\n                ((value >> 24) & 255) / 255\n            );\n        } else {\n            return new RGBAColor(\n                ((value >> 24) & 255) / 255,\n                ((value >> 16) & 255) / 255,\n                ((value >> 8) & 255) / 255,\n                (value & 255) / 255\n            );\n        }\n    }\n\n    /**\n     * Converts the color into a 32 bit integer.\n     *\n     * @param littleEndian - True for little endian byte order. False for big-endian. Default is platform-specific to\n     *                       be compatible with UInt32Array behavior.\n     * @return The color as 32 bit integer.\n     */\n    public toUint32(littleEndian = isLittleEndian()): number {\n        if (littleEndian) {\n            return ((this.red * 255) | ((this.green * 255) << 8) | ((this.blue * 255) << 16)\n                | ((this.alpha * 255) << 24)) >>> 0;\n        } else {\n            return ((this.alpha * 255) | ((this.blue * 255) << 8) | ((this.green * 255) << 16)\n                | ((this.red * 255) << 24)) >>> 0;\n        }\n    }\n\n    /**\n     * Creates color from given 8 bit color components array.\n     *\n     * @param data   - The color components in RGB order.\n     * @param offset - Optional offset within the data array to start reading the components from. Defaults to 0.\n     * @return The created color.\n     */\n    public static fromUint8(data: ArrayLike<number>, offset = 0): RGBAColor {\n        return new RGBAColor(data[offset] / 255, data[offset + 1] / 255, data[offset + 2] / 255,\n            data[offset + 3] / 255);\n    }\n\n    /**\n     * Writes the color into the given color component array starting at the given offset.\n     *\n     * @param data  - The array to write the color components to. If not specified then a new UInt8Array with four\n     *                components is created.\n     * @param offset - The offset to start writing the color components to.\n     * @return The data array.\n     */\n    public toUint8<T extends WritableArrayLike<number>>(data: T = (new Uint8Array(4) as unknown as T), offset = 0): T {\n        data[offset] = this.red * 255 | 0;\n        data[offset + 1] = this.green * 255 | 0;\n        data[offset + 2] = this.blue * 255 | 0;\n        data[offset + 3] = this.alpha * 255 | 0;\n        return data;\n    }\n\n    /**\n     * Returns the red component of the color.\n     *\n     * @return The red component (0.0 - 1.0).\n     */\n    public getRed(): number {\n        return this.red;\n    }\n\n    /**\n     * Returns the green component of the color.\n     *\n     * @return The green component (0.0 - 1.0).\n     */\n    public getGreen(): number {\n        return this.green;\n    }\n\n    /**\n     * Returns the blue component of the color.\n     *\n     * @return The blue component (0.0 - 1.0).\n     */\n    public getBlue(): number {\n        return this.blue;\n    }\n\n    /**\n     * Returns the alpha component of the color.\n     *\n     * @return The alpha component (0.0 - 1.0).\n     */\n    public getAlpha(): number {\n        return this.alpha;\n    }\n\n    /** @inheritDoc */\n    public darken(factor: number): RGBAColor {\n        return new RGBAColor(\n            this.red * (1 - factor),\n            this.green * (1 - factor),\n            this.blue * (1 - factor),\n            this.alpha\n        );\n    }\n}\n","import { isLittleEndian } from \"../util/env\";\n\nimport { clamp } from \"../util/math\";\nimport { formatNumber, toHex } from \"../util/string\";\nimport { WritableArrayLike } from \"../util/types\";\nimport { Color } from \"./Color\";\nimport { RGBAColor } from \"./RGBAColor\";\n\n/** Regular expression to parse RGB color in HTML format. */\nconst RGBColorHTMLRegExp = /^\\s*#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\\s*$/i;\n\n/** Regular expression to parse RGB color in CSS format. */\nconst RGBColorCSSRegExp = /^\\s*rgb\\s*\\(\\s*([+-]?\\d*(?:\\.\\d+)?(?:e[+-]?\\d+)?%?)\\s*[\\s,]\\s*([+-]?\\d*(?:\\.\\d+)?(?:e[+-]?\\d+)?%?)\\s*[\\s,]\\s*([+-]?\\d*(?:\\.\\d+)?(?:e[+-]?\\d+)?%?)\\s*\\)\\s*$/i;\n\n/**\n * Immutable color with red, green and blue component.\n */\nexport class RGBColor implements Color {\n    /** The red color component (0.0 - 1.0) */\n    private readonly red: number;\n\n    /** The green color component (0.0 - 1.0) */\n    private readonly green: number;\n\n    /** The blue color component (0.0 - 1.0) */\n    private readonly blue: number;\n\n    /**\n     * Creates a new RGB color with the given color components. Values are clamped into the valid range of 0.0 to 1.0.\n     *\n     * @param red   - The red color component (0.0 - 1.0).\n     * @param green - The green color component (0.0 - 1.0).\n     * @param blue  - The blue color component (0.0 - 1.0).\n     */\n    public constructor(red: number, green: number, blue: number) {\n        this.red = clamp(red, 0, 1);\n        this.green = clamp(green, 0, 1);\n        this.blue = clamp(blue, 0, 1);\n    }\n\n    /**\n     * Deserializes the given serialized RGB color. This simply does the same same as [[fromString]].\n     *\n     * @param The serialized RGB color.\n     * @return The deserialized RGB color.\n     */\n    public static fromJSON(json: string): RGBColor {\n        return this.fromString(json);\n    }\n\n    /**\n     * Parses the given string into an RGB color object. The string can be defined in HTML or CSS format.\n     *\n     * @param string - The RGB color string to parse.\n     * @return The parsed RGB color.\n     */\n    public static fromString(s: string): RGBColor {\n        let match = RGBColorCSSRegExp.exec(s);\n        if (match != null) {\n            return new RGBColor(\n                parseFloat(match[1]) / (match[1].endsWith(\"%\") ? 100 : 255),\n                parseFloat(match[2]) / (match[2].endsWith(\"%\") ? 100 : 255),\n                parseFloat(match[3]) / (match[3].endsWith(\"%\") ? 100 : 255)\n            );\n        }\n        match = RGBColorHTMLRegExp.exec(s);\n        if (match != null) {\n            return new RGBColor(\n                parseInt(match[1], 16) / 255,\n                parseInt(match[2], 16) / 255,\n                parseInt(match[3], 16) / 255\n            );\n        }\n        throw new Error(\"Invalid RGB color format: \" + s);\n    }\n\n    /** @inheritDoc */\n    public toJSON(): string {\n        return this.toCSS();\n    }\n\n    /** @inheritDoc */\n    public toString(): string {\n        return this.toCSS();\n    }\n\n    /**\n     * Returns the color as an HTML string.\n     *\n     * @return The color as an HTML string.\n     */\n    public toHTML(): string {\n        return `#${toHex(this.red * 255, 2)}${toHex(this.green * 255, 2)}${toHex(this.blue * 255, 2)}`;\n    }\n\n    /**\n     * Returns the color as a CSS string.\n     *\n     * @param maximumFractionDigits - Optional maximum number of fraction digits of percentage values in output.\n     * @return The color as a CSS string.\n     */\n    public toCSS(maximumFractionDigits = 3): string {\n        const red = formatNumber(this.red * 100, { maximumFractionDigits });\n        const green = formatNumber(this.green * 100, { maximumFractionDigits });\n        const blue = formatNumber(this.blue * 100, { maximumFractionDigits });\n        return `rgb(${red}%,${green}%,${blue}%)`;\n    }\n\n    /** @inheritDoc */\n    public toRGB(): RGBColor {\n        return this;\n    }\n\n    /** @inheritDoc */\n    public toRGBA(): RGBAColor {\n        return new RGBAColor(this.red, this.green, this.blue, 1.0);\n    }\n\n    /**\n     * Creates color from given 32 bit integer.\n     *\n     * @param value        - The 32 bit integer to read the color from.\n     * @param littleEndian - True for little endian byte order. False for big-endian. Default is platform-specific to\n     *                       be compatible with UInt32Array behavior.\n     * @return The created color.\n     */\n    public static fromUint32(value: number, littleEndian = isLittleEndian()): RGBColor {\n        if (littleEndian) {\n            return new RGBColor(\n                (value & 255) / 255,\n                ((value >> 8) & 255) / 255,\n                ((value >> 16) & 255) / 255\n            );\n        } else {\n            return new RGBColor(\n                ((value >> 24) & 255) / 255,\n                ((value >> 16) & 255) / 255,\n                ((value >> 8) & 255) / 255\n            );\n        }\n    }\n\n    /**\n     * Converts the color into a 32 bit integer.\n     *\n     * @param littleEndian - True for little endian byte order. False for big-endian. Default is platform-specific to\n     *                       be compatible with UInt32Array behavior.\n     * @return The color as 32 bit integer.\n     */\n    public toUint32(littleEndian = isLittleEndian()): number {\n        if (littleEndian) {\n            return ((this.red * 255) | ((this.green * 255) << 8) | ((this.blue * 255) << 16) | (255 << 24)) >>> 0;\n        } else {\n            return (255 | ((this.blue * 255) << 8) | ((this.green * 255) << 16) | ((this.red * 255) << 24)) >>> 0;\n        }\n    }\n\n    /**\n     * Creates color from given 8 bit color components array.\n     *\n     * @param data   - The color components in RGB order.\n     * @param offset - Optional offset within the data array to start reading the components from. Defaults to 0.\n     * @return The created color.\n     */\n    public static fromUint8(data: ArrayLike<number>, offset = 0): RGBColor {\n        return new RGBColor(data[offset] / 255, data[offset + 1] / 255, data[offset + 2] / 255);\n    }\n\n    /**\n     * Writes the color into the given color component array starting at the given offset.\n     *\n     * @param data  - The array to write the color components to. If not specified then a new UInt8Array with three\n     *                components is created.\n     * @param offset - The offset to start writing the color components to.\n     * @return The data array.\n     */\n    public toUint8<T extends WritableArrayLike<number>>(data: T = (new Uint8Array(3) as unknown as T), offset = 0): T {\n        data[offset] = this.red * 255 | 0;\n        data[offset + 1] = this.green * 255 | 0;\n        data[offset + 2] = this.blue * 255 | 0;\n        return data;\n    }\n\n    /**\n     * Returns the red component of the color.\n     *\n     * @return The red component (0.0 - 1.0).\n     */\n    public getRed(): number {\n        return this.red;\n    }\n\n    /**\n     * Returns the green component of the color.\n     *\n     * @return The green component (0.0 - 1.0).\n     */\n    public getGreen(): number {\n        return this.green;\n    }\n\n    /**\n     * Returns the blue component of the color.\n     *\n     * @return The blue component (0.0 - 1.0).\n     */\n    public getBlue(): number {\n        return this.blue;\n    }\n\n    /** @inheritDoc */\n    public darken(factor: number): RGBColor {\n        return new RGBColor(\n            this.red * (1 - factor),\n            this.green * (1 - factor),\n            this.blue * (1 - factor)\n        );\n    }\n}\n","import { Color } from \"./Color\";\nimport { RGBColor } from \"./RGBColor\";\n\n/**\n * Map with named colors.\n */\nexport const namedColors: Record<string, Color> = {\n    \"aliceblue\": RGBColor.fromUint32(0xfffff8f0, true),\n    \"antiquewhite\": RGBColor.fromUint32(0xffd7ebfa, true),\n    \"aqua\": RGBColor.fromUint32(0xffffff00, true),\n    \"aquamarine\": RGBColor.fromUint32(0xffd4ff7f, true),\n    \"azure\": RGBColor.fromUint32(0xfffffff0, true),\n    \"beige\": RGBColor.fromUint32(0xffdcf5f5, true),\n    \"bisque\": RGBColor.fromUint32(0xffc4e4ff, true),\n    \"black\": RGBColor.fromUint32(0xff000000, true),\n    \"blanchedalmond\": RGBColor.fromUint32(0xffcdebff, true),\n    \"blue\": RGBColor.fromUint32(0xffff0000, true),\n    \"blueviolet\": RGBColor.fromUint32(0xffe22b8a, true),\n    \"brown\": RGBColor.fromUint32(0xff2a2aa5, true),\n    \"burlywood\": RGBColor.fromUint32(0xff87b8de, true),\n    \"cadetblue\": RGBColor.fromUint32(0xffa09e5f, true),\n    \"chartreuse\": RGBColor.fromUint32(0xff00ff7f, true),\n    \"chocolate\": RGBColor.fromUint32(0xff1e69d2, true),\n    \"coral\": RGBColor.fromUint32(0xff507fff, true),\n    \"cornflowerblue\": RGBColor.fromUint32(0xffed9564, true),\n    \"cornsilk\": RGBColor.fromUint32(0xffdcf8ff, true),\n    \"crimson\": RGBColor.fromUint32(0xff3c14dc, true),\n    \"cyan\": RGBColor.fromUint32(0xffffff00, true),\n    \"darkblue\": RGBColor.fromUint32(0xff8b0000, true),\n    \"darkcyan\": RGBColor.fromUint32(0xff8b8b00, true),\n    \"darkgoldenrod\": RGBColor.fromUint32(0xff0b86b8, true),\n    \"darkgray\": RGBColor.fromUint32(0xffa9a9a9, true),\n    \"darkgreen\": RGBColor.fromUint32(0xff006400, true),\n    \"darkgrey\": RGBColor.fromUint32(0xffa9a9a9, true),\n    \"darkkhaki\": RGBColor.fromUint32(0xff6bb7bd, true),\n    \"darkmagenta\": RGBColor.fromUint32(0xff8b008b, true),\n    \"darkolivegreen\": RGBColor.fromUint32(0xff2f6b55, true),\n    \"darkorange\": RGBColor.fromUint32(0xff008cff, true),\n    \"darkorchid\": RGBColor.fromUint32(0xffcc3299, true),\n    \"darkred\": RGBColor.fromUint32(0xff00008b, true),\n    \"darksalmon\": RGBColor.fromUint32(0xff7a96e9, true),\n    \"darkseagreen\": RGBColor.fromUint32(0xff8fbc8f, true),\n    \"darkslateblue\": RGBColor.fromUint32(0xff8b3d48, true),\n    \"darkslategray\": RGBColor.fromUint32(0xff4f4f2f, true),\n    \"darkslategrey\": RGBColor.fromUint32(0xff4f4f2f, true),\n    \"darkturquoise\": RGBColor.fromUint32(0xffd1ce00, true),\n    \"darkviolet\": RGBColor.fromUint32(0xffd30094, true),\n    \"deeppink\": RGBColor.fromUint32(0xff9314ff, true),\n    \"deepskyblue\": RGBColor.fromUint32(0xffffbf00, true),\n    \"dimgray\": RGBColor.fromUint32(0xff696969, true),\n    \"dimgrey\": RGBColor.fromUint32(0xff696969, true),\n    \"dodgerblue\": RGBColor.fromUint32(0xffff901e, true),\n    \"firebrick\": RGBColor.fromUint32(0xff2222b2, true),\n    \"floralwhite\": RGBColor.fromUint32(0xfff0faff, true),\n    \"forestgreen\": RGBColor.fromUint32(0xff228b22, true),\n    \"fuchsia\": RGBColor.fromUint32(0xffff00ff, true),\n    \"gainsboro\": RGBColor.fromUint32(0xffdcdcdc, true),\n    \"ghostwhite\": RGBColor.fromUint32(0xfffff8f8, true),\n    \"gold\": RGBColor.fromUint32(0xff00d7ff, true),\n    \"goldenrod\": RGBColor.fromUint32(0xff20a5da, true),\n    \"gray\": RGBColor.fromUint32(0xff808080, true),\n    \"green\": RGBColor.fromUint32(0xff008000, true),\n    \"greenyellow\": RGBColor.fromUint32(0xff2fffad, true),\n    \"grey\": RGBColor.fromUint32(0xff808080, true),\n    \"honeydew\": RGBColor.fromUint32(0xfff0fff0, true),\n    \"hotpink\": RGBColor.fromUint32(0xffb469ff, true),\n    \"indianred\": RGBColor.fromUint32(0xff5c5ccd, true),\n    \"indigo\": RGBColor.fromUint32(0xff82004b, true),\n    \"ivory\": RGBColor.fromUint32(0xfff0ffff, true),\n    \"khaki\": RGBColor.fromUint32(0xff8ce6f0, true),\n    \"lavender\": RGBColor.fromUint32(0xfffae6e6, true),\n    \"lavenderblush\": RGBColor.fromUint32(0xfff5f0ff, true),\n    \"lawngreen\": RGBColor.fromUint32(0xff00fc7c, true),\n    \"lemonchiffon\": RGBColor.fromUint32(0xffcdfaff, true),\n    \"lightblue\": RGBColor.fromUint32(0xffe6d8ad, true),\n    \"lightcoral\": RGBColor.fromUint32(0xff8080f0, true),\n    \"lightcyan\": RGBColor.fromUint32(0xffffffe0, true),\n    \"lightgoldenrodyellow\": RGBColor.fromUint32(0xffd2fafa, true),\n    \"lightgray\": RGBColor.fromUint32(0xffd3d3d3, true),\n    \"lightgreen\": RGBColor.fromUint32(0xff90ee90, true),\n    \"lightgrey\": RGBColor.fromUint32(0xffd3d3d3, true),\n    \"lightpink\": RGBColor.fromUint32(0xffc1b6ff, true),\n    \"lightsalmon\": RGBColor.fromUint32(0xff7aa0ff, true),\n    \"lightseagreen\": RGBColor.fromUint32(0xffaab220, true),\n    \"lightskyblue\": RGBColor.fromUint32(0xffface87, true),\n    \"lightslategray\": RGBColor.fromUint32(0xff998877, true),\n    \"lightslategrey\": RGBColor.fromUint32(0xff998877, true),\n    \"lightsteelblue\": RGBColor.fromUint32(0xffdec4b0, true),\n    \"lightyellow\": RGBColor.fromUint32(0xffe0ffff, true),\n    \"lime\": RGBColor.fromUint32(0xff00ff00, true),\n    \"limegreen\": RGBColor.fromUint32(0xff32cd32, true),\n    \"linen\": RGBColor.fromUint32(0xffe6f0fa, true),\n    \"magenta\": RGBColor.fromUint32(0xffff00ff, true),\n    \"maroon\": RGBColor.fromUint32(0xff000080, true),\n    \"mediumaquamarine\": RGBColor.fromUint32(0xffaacd66, true),\n    \"mediumblue\": RGBColor.fromUint32(0xffcd0000, true),\n    \"mediumorchid\": RGBColor.fromUint32(0xffd355ba, true),\n    \"mediumpurple\": RGBColor.fromUint32(0xffdb7093, true),\n    \"mediumseagreen\": RGBColor.fromUint32(0xff71b33c, true),\n    \"mediumslateblue\": RGBColor.fromUint32(0xffee687b, true),\n    \"mediumspringgreen\": RGBColor.fromUint32(0xff9afa00, true),\n    \"mediumturquoise\": RGBColor.fromUint32(0xffccd148, true),\n    \"mediumvioletred\": RGBColor.fromUint32(0xff8515c7, true),\n    \"midnightblue\": RGBColor.fromUint32(0xff701919, true),\n    \"mintcream\": RGBColor.fromUint32(0xfffafff5, true),\n    \"mistyrose\": RGBColor.fromUint32(0xffe1e4ff, true),\n    \"moccasin\": RGBColor.fromUint32(0xffb5e4ff, true),\n    \"navajowhite\": RGBColor.fromUint32(0xffaddeff, true),\n    \"navy\": RGBColor.fromUint32(0xff800000, true),\n    \"oldlace\": RGBColor.fromUint32(0xffe6f5fd, true),\n    \"olive\": RGBColor.fromUint32(0xff008080, true),\n    \"olivedrab\": RGBColor.fromUint32(0xff238e6b, true),\n    \"orange\": RGBColor.fromUint32(0xff00a5ff, true),\n    \"orangered\": RGBColor.fromUint32(0xff0045ff, true),\n    \"orchid\": RGBColor.fromUint32(0xffd670da, true),\n    \"palegoldenrod\": RGBColor.fromUint32(0xffaae8ee, true),\n    \"palegreen\": RGBColor.fromUint32(0xff98fb98, true),\n    \"paleturquoise\": RGBColor.fromUint32(0xffeeeeaf, true),\n    \"palevioletred\": RGBColor.fromUint32(0xff9370db, true),\n    \"papayawhip\": RGBColor.fromUint32(0xffd5efff, true),\n    \"peachpuff\": RGBColor.fromUint32(0xffb9daff, true),\n    \"peru\": RGBColor.fromUint32(0xff3f85cd, true),\n    \"pink\": RGBColor.fromUint32(0xffcbc0ff, true),\n    \"plum\": RGBColor.fromUint32(0xffdda0dd, true),\n    \"powderblue\": RGBColor.fromUint32(0xffe6e0b0, true),\n    \"purple\": RGBColor.fromUint32(0xff800080, true),\n    \"red\": RGBColor.fromUint32(0xff0000ff, true),\n    \"rosybrown\": RGBColor.fromUint32(0xff8f8fbc, true),\n    \"royalblue\": RGBColor.fromUint32(0xffe16941, true),\n    \"saddlebrown\": RGBColor.fromUint32(0xff13458b, true),\n    \"salmon\": RGBColor.fromUint32(0xff7280fa, true),\n    \"sandybrown\": RGBColor.fromUint32(0xff60a4f4, true),\n    \"seagreen\": RGBColor.fromUint32(0xff578b2e, true),\n    \"seashell\": RGBColor.fromUint32(0xffeef5ff, true),\n    \"sienna\": RGBColor.fromUint32(0xff2d52a0, true),\n    \"silver\": RGBColor.fromUint32(0xffc0c0c0, true),\n    \"skyblue\": RGBColor.fromUint32(0xffebce87, true),\n    \"slateblue\": RGBColor.fromUint32(0xffcd5a6a, true),\n    \"slategray\": RGBColor.fromUint32(0xff908070, true),\n    \"slategrey\": RGBColor.fromUint32(0xff908070, true),\n    \"snow\": RGBColor.fromUint32(0xfffafaff, true),\n    \"springgreen\": RGBColor.fromUint32(0xff7fff00, true),\n    \"steelblue\": RGBColor.fromUint32(0xffb48246, true),\n    \"tan\": RGBColor.fromUint32(0xff8cb4d2, true),\n    \"teal\": RGBColor.fromUint32(0xff808000, true),\n    \"thistle\": RGBColor.fromUint32(0xffd8bfd8, true),\n    \"tomato\": RGBColor.fromUint32(0xff4763ff, true),\n    \"turquoise\": RGBColor.fromUint32(0xffd0e040, true),\n    \"violet\": RGBColor.fromUint32(0xffee82ee, true),\n    \"wheat\": RGBColor.fromUint32(0xffb3def5, true),\n    \"white\": RGBColor.fromUint32(0xffffffff, true),\n    \"whitesmoke\": RGBColor.fromUint32(0xfff5f5f5, true),\n    \"yellow\": RGBColor.fromUint32(0xff00ffff, true),\n    \"yellowgreen\": RGBColor.fromUint32(0xff32cd9a, true)\n};\n","export enum Direction {\n    CENTER = 0,\n    LEFT = 1,\n    RIGHT = 2,\n    TOP = 4,\n    BOTTOM = 8,\n    TOP_LEFT = TOP | LEFT,\n    BOTTOM_LEFT = BOTTOM | LEFT,\n    TOP_RIGHT = TOP | RIGHT,\n    BOTTOM_RIGHT = BOTTOM | RIGHT\n}\n\nexport namespace Direction {\n    export function isLeft(direction: Direction): boolean {\n        return (direction & Direction.LEFT) !== 0;\n    }\n\n    export function isRight(direction: Direction): boolean {\n        return (direction & Direction.RIGHT) !== 0;\n    }\n\n    export function isTop(direction: Direction): boolean {\n        return (direction & Direction.TOP) !== 0;\n    }\n\n    export function isBottom(direction: Direction): boolean {\n        return (direction & Direction.BOTTOM) !== 0;\n    }\n\n    export function isHorizontal(direction: Direction): boolean {\n        return isLeft(direction) || isRight(direction);\n    }\n\n    export function isVertical(direction: Direction): boolean {\n        return isLeft(direction) || isRight(direction);\n    }\n\n    export function isEdge(direction: Direction): boolean {\n        return direction === Direction.LEFT\n            || direction === Direction.RIGHT\n            || direction === Direction.TOP\n            || direction === Direction.BOTTOM;\n    }\n\n    export function isCorner(direction: Direction): boolean {\n        return direction === Direction.TOP_LEFT\n            || direction === Direction.TOP_RIGHT\n            || direction === Direction.BOTTOM_LEFT\n            || direction === Direction.BOTTOM_RIGHT;\n    }\n\n    export function getX(direction: Direction): number {\n        return isLeft(direction) ? -1 : isRight(direction) ? 1 : 0;\n    }\n\n    export function getY(direction: Direction): number {\n        return isTop(direction) ? -1 : isBottom(direction) ? 1 : 0;\n    }\n}\n","export class Rect {\n    public constructor(\n        private left: number,\n        private top: number,\n        private width: number,\n        private height: number\n    ) {}\n\n    public getLeft(): number {\n        return this.left;\n    }\n\n    public getTop(): number {\n        return this.top;\n    }\n\n    public getWidth(): number {\n        return this.width;\n    }\n\n    public getHeight(): number {\n        return this.height;\n    }\n\n    public getRight(): number {\n        return this.width + this.left;\n    }\n\n    public getBottom(): number {\n        return this.height + this.top;\n    }\n\n    public getCenterX(): number {\n        return this.left + this.width / 2;\n    }\n\n    public getCenterY(): number {\n        return this.top + this.height / 2;\n    }\n}\n","/**\n * Readonly interface for [[AffineTransform]].\n */\nexport interface ReadonlyAffineTransform {\n    /** The horizontal scaling. A value of 1 results in no scaling. */\n    readonly m11: number;\n\n    /** The vertical skewing. */\n    readonly m12: number;\n\n    /** The horizontal skewing. */\n    readonly m21: number;\n\n    /** The vertical scaling. A value of 1 results in no scaling. */\n    readonly m22: number;\n\n    /** The horizontal translation (moving). */\n    readonly dx: number;\n\n    /** The vertical translation (moving). */\n    readonly dy: number;\n\n    /**\n     * Returns a clone of this matrix.\n     *\n     * @return The cloned matrix.\n     */\n    clone(): AffineTransform;\n\n    /**\n     * Converts this matrix into a DOM matrix.\n     *\n     * @return The created DOM matrix.\n     */\n    toDOMMatrix(): DOMMatrix;\n\n    /**\n     * Returns a human-readable string representation of the matrix.\n     *\n     * @return The human-readable string representation of the matrix.\n     */\n    toString(): string;\n\n    /**\n     * Checks if matrix is identity.\n     *\n     * @return True if identity, false if not.\n     */\n    isIdentity(): boolean;\n\n    /**\n     * Returns the determinant of this matrix.\n     *\n     * @return The determinant of this matrix.\n     */\n    getDeterminant(): number;\n\n    /**\n     * Returns the X translation of the matrix.\n     *\n     * @return The X translation.\n     */\n    getTranslationX(): number;\n\n    /**\n     * Returns the Y translation of the matrix.\n     *\n     * @return The Y translation.\n     */\n    getTranslationY(): number;\n\n    /**\n     * Returns the X scale factor of the matrix.\n     *\n     * @return The X scale factor of the matrix.\n     */\n    getScaleX(): number;\n\n    /**\n     * Returns the Y scale factor of the matrix.\n     *\n     * @return The Y scale factor of the matrix.\n     */\n    getScaleY(): number;\n\n    /**\n     * Returns the rotation of this matrix in radians.\n     *\n     * @return The rotation angle in radians.\n     */\n    getRotation(): number;\n\n    /**\n     * Transforms the given 2D canvas rendering context.\n     *\n     * @param ctx - The 2D canvas rendering context to transform.\n     */\n    transformCanvas(ctx: CanvasRenderingContext2D): this;\n\n    /**\n     * Sets the transformation of the given 2D canvas rendering context.\n     *\n     * @param ctx - The 2D canvas rendering context to set the transformation on.\n     */\n    setCanvasTransform(ctx: CanvasRenderingContext2D): this;\n}\n\n/**\n * Affine transformation matrix. It behaves like a 3x3 matrix where the third row is always assumed to be 0 0 1.\n * This matrix is useful for 2D transformations and is compatible to the transformations done in a Canvas for example.\n */\nexport class AffineTransform implements ReadonlyAffineTransform {\n    /**\n     * Creates a matrix initialized to an identity matrix.\n     */\n    public constructor();\n\n    /**\n     * Creates a new matrix initialized to the given component values.\n     *\n     * @param m11 - The horizontal scaling. A value of 1 results in no scaling.\n     * @param m12 - The vertical skewing.\n     * @param m21 - The horizontal skewing.\n     * @param m22 - The vertical scaling. A value of 1 results in no scaling.\n     * @param dx  - The horizontal translation (moving).\n     * @param dy  - The vertical translation (moving).\n     */\n    public constructor(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number);\n\n    public constructor(\n        public m11: number = 1,\n        public m12: number = 0,\n        public m21: number = 0,\n        public m22: number = 1,\n        public dx: number = 0,\n        public dy: number = 0,\n    ) {}\n\n    /**\n     * Creates a new affine transformation from the given DOM matrix object.\n     *\n     * @aram domMatrix - The DOM matrix object. Must be a 2D matrix.\n     * @return The created affine transformation.\n     */\n    public static fromDOMMatrix(domMatrix: DOMMatrix): AffineTransform {\n        if (!domMatrix.is2D) {\n            throw new Error(\"Can only create Matrix3 from 2D DOMMatrix\");\n        }\n        return new AffineTransform(\n            domMatrix.a, domMatrix.b,\n            domMatrix.c, domMatrix.d,\n            domMatrix.e, domMatrix.f\n        );\n    }\n\n    /** @inheritDoc */\n    public clone(): AffineTransform {\n        return new AffineTransform(this.m11, this.m12, this.m21, this.m22, this.dx, this.dy);\n    }\n\n    /** @inheritDoc */\n    public toDOMMatrix(): DOMMatrix {\n        return new DOMMatrix([ this.m11, this.m12, this.m21, this.m22, this.dx, this.dy ]);\n    }\n\n    /** @inheritDoc */\n    public toString(): string {\n        return `[ ${this.m11}, ${this.m12}, ${this.m21}, ${this.m22}, ${this.dx}, ${this.dy} ]`;\n    }\n\n    /**\n     * Sets the matrix component values.\n     *\n     * @param m11 - The horizontal scaling. A value of 1 results in no scaling.\n     * @param m12 - The vertical skewing.\n     * @param m21 - The horizontal skewing.\n     * @param m22 - The vertical scaling. A value of 1 results in no scaling.\n     * @param dx  - The horizontal translation (moving).\n     * @param dy  - The vertical translation (moving).\n     */\n    public setComponents(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): this {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.dx = dx;\n        this.dy = dy;\n        return this;\n    }\n\n    /**\n     * Sets the matrix component values from another matrix.\n     *\n     * @param matrix - The matrix to copy the component values from.\n     */\n    public setMatrix(matrix: ReadonlyAffineTransform): this {\n        this.m11 = matrix.m11;\n        this.m12 = matrix.m12;\n        this.m21 = matrix.m21;\n        this.m22 = matrix.m22;\n        this.dx = matrix.dx;\n        this.dy = matrix.dy;\n        return this;\n    }\n\n    /** @inheritDoc */\n    public isIdentity(): boolean {\n        return this.m11 === 1\n            && this.m12 === 0\n            && this.m21 === 0\n            && this.m22 === 1\n            && this.dx === 0\n            && this.dy === 0;\n    }\n\n    /**\n     * Resets this matrix to identity.\n     */\n    public reset(): this {\n        this.m11 = 1;\n        this.m12 = 0;\n        this.m21 = 0;\n        this.m22 = 1;\n        this.dx = 0;\n        this.dy = 0;\n        return this;\n    }\n\n    /**\n     * Multiplies this matrix with the specified matrix (`this = this * other`).\n     *\n     * @param other - The other matrix to multiply this one with.\n     */\n    public mul(other: ReadonlyAffineTransform): this {\n        const a11 = this.m11, a12 = this.m12;\n        const a21 = this.m21, a22 = this.m22;\n        const a31 = this.dx, a32 = this.dy;\n        const b11 = other.m11, b12 = other.m12;\n        const b21 = other.m21, b22 = other.m22;\n        const b31 = other.dx, b32 = other.dy;\n        this.m11 = a11 * b11 + a21 * b12;\n        this.m12 = a12 * b11 + a22 * b12;\n        this.m21 = a11 * b21 + a21 * b22;\n        this.m22 = a12 * b21 + a22 * b22;\n        this.dx = a11 * b31 + a21 * b32 + a31;\n        this.dy = a12 * b31 + a22 * b32 + a32;\n        return this;\n    }\n\n    /**\n     * Divides this matrix by the specified matrix (`this = this / other` which is the same as\n     * `this = this * inverse(other)`).\n     *\n     * @param other - The other matrix to divide this one by.\n     */\n    public div(other: ReadonlyAffineTransform): this {\n        // a = this, b = other\n        const a11 = this.m11, a12 = this.m12;\n        const a21 = this.m21, a22 = this.m22;\n        const a31 = this.dx, a32 = this.dy;\n        const b11 = other.m11, b12 = other.m12;\n        const b21 = other.m21, b22 = other.m22;\n        const b31 = other.dx, b32 = other.dy;\n\n        // d = determinant(b)\n        const d = b11 * b22 - b21 * b12;\n\n        // c = invert(b)\n        const c11 = b22 / d;\n        const c12 = -b12 / d;\n        const c21 = -b21 / d;\n        const c22 = b11 / d;\n        const c31 = (b21 * b32 - b31 * b22) / d;\n        const c32 = (b31 * b12 - b11 * b32) / d;\n\n        // this = this * c\n        this.m11 = a11 * c11 + a21 * c12;\n        this.m12 = a12 * c11 + a22 * c12;\n        this.m21 = a11 * c21 + a21 * c22;\n        this.m22 = a12 * c21 + a22 * c22;\n        this.dx = a11 * c31 + a21 * c32 + a31;\n        this.dy = a12 * c31 + a22 * c32 + a32;\n\n        return this;\n    }\n\n    /** @inheritDoc */\n    public getDeterminant(): number {\n        return this.m11 * this.m22 - this.m21 * this.m12;\n    }\n\n    /**\n     * Inverts this matrix.\n     */\n    public invert(): this {\n        const m11 = this.m11, m12 = this.m12;\n        const m21 = this.m21, m22 = this.m22;\n        const m31 = this.dx, m32 = this.dy;\n\n        const d = m11 * m22 - m21 * m12;\n\n        this.m11 = m22 / d;\n        this.m12 = -m12 / d;\n        this.m21 = -m21 / d;\n        this.m22 = m11 / d;\n        this.dx = (m21 * m32 - m31 * m22) / d;\n        this.dy = (m31 * m12 - m11 * m32) / d;\n\n        return this;\n    }\n\n    /**\n     * Translates this matrix by the specified values.\n     *\n     * @param dx - The X translation.\n     * @param dy - The Y translation.\n     */\n    public translate(dx: number, dy: number): this {\n        this.dx += dx * this.m11 + dy * this.m21;\n        this.dy += dx * this.m12 + dy * this.m22;\n        return this;\n    }\n\n    /**\n     * Translates this matrix by the specified X delta.\n     *\n     * @param d - The X translation delta.\n     */\n    public translateX(d: number): this {\n        this.dx += d * this.m11;\n        this.dy += d * this.m12;\n        return this;\n    }\n\n    /** @inheritDoc */\n    public getTranslationX(): number {\n        return this.dx;\n    }\n\n    /**\n     * Translates this matrix by the specified Y delta.\n     *\n     * @param d - The Y translation delta.\n     */\n    public translateY(d: number): this {\n        this.dx += d * this.m21;\n        this.dy += d * this.m22;\n        return this;\n    }\n\n    /** @inheritDoc */\n    public getTranslationY(): number {\n        return this.dy;\n    }\n\n    /**\n     * Sets matrix to a translation matrix.\n     *\n     * @param dx - The X translation.\n     * @param dy - The Y translation.\n     */\n    public setTranslation(dx: number, dy: number): this {\n        this.m11 =  1; this.m12 =  0;\n        this.m21 =  0; this.m22 =  1;\n        this.dx = dx; this.dy = dy;\n        return this;\n    }\n\n    /**\n     * Creates matrix initialized to a translation matrix.\n     *\n     * @param dx - The X translation.\n     * @param dy - The Y translation.\n     */\n    public static createTranslation(dx: number, dy: number): AffineTransform {\n        return new AffineTransform().setTranslation(dx, dy);\n    }\n\n    /**\n     * Scales this matrix by the specified factor.\n     *\n     * @param sx - The X scale factor.\n     * @param sy - The Y scale factor. Defaults to X scale factor.\n     */\n    public scale(sx: number, sy = sx): this {\n        this.m11 *= sx;\n        this.m12 *= sx;\n        this.m21 *= sy;\n        this.m22 *= sy;\n        return this;\n    }\n\n    /**\n     * Sets matrix to a scale matrix.\n     *\n     * @param sx - The X scale factor.\n     * @param sy - The Y scale factor. Defaults to X scale factor.\n     */\n    public setScale(sx: number, sy = sx): this {\n        this.m11 = sx; this.m12 =  0;\n        this.m21 =  0; this.m22 = sy;\n        this.dx =  0; this.dy =  0;\n        return this;\n    }\n\n    /**\n     * Scales this matrix by the specified factor along the X axis.\n     *\n     * @param s - The scale factor.\n     */\n    public scaleX(s: number): this {\n        this.m11 *= s;\n        this.m12 *= s;\n        return this;\n    }\n\n    /** @inheritDoc */\n    public getScaleX(): number {\n        return Math.hypot(this.m11, this.m21);\n    }\n\n    /**\n     * Scales this matrix by the specified factor along the Y axis.\n     *\n     * @param s - The scale factor.\n     */\n    public scaleY(s: number): this {\n        this.m21 *= s;\n        this.m22 *= s;\n        return this;\n    }\n\n    /** @inheritDoc */\n    public getScaleY(): number {\n        return Math.hypot(this.m12, this.m22);\n    }\n\n    /**\n     * Creates matrix initialized to a scale matrix.\n     *\n     * @param sx - The X scale factor.\n     * @param sy - The Y scale factor. Defaults to X scale factor.\n     */\n    public static createScale(sx: number, sy?: number): AffineTransform {\n        return new AffineTransform().setScale(sx, sy);\n    }\n\n    /**\n     * Rotates this matrix by the given angle.\n     *\n     * @param angle - The rotation angle in RAD.\n     */\n    public rotate(angle: number): this {\n        const m11 = this.m11, m12 = this.m12;\n        const m21 = this.m21, m22 = this.m22;\n        const s = Math.sin(angle), c = Math.cos(angle);\n        this.m11 = c * m11 + s * m21;\n        this.m12 = c * m12 + s * m22;\n        this.m21 = c * m21 - s * m11;\n        this.m22 = c * m22 - s * m12;\n        return this;\n    }\n\n    /** @inheritDoc */\n    public getRotation(): number {\n        const m11 = this.m11, m12 = this.m12;\n        const m21 = this.m21, m22 = this.m22;\n        if (m11 !== 0 || m21 !== 0) {\n            const acos = Math.acos(m11 / Math.hypot(m11, m21));\n            return m21 > 0 ? -acos : acos;\n        } else if (m12 !== 0 || m22 !== 0) {\n            const acos = Math.acos(m12 / Math.hypot(m12, m22));\n            return Math.PI / 2 + (m22 > 0 ? -acos : acos);\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * Sets matrix to a rotation matrix.\n     *\n     * @param angle - The rotation angle in RAD.\n     */\n    public setRotation(angle: number): this {\n        const s = Math.sin(angle), c = Math.cos(angle);\n        this.m11 =  c; this.m12 = s;\n        this.m21 = -s; this.m22 = c;\n        this.dx =  0; this.dy = 0;\n        return this;\n    }\n\n    /**\n     * Create new matrix initialized to a rotation matrix.\n     *\n     * @param angle - The rotation angle in RAD.\n     */\n    public static createRotation(angle: number): AffineTransform {\n        return new AffineTransform().setRotation(angle);\n    }\n\n    /** @inheritDoc */\n    public transformCanvas(ctx: CanvasRenderingContext2D): this {\n        ctx.transform(this.m11, this.m12, this.m21, this.m22, this.dx, this.dy);\n        return this;\n    }\n\n    /** @inheritDoc */\n    public setCanvasTransform(ctx: CanvasRenderingContext2D): this {\n        ctx.setTransform(this.m11, this.m12, this.m21, this.m22, this.dx, this.dy);\n        return this;\n    }\n}\n","import { Line2 } from \"./Line2\";\nimport { ReadonlyVector2Like } from \"./Vector2\";\nimport { Polygon2 } from \"./Polygon2\";\nimport { Rect } from \"../geom/Rect\";\n\nexport class Bounds2 {\n    public minX: number = Infinity;\n    public maxX: number = -Infinity;\n    public minY: number = Infinity;\n    public maxY: number = -Infinity;\n\n    public get centerX(): number {\n        return this.minX + this.width / 2;\n    }\n\n    public get centerY(): number {\n        return this.minY + this.height / 2;\n    }\n\n    public get width(): number {\n        return this.maxX - this.minX;\n    }\n\n    public get height(): number {\n        return this.maxY - this.minY;\n    }\n\n    public reset(): this {\n        this.minX = this.minY = Infinity;\n        this.maxX = this.maxY = -Infinity;\n        return this;\n    }\n\n    public isEmpty(): boolean {\n        return this.minX > this.maxX || this.minY > this.maxY;\n    }\n\n    public addVertex(vertex: ReadonlyVector2Like): this {\n        this.minX = Math.min(this.minX, vertex.x);\n        this.maxX = Math.max(this.maxX, vertex.x);\n        this.minY = Math.min(this.minY, vertex.y);\n        this.maxY = Math.max(this.maxY, vertex.y);\n        return this;\n    }\n\n    public addLine(line: Line2): this {\n        return this.addVertex(line.start).addVertex(line.end);\n    }\n\n    public addPolygon(polygon: Polygon2): this {\n        for (const vertex of polygon.vertices) {\n            this.addVertex(vertex);\n        }\n        return this;\n    }\n\n    public toRect(): Rect {\n        return new Rect(this.minX, this.minY, this.maxX - this.minX, this.maxY - this.minY);\n    }\n\n    /**\n     * Checks if this bounding box collides with the given one.\n     *\n     * @param other - The other bounding box to check collision with.\n     * @return True if bounding boxes collide, false if not.\n     */\n    public collidesWith(other: Bounds2): boolean {\n        return this.minY <= other.maxY && this.maxY >= other.minY && this.minX <= other.maxX && this.maxX >= other.minX;\n    }\n\n    /**\n     * Checks if this bounding box contains the given point.\n     *\n     * @param x - The X coordinate in scene coordinate system.\n     * @param y - The Y coordinate in scene coordinate system.\n     * @return True if bounding box contains the point, false if not.\n     */\n    public containsPoint(x: number, y: number): boolean {\n        return this.minY <= y && this.maxY >= y && this.minX <= y && this.maxX >= y;\n    }\n\n    /**\n     * Draws the bounds to the given 2D canvas rendering context. This only applies the closed geometry, you have to\n     * fill/stroke/clip it yourself.\n     *\n     * @param ctx - The 2D canvas rendering context to render to.\n     */\n    public draw(ctx: CanvasRenderingContext2D): this {\n        if (!this.isEmpty()) {\n            ctx.rect(this.minX, this.minY, this.maxX - this.minX, this.maxY - this.minY);\n        }\n        return this;\n    }\n}\n","import { ReadonlyVector2, Vector2 } from \"./Vector2\";\n\n/**\n * A line connecting two vertices.\n */\nexport class Line2 {\n    private normal: Vector2 | null = null;\n    private center: Vector2 | null = null;\n\n    /**\n     * Creates a new line from vertex a to vertex b.\n     *\n     * @param start - The start of the line.\n     * @param end   - The end of the line.\n     */\n    public constructor(\n        public start: Vector2,\n        public end: Vector2\n    ) {}\n\n    /**\n     * Returns the normal of the line. For a line in a clock-wise polygon this normal points to the outside of the\n     * polygon.\n     *\n     * @return The line normal. Normalized to a unit vector.\n     */\n    public getNormal(): ReadonlyVector2 {\n        return (this.normal ?? (this.normal = new Vector2())).setComponents(\n            this.end.y - this.start.y,\n            this.start.x - this.end.x\n        ).normalize();\n    }\n\n    /**\n     * Returns the center of the line.\n     *\n     * @return The center of the line.\n     */\n    public getCenter(): ReadonlyVector2 {\n        return (this.center ?? (this.center = new Vector2())).setComponents(\n            (this.start.x + this.end.x) / 2,\n            (this.start.y + this.end.y) / 2\n        );\n    }\n\n    /**\n     * Draws the line to the given 2D canvas rendering context. This only applies the line geometry,\n     * you have to stroke it yourself.\n     *\n     * @param ctx - The canvas rendering context.\n     */\n    public draw(ctx: CanvasRenderingContext2D): this {\n        const { start: a, end: b } = this;\n        ctx.moveTo(a.x, a.y);\n        ctx.lineTo(b.x, b.y);\n        return this;\n    }\n\n    /**\n     * Draws the line normal to the given 2D canvas rendering context. This only applies the line geometry,\n     * you have to stroke it yourself.\n     *\n     * @param ctx - The canvas rendering context.\n     * @param len - Optional custom normal line length.\n     */\n    public drawNormal(ctx: CanvasRenderingContext2D, len = 25): this {\n        const normal = this.getNormal();\n        const center = this.getCenter();\n        ctx.moveTo(center.x, center.y);\n        ctx.lineTo(center.x + normal.x * len, center.y + normal.y * len);\n        return this;\n    }\n}\n","import { Line2 } from \"./Line2\";\nimport { ReadonlyVector2, Vector2 } from \"./Vector2\";\nimport { ReadonlyAffineTransform } from \"./AffineTransform\";\nimport { Bounds2 } from \"./Bounds2\";\nimport { Rect } from \"../geom/Rect\";\n\n/**\n * A polygon with any number of vertices.\n */\nexport class Polygon2 {\n    public readonly vertices: Vector2[];\n    public readonly edges: Line2[] = [];\n    private readonly normals: Vector2[] = [];\n    private readonly bounds = new Bounds2();\n\n    /**\n     * Creates a polygon with the given initial vertices.\n     *\n     * @param vertices - The polygon vertices.\n     */\n    public constructor(...vertices: Vector2[]) {\n        this.vertices = vertices;\n        for (let i = 0, max = vertices.length; i < max; ++i) {\n            this.edges.push(new Line2(vertices[i], vertices[i + 1] ?? vertices[0]));\n        }\n    }\n\n    /**\n     * Checks if polygon has at least one vertex.\n     *\n     * @return True if polygon has at least on vertex, false if not.\n     */\n    public hasVertices(): boolean {\n        return this.vertices.length > 0;\n    }\n\n    /**\n     * Adds the given vertex at the given index. Polygon edges are automatically corrected.\n     *\n     * @param vertex - The vertex to add.\n     * @param index  - Optional insertion index. If not specified then vertex is added at the end of the polygon.\n     */\n    public addVertex(vertex: Vector2, index: number = this.vertices.length): this {\n        const edge = new Line2(vertex, vertex);\n        this.vertices.splice(index, 0, vertex);\n        const previousEdge = this.edges[index - 1];\n        this.edges.splice(index, 0, edge);\n        if (previousEdge != null) {\n            edge.end = previousEdge.end;\n            previousEdge.end = vertex;\n        } else {\n            edge.end = this.vertices[0];\n        }\n        this.bounds.reset();\n        return this;\n    }\n\n    /**\n     * Adds the four corner vertices (Starting with top-left corner and then moving clockwise) of the given rectangle.\n     *\n     * @param rect - The rectangle to add.\n     */\n    public addRect(rect: Rect): this {\n        this.addVertex(new Vector2(rect.getLeft(), rect.getTop()));\n        this.addVertex(new Vector2(rect.getRight(), rect.getTop()));\n        this.addVertex(new Vector2(rect.getRight(), rect.getBottom()));\n        this.addVertex(new Vector2(rect.getLeft(), rect.getBottom()));\n        return this;\n    }\n\n    /**\n     * Removes the vertex at the given index. Polygon edges are automatically corrected.\n     *\n     * @param index - The index of the vertex to remove.\n     */\n    public removeVertex(index: number): this {\n        const edges = this.edges;\n        const edge = edges[index];\n        if (edge != null) {\n            const previousEdge = edges[index - 1] ?? edges[edges.length - 1];\n            const nextEdge = edges[index + 1] ?? edges[0];\n            if (previousEdge !== edge && nextEdge !== edge) {\n                nextEdge.start = edge.end;\n                previousEdge.end = edge.end;\n            }\n            this.vertices.splice(index, 1);\n            this.edges.splice(index, 1);\n            this.bounds.reset();\n        }\n        return this;\n    }\n\n    /**\n     * Removes all vertices from the polygon.\n     */\n    public clear(): this {\n        if (this.hasVertices()) {\n            this.vertices.length = 0;\n            this.edges.length = 0;\n            this.normals.length = 0;\n            this.bounds.reset();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the vertex normal for the vertex with the given index.\n     *\n     * @param index - The vertex index.\n     * @return The vertex normal.\n     */\n    public getVertexNormal(index: number): ReadonlyVector2 {\n        const normal = this.normals[index]?.reset() ?? (this.normals[index] = new Vector2());\n        const edges = this.edges;\n        const edge = edges[index];\n        if (edge != null) {\n            normal.add(edge.getNormal());\n            const previousEdge = edges[index - 1] ?? edges[edges.length - 1];\n            if (previousEdge != null) {\n                normal.add(previousEdge.getNormal());\n            }\n        }\n        return normal.normalize();\n    }\n\n    /**\n     * Draws the polygon to the given 2D canvas rendering context. This only applies the closed geometry, you have to\n     * fill/stroke/clip it yourself.\n     *\n     * @param ctx - The 2D canvas rendering context to render to.\n     */\n    public draw(ctx: CanvasRenderingContext2D): this {\n        const vertices = this.vertices;\n        if (vertices.length > 0) {\n            const first = vertices[0];\n            ctx.moveTo(first.x, first.y);\n            for (let i = 1, max = vertices.length; i < max; ++i) {\n                const next = vertices[i];\n                ctx.lineTo(next.x, next.y);\n            }\n        }\n        ctx.closePath();\n        return this;\n    }\n\n    /**\n     * Draws the polygon edge normals to the given 2D canvas rendering context. This only applies the line geometries,\n     * you have to stroke it yourself.\n     *\n     * @param ctx - The canvas rendering context.\n     * @param len - Optional custom normal line length.\n     */\n    public drawNormals(ctx: CanvasRenderingContext2D, len?: number): this {\n        for (const edge of this.edges) {\n            edge.drawNormal(ctx, len);\n        }\n        return this;\n    }\n\n    /**\n     * Draws the vertex normals to the given 2D canvas rendering context. This only applies the line geometries,\n     * you have to stroke it yourself.\n     *\n     * @param ctx - The canvas rendering context.\n     * @param len - Optional custom normal line length.\n     */\n    public drawVertexNormals(ctx: CanvasRenderingContext2D, len: number = 25): this {\n        this.vertices.forEach((vertex, index) => {\n            ctx.moveTo(vertex.x, vertex.y);\n            const normal = this.getVertexNormal(index);\n            ctx.lineTo(vertex.x + normal.x * len, vertex.y + normal.y * len);\n        });\n        return this;\n    }\n\n    /**\n     * Transforms this polygon with the given transformation matrix.\n     *\n     * @param m - The transformation to apply.\n     */\n    public transform(m: ReadonlyAffineTransform): this {\n        for (const vertex of this.vertices) {\n            vertex.mul(m);\n        }\n        this.bounds.reset();\n        return this;\n    }\n\n    /**\n     * Returns the bounds of the polygon. Bounds are cached and automatically invalidated when polygon is changed\n     * or transformed.\n     *\n     * @return The polygon bounds.\n     */\n    public getBounds(): Bounds2 {\n        if (this.bounds.isEmpty()) {\n            this.bounds.addPolygon(this);\n        }\n        return this.bounds;\n    }\n\n    /**\n     * Checks if this polygon collides with the given one.\n     *\n     * @param other - The other polygon to check collision with.\n     * @return True if polygons collide, false if not.\n     */\n    public collidesWith(other: Polygon2): boolean {\n        // TODO Only bounding box collision is checked for now. Need real polygon check performed when bounding box\n        // collides\n        return this.getBounds().collidesWith(other.getBounds());\n    }\n\n    /**\n     * Checks if this polygon contains the given point.\n     *\n     * @param x - The X coordinate in scene coordinate system.\n     * @param y - The Y coordinate in scene coordinate system.\n     * @return True if polygon contains the point, false if not.\n     */\n    public containsPoint(x: number, y: number): boolean {\n        // TODO Only bounding box collision is checked for now. Need real polygon check performed when bounding box\n        // collides\n        return this.getBounds().containsPoint(x, y);\n    }\n}\n","/**\n * Minimal interface of a 2D size.\n */\nexport interface Size2Like {\n    width: number;\n    height: number;\n}\n\nexport interface ReadonlySize2Like {\n    readonly width: number;\n    readonly height: number;\n}\n\nexport interface ReadonlySize2 extends ReadonlySize2Like {\n    /**\n     * Returns a human-readable string representation of the vector.\n     *\n     * @param maxFractionDigits - Optional number of maximum fraction digits to use in the string. Defaults to 5.\n     * @return The human-readable string representation of the vector.\n     */\n    toString(maxFractionDigits?: number): string;\n\n    /**\n     * Checks if size is empty (width or height is 0 or smaller)\n     *\n     * @return True if size is empty, false if not.\n     */\n    isEmpty(): boolean;\n\n    /**\n     * Clones this size and returns the clone.\n     *\n     * @return The clone\n     */\n    clone(): Size2;\n\n    /**\n     * Returns the area of the size (width * height).\n     *\n     * @return The area.\n     */\n    getArea(): number;\n\n    /**\n     * Returns the aspect ratio of the size (width / height)\n     */\n    getAspectRatio(): number;\n}\n\n/**\n * Mutable 2D size.\n */\nexport class Size2 implements ReadonlySize2Like, Size2Like {\n    /**\n     * Creates a new size with all dimensions set to 0.\n     */\n    public constructor();\n\n    /**\n     * Creates a new size with the given dimensions.\n     *\n     * @param width - The initial width.\n     * @param height - The initial height.\n     */\n    public constructor(width: number, height: number);\n\n    public constructor(\n        public width: number = 0,\n        public height: number = 0\n    ) {}\n\n    /** @inheritDoc */\n    public toString(): string {\n        return `${this.width}x${this.height}`;\n    }\n\n    /**\n     * Sets the size dimensions.\n     *\n     * @param width  - The width to set.\n     * @param height - The height to set.\n     */\n    public setDimensions(width: number, height: number): this {\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n\n    /**\n     * Sets the size dimensions by copying them from the given size.\n     *\n     * @param size - The size to copy the dimensions from.\n     */\n    public setSize(size: ReadonlySize2Like): this {\n        this.width = size.width;\n        this.height = size.height;\n        return this;\n    }\n\n    /** @inheritDoc */\n    public isEmpty(): boolean {\n        return this.width === 0 || this.height === 0;\n    }\n\n    /** @inheritDoc */\n    public clone(): Size2 {\n        return new Size2(this.width, this.height);\n    }\n\n    /** @inheritDoc */\n    public getArea(): number {\n        return this.width * this.height;\n    }\n\n    /** @inheritDoc */\n    public getAspectRatio(): number {\n        return this.width / this.height;\n    }\n}\n","import { ReadonlyAffineTransform } from \"./AffineTransform\";\n\n/**\n * Minimal interface of a 2D vector.\n */\nexport interface Vector2Like {\n    x: number;\n    y: number;\n}\n\nexport interface ReadonlyVector2Like {\n    readonly x: number;\n    readonly y: number;\n}\n\nexport interface ReadonlyVector2 extends ReadonlyVector2Like {\n    /**\n     * Returns the length of the vector. If you only need to compare vector lengths so the real length doesn't matter\n     * then consider using the faster [[getSquareLength]] method which omits the expensive square root calculation.\n     *\n     * @return The vector length.\n     */\n    getLength(): number;\n\n    /**\n     * Returns the squared length of the vector. In some cases (Like comparing vector lengths) it is not necessary to\n     * compare the real length, it is enough to compare the squared length. This is faster because it only does\n     * addition and multiplication without a square root. If you need the real vector length then use the\n     * [[getLength]] method instead.\n     *\n     * @return The squared vector length.\n     */\n    getSquareLength(): number;\n\n    /**\n     * Returns the distance between this vector and the specified one. If you only need to compare vector distances so\n     * the real distance doesn't matter then consider using the faster [[getSquareDistance]] method which omits the\n     * expensive square root calculation.\n     *\n     * @param v - The other vector.\n     * @return The distance between this vector and the specified one.\n     */\n    getDistance(v: ReadonlyVector2Like): number;\n\n    /**\n     * Returns the squared distance between this vector and the specified one. In some cases (Like comparing\n     * vector distances) it is not necessary to compare the real distance, it is enough to compare the squared\n     * distance. This is faster because it only does addition and multiplication without a square root. If you need\n     * the real vector distance then use the [[getDistance]] method instead.\n     *\n     * @param v - The other vector.\n     * @return The squared distance between the two vectors.\n     */\n    getSquareDistance(v: ReadonlyVector2Like): number;\n\n    /**\n     * Returns the shortest angle (positive or negative between -PI and PI) between this vector and the given one.\n     *\n     * @param vector - The other vector.\n     * @return The angle between the vectors.\n     */\n    getAngle(vector?: ReadonlyVector2Like): number;\n\n    /**\n     * Returns the dot product of this vector and the specified one.\n     *\n     * @param v - The other vector.\n     * @return The dot product.\n     */\n    dot(v: ReadonlyVector2Like): number;\n\n    /**\n     * Returns a human-readable string representation of the vector.\n     *\n     * @param maxFractionDigits - Optional number of maximum fraction digits to use in the string. Defaults to 5.\n     * @return The human-readable string representation of the vector.\n     */\n    toString(maxFractionDigits?: number): string;\n}\n\n/**\n * Vector with two floating point components.\n */\nexport class Vector2 implements ReadonlyVector2Like, Vector2Like {\n    /**\n     * Creates a new vector with all components set to 0.\n     */\n    public constructor();\n\n    /**\n     * Creates a new vector with the given component values.\n     *\n     * @param x - The initial X component value.\n     * @param y - The initial Y component value.\n     */\n    public constructor(x: number, y: number);\n\n    public constructor(\n        public x: number = 0,\n        public y: number = 0\n    ) {}\n\n    /** @inheritDoc */\n    public toString(): string {\n        return `[ ${this.x}, ${this.y} ]`;\n    }\n\n    /**\n     * Sets the vector component values.\n     *\n     * @param x - The X component value to set.\n     * @param y - The Y component value to set.\n     */\n    public setComponents(x: number, y: number): this {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    /**\n     * Sets the vector component values by copying them from the given vector.\n     *\n     * @param vector - The vector to copy the X and Y component values from.\n     */\n    public setVector(vector: ReadonlyVector2Like): this {\n        this.x = vector.x;\n        this.y = vector.y;\n        return this;\n    }\n\n    /** @inheritDoc */\n    public clone(): Vector2 {\n        return new Vector2(this.x, this.y);\n    }\n\n    /** @inheritDoc */\n    public getSquareLength(): number {\n        return this.x ** 2 + this.y ** 2;\n    }\n\n    /** @inheritDoc */\n    public getLength(): number {\n        return Math.sqrt(this.getSquareLength());\n    }\n\n    /** @inheritDoc */\n    public getSquareDistance(v: ReadonlyVector2Like): number {\n        return (this.x - v.x) ** 2 + (this.y - v.y) ** 2;\n    }\n\n    /** @inheritDoc */\n    public getDistance(v: ReadonlyVector2Like): number {\n        return Math.sqrt(this.getSquareDistance(v));\n    }\n\n    /** @inheritDoc */\n    public dot(v: ReadonlyVector2Like): number {\n        return this.x * v.x + this.y * v.y;\n    }\n\n    /**\n     * Negates this vector.\n     */\n    public negate(): this {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n\n    /**\n     * Resets all components of this vector to 0.\n     */\n    public reset(): this {\n        this.x = this.y = 0;\n        return this;\n    }\n\n    /**\n     * Translates the vector by the given deltas.\n     *\n     * @param x - The x delta.\n     * @param y - The y delta.\n     */\n    public translate(x: number, y: number): this {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n\n    /**\n     * Scales the vector by the given factors.\n     *\n     * @param sx - The x factor.\n     * @param sy - The y factor.\n     */\n    public scale(sx: number, sy: number = sx): this {\n        this.x *= sx;\n        this.y *= sy;\n        return this;\n    }\n\n    /**\n     * Adds the given vector to this vector.\n     *\n     * @param summand - The vector to add.\n     */\n    public add(summand: ReadonlyVector2Like): this {\n        this.x += summand.x;\n        this.y += summand.y;\n        return this;\n    }\n\n    /**\n     * Subtracts the given vector from this vector.\n     *\n     * @param subtrahend - The vector to subtract from this vector.\n     */\n    public sub(subtrahend: ReadonlyVector2Like): this {\n        this.x -= subtrahend.x;\n        this.y -= subtrahend.y;\n        return this;\n    }\n\n    /**\n     * Multiplies this vector with the specified matrix (In GLSL: `this = matrix * this`).\n     *\n     * @param matrix - The matrix to multiply this vector with.\n     */\n    public mul(arg: ReadonlyAffineTransform): this {\n        const x = this.x;\n        const y = this.y;\n        this.x = x * arg.m11 + y * arg.m21 + arg.dx;\n        this.y = x * arg.m12 + y * arg.m22 + arg.dy;\n        return this;\n    }\n\n    /**\n     * Multiplies this vector with the inverse of the specified matrix (In GLSL: `this = matrix / this`).\n     *\n     * @param matrix - The matrix to divide this vector by.\n     */\n    public div(arg: ReadonlyAffineTransform): this {\n        const b11 = arg.m11, b12 = arg.m12;\n        const b21 = arg.m21, b22 = arg.m22;\n        const x = this.x;\n        const y = this.y;\n        const d = b11 * b22 - b12 * b21;\n        const c11 = b22 / d;\n        const c12 = -b12 / d;\n        const c21 = -b21 / d;\n        const c22 = b11 / d;\n        const b31 = arg.dx, b32 = arg.dy;\n        this.x = x * c11 + y * c21 + (b21 * b32 - b31 * b22) / d;\n        this.y = x * c12 + y * c22 + (b31 * b12 - b11 * b32) / d;\n        return this;\n    }\n\n    /**\n     * Normalizes this vector to a length of 1.\n     */\n    public normalize(): this {\n        const len = this.getLength();\n        this.x /= len;\n        this.y /= len;\n        return this;\n    }\n\n    /**\n     * Returns the shortest angle (positive or negative between -PI and PI) between this vector and the given one.\n     *\n     * @param vector - The other vector. Angle to origin (0, 0) is returned if no other vector specified.\n     * @return The angle between the vectors. Measured in radians.\n     */\n    public getAngle(vector?: ReadonlyVector2Like): number {\n        let angle = Math.atan2(this.x, this.y);\n        if (vector) {\n            angle -= Math.atan2(vector.x, vector.y);\n        }\n        return angle;\n    }\n}\n","import { ControllerEventType } from \"./ControllerEventType\";\nimport { ControllerFamily } from \"./ControllerFamily\";\nimport { ControllerIntent } from \"./ControllerIntent\";\nimport { GamepadModel } from \"./GamepadModel\";\n\nconst controllerFamilySymbol = Symbol(\"controllerFamily\");\nconst intentsSymbol = Symbol(\"intent\");\nconst eventTypeSymbol = Symbol(\"eventType\");\nconst repeatSymbol = Symbol(\"repeat\");\n\nexport class ControllerEvent extends Object {\n    private [controllerFamilySymbol]: ControllerFamily;\n    private [intentsSymbol]: ControllerIntent;\n    private [eventTypeSymbol]: ControllerEventType;\n    private [repeatSymbol]: boolean;\n\n    constructor(\n        controllerFamily: ControllerFamily, eventType: ControllerEventType,\n        intents: ControllerIntent[], repeat: boolean = false\n    ) {\n        super();\n\n        this[controllerFamilySymbol] = controllerFamily;\n        this[intentsSymbol] = intents.reduce((prev, curr) => prev | curr);\n        this[eventTypeSymbol] = eventType;\n        this[repeatSymbol] = repeat;\n    }\n\n    get controllerFamily(): ControllerFamily {\n        return this[controllerFamilySymbol];\n    }\n\n    get eventType(): ControllerEventType {\n        return this[eventTypeSymbol];\n    }\n\n    get intents(): ControllerIntent {\n        return this[intentsSymbol];\n    }\n\n    get repeat(): boolean {\n        return this[repeatSymbol];\n    }\n\n    get isMenuLeft(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.MENU_LEFT) === ControllerIntent.MENU_LEFT;\n    }\n\n    get isMenuRight(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.MENU_RIGHT) === ControllerIntent.MENU_RIGHT;\n    }\n\n    get isMenuUp(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.MENU_UP) === ControllerIntent.MENU_UP;\n    }\n\n    get isMenuDown(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.MENU_DOWN) === ControllerIntent.MENU_DOWN;\n    }\n\n    get isPlayerMoveLeft(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_MOVE_LEFT) === ControllerIntent.PLAYER_MOVE_LEFT;\n    }\n\n    get isPlayerMoveRight(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_MOVE_RIGHT) === ControllerIntent.PLAYER_MOVE_RIGHT;\n    }\n\n    get isPlayerJump(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_JUMP) === ControllerIntent.PLAYER_JUMP;\n    }\n\n    get isPlayerDrop(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_DROP) === ControllerIntent.PLAYER_DROP;\n    }\n\n    get isPlayerEnterDoor(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_ENTER_DOOR) === ControllerIntent.PLAYER_ENTER_DOOR;\n    }\n\n    get isPlayerInteract(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_INTERACT) === ControllerIntent.PLAYER_INTERACT;\n    }\n\n    get isPlayerAction(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_ACTION) === ControllerIntent.PLAYER_ACTION;\n    }\n\n    get isPlayerRun(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_RUN) === ControllerIntent.PLAYER_RUN;\n    }\n\n    get isPlayerReload(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_RELOAD) === ControllerIntent.PLAYER_RELOAD;\n    }\n\n    get isPlayerDance1(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_DANCE_1) === ControllerIntent.PLAYER_DANCE_1;\n    }\n\n    get isPlayerDance2(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_DANCE_2) === ControllerIntent.PLAYER_DANCE_2;\n    }\n\n    get isPause(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PAUSE) === ControllerIntent.PAUSE;\n    }\n\n    get isConfirm(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.CONFIRM) === ControllerIntent.CONFIRM;\n    }\n\n    get isAbort(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.ABORT) === ControllerIntent.ABORT;\n    }\n}\n\nconst gamepadModelSymbol = Symbol(\"gamepadModel\");\n\nexport class GamepadControllerEvent extends ControllerEvent {\n    private [gamepadModelSymbol]: GamepadModel;\n    constructor(gamepadModel: GamepadModel, eventType: ControllerEventType, intents: ControllerIntent[], repeat: boolean = false) {\n        super(ControllerFamily.GAMEPAD, eventType, intents, repeat);\n        this[gamepadModelSymbol] = gamepadModel;\n    }\n    get gamepadModel(): GamepadModel {\n        return this[gamepadModelSymbol];\n    }\n}\n","export enum ControllerEventType {\n    UP = \"up\",\n    DOWN = \"down\",\n    PRESS = \"press\"\n}\n","/**\n * This enumeration is used to classify the various known input methods.\n */\nexport enum ControllerFamily {\n    KEYBOARD = \"keyboard\",\n    GAMEPAD = \"gamepad\"\n}\n\n/**\n * This enum consists of all supported button aseprite sheets\n */\nexport enum ControllerSpriteMap {\n    KEYBOARD = \"keyboard\",\n    XBOX = \"xbox\",\n    PLAYSTATION = \"playstation\"\n}\n\n/**\n * This enum consists of all available animation tags supported by the button aseprite sheets\n */\nexport enum ControllerAnimationTags {\n    CONFIRM = \"confirm\",\n    JUMP = \"jump\",\n    ACTION = \"action\",\n    INTERACT = \"interact\",\n    OPEN_DOOR = \"up\",\n    BACK = \"back\"\n}\n","/**\n * Enumeration of the different intents that may be emitted by a single button,\n * whereas a button might either be a physical key on a keyboard, a mapped axis\n * on a gamepad or a touch screen event.\n *\n * Right now, these events are stored in a bit mask to be extra efficient, …\n * …maybe that's not really necessary and should be changed to improve\n * readability at some point…\n */\nexport enum ControllerIntent {\n    /** Used for unknown / unmapped buttons. */\n    NONE = 0,\n\n    /** Player movement: left */\n    PLAYER_MOVE_LEFT = 0b0000_0000_0000_0000_0001,\n    /** Player movement: right */\n    PLAYER_MOVE_RIGHT = 0b0000_0000_0000_0000_0010,\n    /** Player movement: jump */\n    PLAYER_JUMP = 0b0000_0000_0000_0000_0100,\n    /** Player movement: DROP (or: duck/crouch) */\n    PLAYER_DROP = 0b0000_0000_0000_0000_1000,\n\n    /** Talk to NPCs, read signs etc */\n    PLAYER_INTERACT = 0b0000_0000_0000_0001_0000,\n\n    /** Action, throw stuff */\n    PLAYER_ACTION = 0b0000_0000_0000_0010_0000,\n\n    /** Dance move no. 1 */\n    PLAYER_DANCE_1 = 0b0000_0000_0000_0100_0000,\n\n    /** Dance move no. 2 */\n    PLAYER_DANCE_2 = 0b0000_0000_0000_1000_0000,\n\n    // Menu navigation\n    MENU_LEFT = 0b0000_0000_0001_0000_0000,\n    MENU_RIGHT = 0b0000_0000_0010_0000_0000,\n    MENU_UP = 0b0000_0000_0100_0000_0000,\n    MENU_DOWN = 0b0000_0000_1000_0000_0000,\n\n    /** The key usually known as \"enter\" or something alike. */\n    CONFIRM = 0b0000_0001_0000_0000_0000,\n\n    /** Go through doors */\n    PLAYER_ENTER_DOOR = 0b0000_0010_0000_0000_0000,\n\n    /** Pause/unpause. */\n    PAUSE = 0b0000_0100_0000_0000_0000,\n\n    /** Back / abort / get-me-the-hell-out-of-here. */\n    ABORT = 0b0000_1000_0000_0000_0000,\n\n    /** Run modifier */\n    PLAYER_RUN = 0b0001_0000_0000_0000_0000,\n\n    /** Reload modifier */\n    PLAYER_RELOAD = 0b0010_0000_0000_0000_0000,\n\n    UNUSED_2 = 0b0100_0000_0000_0000_0000,\n    UNUSED_3 = 0b1000_0000_0000_0000_0000,\n}\n","import { ControllerEvent } from \"./ControllerEvent\";\nimport { ControllerFamily, ControllerSpriteMap } from \"./ControllerFamily\";\nimport { GamepadStyle } from \"./GamepadStyle\";\nimport { Signal } from \"../util/Signal\";\nimport { ControllerIntent } from \"./ControllerIntent\";\n\n/** Symbol to identify the current/active controller family. */\nconst currentControllerFamilySymbol = Symbol(\"currentControllerFamily\");\n\n/** Symbol to identify the currently active intents. */\nconst currentActiveIntentsSymbol = Symbol(\"currentActiveIntentsSymbol\");\n\nexport class ControllerManager {\n    private static readonly INSTANCE = new ControllerManager();\n\n    public static getInstance(): ControllerManager {\n        return ControllerManager.INSTANCE;\n    }\n\n    public readonly onButtonDown = new Signal<ControllerEvent>();\n    public readonly onButtonUp = new Signal<ControllerEvent>();\n    public readonly onButtonPress = new Signal<ControllerEvent>();\n    public readonly onControllerFamilyChange = new Signal<ControllerFamily>();\n\n    public selectedGamepadStyle = GamepadStyle.XBOX;\n\n    public get currentActiveIntents(): ControllerIntent {\n        return this[currentActiveIntentsSymbol];\n    }\n\n    private [currentControllerFamilySymbol]: ControllerFamily;\n    private [currentActiveIntentsSymbol]: ControllerIntent;\n\n    private constructor(initialControllerFamily: ControllerFamily = ControllerFamily.KEYBOARD) {\n        this.currentControllerFamily = initialControllerFamily;\n\n        this.onButtonDown.connect(e => {\n            if (this.currentControllerFamily !== e.controllerFamily) {\n                this.currentControllerFamily = e.controllerFamily;\n            }\n            this[currentActiveIntentsSymbol] |= e.intents;\n        });\n\n        this.onButtonUp.connect(e => {\n            this[currentActiveIntentsSymbol] &= ~e.intents;\n        });\n    }\n\n    public set currentControllerFamily(controllerFamily: ControllerFamily) {\n        if (controllerFamily !== this[currentControllerFamilySymbol]) {\n            this[currentControllerFamilySymbol] = controllerFamily;\n            this.onControllerFamilyChange.emit(controllerFamily);\n        }\n    }\n\n    /**\n     * Returns the current (a.k.a. most recently used!) controller family.\n     * Can be used to determine which tooltips (gamepad buttons or keyboard indicators) to show.\n     */\n    public get currentControllerFamily(): ControllerFamily {\n        return this[currentControllerFamilySymbol];\n    }\n\n    public toggleSelectedGamepadStyle(): void {\n        this.selectedGamepadStyle = this.selectedGamepadStyle === GamepadStyle.XBOX ? GamepadStyle.PLAYSTATION : GamepadStyle.XBOX;\n    }\n\n    public get controllerSprite(): ControllerSpriteMap {\n        if (this.currentControllerFamily === ControllerFamily.GAMEPAD) {\n            switch (ControllerManager.getInstance().selectedGamepadStyle) {\n                case GamepadStyle.PLAYSTATION:\n                    return ControllerSpriteMap.PLAYSTATION;\n                case GamepadStyle.XBOX:\n                    return ControllerSpriteMap.XBOX;\n            }\n        }\n\n        // Fallback to Keyboard\n        return ControllerSpriteMap.KEYBOARD;\n    }\n}\n","import { ControllerManager } from \"./ControllerManager\";\nimport { ControllerIntent } from \"./ControllerIntent\";\nimport { ControllerEventType } from \"./ControllerEventType\";\nimport { GamepadControllerEvent } from \"./ControllerEvent\";\nimport { GamepadModel } from \"./GamepadModel\";\n\n/**\n * Game Pad Buttons\n */\nenum GamePadButtonId {\n    /** Button A / Cross*/\n    BUTTON_1 = 0,\n    /** Button B / Circle*/\n    BUTTON_2 = 1,\n    /** Button X / Square*/\n    BUTTON_3 = 2,\n    /** Button Y / Triangle */\n    BUTTON_4 = 3,\n    SHOULDER_TOP_LEFT = 4,\n    SHOULDER_TOP_RIGHT = 5,\n    SHOULDER_BOTTOM_LEFT = 6,\n    SHOULDER_BOTTOM_RIGHT = 7,\n    SELECT = 8,\n    START = 9,\n    STICK_BUTTON_LEFT = 10,\n    STICK_BUTTON_RIGHT = 11,\n    D_PAD_UP = 12,\n    D_PAD_DOWN = 13,\n    D_PAD_LEFT = 14,\n    D_PAD_RIGHT = 15,\n    VENDOR = 16\n}\n\nenum StickAxisId {\n    /** Left stick X axis */\n    LEFT_LEFT_RIGHT = 0,\n    /** Left stick Y axis */\n    LEFT_UP_DOWN = 1,\n    /** Right stick X axis */\n    RIGHT_LEFT_RIGHT = 2,\n    /** Right stick Y axis */\n    RIGHT_UP_DOWN = 3\n}\n\nconst axisMapping = new Map<number, {button1: number|undefined, button2: number|undefined}>();\naxisMapping.set(StickAxisId.LEFT_LEFT_RIGHT, { button1: GamePadButtonId.D_PAD_LEFT, button2: GamePadButtonId.D_PAD_RIGHT });\naxisMapping.set(StickAxisId.LEFT_UP_DOWN, { button1: GamePadButtonId.D_PAD_UP, button2: GamePadButtonId.D_PAD_DOWN });\n\nconst intentMappings = new Map<number, ControllerIntent[]>();\nintentMappings.set(GamePadButtonId.D_PAD_UP, [ControllerIntent.PLAYER_ENTER_DOOR, ControllerIntent.MENU_UP]);\nintentMappings.set(GamePadButtonId.D_PAD_DOWN, [ControllerIntent.PLAYER_DROP, ControllerIntent.MENU_DOWN]);\nintentMappings.set(GamePadButtonId.D_PAD_LEFT, [ControllerIntent.PLAYER_MOVE_LEFT, ControllerIntent.MENU_LEFT]);\nintentMappings.set(GamePadButtonId.D_PAD_RIGHT, [ControllerIntent.PLAYER_MOVE_RIGHT, ControllerIntent.MENU_RIGHT]);\nintentMappings.set(GamePadButtonId.BUTTON_1, [ControllerIntent.PLAYER_JUMP, ControllerIntent.CONFIRM]);\nintentMappings.set(GamePadButtonId.BUTTON_2, [ControllerIntent.ABORT]);\nintentMappings.set(GamePadButtonId.BUTTON_3, [ControllerIntent.PLAYER_RELOAD]);\nintentMappings.set(GamePadButtonId.BUTTON_4, [ControllerIntent.PLAYER_INTERACT]);\nintentMappings.set(GamePadButtonId.SHOULDER_TOP_LEFT, [ControllerIntent.PLAYER_DANCE_1, ControllerIntent.PLAYER_ACTION]);\nintentMappings.set(GamePadButtonId.SHOULDER_TOP_RIGHT, [ControllerIntent.PLAYER_DANCE_2, ControllerIntent.PLAYER_ACTION]);\nintentMappings.set(GamePadButtonId.START, [ControllerIntent.PAUSE]);\n\nclass GamepadButtonWrapper {\n    public readonly index: number;\n    private pressed: boolean;\n    private gamepad: GamepadWrapper;\n\n    constructor(index: number, wrapped: GamepadButton, gamepad: GamepadWrapper) {\n        this.index = index;\n        this.pressed = wrapped.pressed;\n        this.gamepad = gamepad;\n    }\n\n    public setPressed(pressed: boolean): void {\n        const controllerManager = ControllerManager.getInstance();\n        const oldPressed = this.pressed;\n        this.pressed = pressed;\n\n        if (oldPressed !== pressed) {\n            if (pressed) {\n                controllerManager.onButtonDown.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.DOWN,\n                        intentMappings.get(this.index) || [ControllerIntent.NONE]\n                    )\n                );\n            } else {\n                controllerManager.onButtonUp.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.UP,\n                        intentMappings.get(this.index) || [ControllerIntent.NONE]\n                    )\n                );\n            }\n        }\n    }\n\n}\n\nclass GamepadAxisWrapper {\n    /**\n     * Threshold to use to emulate virtual buttons.\n     * Values between 0.1 (slight touches of the axis trigger button presses)\n     * 0.9 (much force needed) can be used here.\n     *\n     * Avoid using 0.0 and 1.0 as they cannot be reached on some gamepads or\n     * might lead to button flibber flubber...\n     */\n    private threshold = 0.5;\n\n    public readonly index: number;\n    private value: number = 0.0;\n    private gamepad: GamepadWrapper;\n\n    constructor(index: number, gamepad: GamepadWrapper) {\n        this.index = index;\n        this.gamepad = gamepad;\n    }\n\n    public setValue(newValue: number): void {\n        const controllerManager = ControllerManager.getInstance();\n        const oldValue = this.value;\n        this.value = newValue;\n        let emulatedButtonId: number|undefined = undefined;\n\n        if (oldValue <= -this.threshold && newValue > -this.threshold) {\n            // Virtual button 1 released\n            emulatedButtonId = axisMapping.get(this.index)?.button1;\n\n            if (emulatedButtonId != null) {\n                controllerManager.onButtonUp.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.UP,\n                        intentMappings.get(emulatedButtonId) || [ControllerIntent.NONE]\n                    )\n                );\n            }\n        } else if (oldValue > -this.threshold && newValue <= -this.threshold) {\n            // Virtual button 1 pressed\n            emulatedButtonId = axisMapping.get(this.index)?.button1;\n\n            if (emulatedButtonId != null) {\n                controllerManager.onButtonDown.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.DOWN,\n                        intentMappings.get(emulatedButtonId) || [ControllerIntent.NONE]\n                    )\n                );\n            }\n        }\n\n        if (oldValue > this.threshold && newValue <= this.threshold) {\n            // Virtual button 2 released\n            emulatedButtonId = axisMapping.get(this.index)?.button2;\n\n            if (emulatedButtonId != null) {\n                controllerManager.onButtonUp.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.UP,\n                        intentMappings.get(emulatedButtonId) || [ControllerIntent.NONE]\n                    )\n                );\n            }\n        } else if (oldValue < this.threshold && newValue >= this.threshold) {\n            // Virtual button 2 pressed\n            emulatedButtonId = axisMapping.get(this.index)?.button2;\n\n            if (emulatedButtonId != null) {\n                controllerManager.onButtonDown.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.DOWN,\n                        intentMappings.get(emulatedButtonId) || [ControllerIntent.NONE]\n                    )\n                );\n            }\n        }\n    }\n}\n\n/**\n * Some obscure magic to make sure that gamepad buttons and axes are mapped onto unified controller\n * events.\n */\nclass GamepadWrapper {\n    private index: number;\n    private id: string;\n    private buttons: GamepadButtonWrapper[];\n    private axes: GamepadAxisWrapper[];\n    public gamepadModel: GamepadModel;\n    constructor(gamepad: Gamepad) {\n        this.index = gamepad.index;\n        this.id = gamepad.id;\n        this.gamepadModel = GamepadModel.fromString(this.id);\n        this.buttons = new Array(gamepad.buttons.length);\n\n        for (let i = 0; i < this.buttons.length; i++) {\n            this.buttons[i] = new GamepadButtonWrapper(i, gamepad.buttons[i], this);\n        }\n\n        this.axes = new Array(gamepad.axes.length);\n\n        for (let i = 0; i < this.axes.length; i++) {\n            this.axes[i] = new GamepadAxisWrapper(i, this);\n        }\n    }\n\n    public update(): void {\n        const gamepad = navigator.getGamepads()[this.index];\n\n        if (gamepad != null) {\n            this.buttons.forEach(button => button.setPressed(gamepad.buttons[button.index].pressed));\n            this.axes.forEach(axis => axis.setValue(gamepad.axes[axis.index]));\n        }\n    }\n\n    public toString(): string {\n        return `Gamepad (index: ${this.index}, id: ${this.id})`;\n    }\n}\n\nexport class GamepadInput {\n    private gamepads: Map<string, GamepadWrapper>;\n\n    constructor() {\n        this.gamepads = new Map();\n\n        window.addEventListener(\"gamepadconnected\", (e: any) => {\n            console.debug(\"Gamepad connected: \", e);\n            const gamepad = (e as GamepadEventInit).gamepad;\n\n            if (gamepad != null) {\n                this.gamepads.set(gamepad.id, new GamepadWrapper(gamepad));\n            }\n        });\n\n        window.addEventListener(\"gamepaddisconnected\", (e) => {\n            console.debug(\"Gamepad disconnected: \", e);\n            const gamepad = (e as any as GamepadEventInit).gamepad;\n\n            if (gamepad != null) {\n                this.gamepads.delete(gamepad.id);\n            }\n        });\n    }\n\n    public update(): void {\n        this.gamepads.forEach(gamepad => gamepad.update());\n    }\n\n}\n","// See https://gamepad-tester.com/controllers for a list of some possible controller IDs.\n\nimport { GamepadStyle } from \"./GamepadStyle\";\n\nconst typemap: Map<RegExp,GamepadStyle> = new Map();\n\n/* spell-checker: disable */\ntypemap.set(/^.*?[Xx][Ii][Nn][Pp][Uu][Tt].*$/, GamepadStyle.XBOX);\n// Vendor ID of Microsoft Corp.\ntypemap.set(/^.*045e.*$/, GamepadStyle.XBOX);\ntypemap.set(/^.*?[Ss]tadia\\ [Cc]ontroller.*$/, GamepadStyle.STADIA);\n// Anything with playstation in its name\ntypemap.set(/^.*?[Pp][Ll][Aa][Yy][Ss][Tt][Aa][Ii][Oo][Nn].*$/, GamepadStyle.XBOX);\n// Vendor ID of Sony Inc.\ntypemap.set(/^.*054c.*$/, GamepadStyle.PLAYSTATION);\n\n/**\n * Regular expression to extract vendor and product identifier.\n */\nconst productAndVendorMatcher = /^.*?[Vv]endor:?\\s*(?<vendorId>.{4}).*?[Pp]roduct:?\\s*(?<productId>.{4}).*?$/;\n/* spell-checker: enable */\n\nexport class GamepadModel {\n\n    constructor(public style: GamepadStyle, vendorId?: number|undefined, productId?: number|undefined) {\n    }\n\n    /**\n     * Parses a gamepad identifier string and returns an object that encapsulates\n     * @param str\n     *   Gamepad identifier string as reported by the Gamepad API.\n     */\n    public static fromString(str: string): GamepadModel {\n        for (const [key, value] of typemap) {\n            if (key.exec(str)) {\n                const productAndVendorMatch = productAndVendorMatcher.exec(str);\n                let vendorId: string | undefined;\n                let productId;\n                if (productAndVendorMatch !== null) {\n                    vendorId = productAndVendorMatch.groups?.vendorId;\n                    productId = productAndVendorMatch.groups?.productId;\n                }\n                return new GamepadModel(value, parseInt(vendorId || \"-1\", 16), parseInt(productId || \"-1\"));\n            }\n        }\n        // Nothing matches? Well,... that's bad luck...\n        return DEFAULT_GAMEPAD_MODEL;\n    }\n\n}\n\nexport const DEFAULT_GAMEPAD_MODEL: GamepadModel = new GamepadModel(GamepadStyle.UNKNOWN);\n","/**\n * Enumeration of the different gamepad styles.\n *\n * Mainly used to adjust button mappings to offer the best possible *expected* gaming\n * experience and to make sure that graphics are displayed in-game that match the\n * controller being used.\n */\nexport enum GamepadStyle {\n\n    /** Default gamepad type if nothing else matches. */\n    UNKNOWN = \"unknown\",\n\n    XBOX = \"xbox\",\n    PLAYSTATION = \"playstation\",\n    STADIA = \"stadia\"\n\n}\n","import { ControllerEvent } from \"./ControllerEvent\";\nimport { ControllerEventType } from \"./ControllerEventType\";\nimport { ControllerFamily } from \"./ControllerFamily\";\nimport { ControllerIntent } from \"./ControllerIntent\";\nimport { ControllerManager } from \"./ControllerManager\";\nimport { Signal } from \"../util/Signal\";\n\nconst preventDefaultKeyCodes: string[] = [\n    \"ArrowUp\", \"ArrowDown\", \"ArrowRight\", \"ArrowLeft\", \"Space\"\n];\n\nconst keyToIntentMappings = new Map<string, ControllerIntent[]>();\n\nkeyToIntentMappings.set(\"Space\", [ControllerIntent.PLAYER_JUMP]);\nkeyToIntentMappings.set(\"KeyW\", [ControllerIntent.PLAYER_ENTER_DOOR, ControllerIntent.MENU_UP]);\nkeyToIntentMappings.set(\"KeyA\", [ControllerIntent.PLAYER_MOVE_LEFT, ControllerIntent.MENU_LEFT]);\nkeyToIntentMappings.set(\"KeyS\", [ControllerIntent.PLAYER_DROP, ControllerIntent.MENU_DOWN]);\nkeyToIntentMappings.set(\"KeyD\", [ControllerIntent.PLAYER_MOVE_RIGHT, ControllerIntent.MENU_RIGHT]);\nkeyToIntentMappings.set(\"ArrowUp\", [ControllerIntent.PLAYER_ENTER_DOOR, ControllerIntent.MENU_UP]);\nkeyToIntentMappings.set(\"ArrowDown\", [ControllerIntent.PLAYER_DROP, ControllerIntent.MENU_DOWN]);\nkeyToIntentMappings.set(\"ArrowLeft\", [ControllerIntent.PLAYER_MOVE_LEFT, ControllerIntent.MENU_LEFT]);\nkeyToIntentMappings.set(\"ArrowRight\", [ControllerIntent.PLAYER_MOVE_RIGHT, ControllerIntent.MENU_RIGHT]);\nkeyToIntentMappings.set(\"Enter\", [ControllerIntent.PLAYER_INTERACT, ControllerIntent.CONFIRM]);\nkeyToIntentMappings.set(\"NumpadEnter\", [ControllerIntent.PLAYER_INTERACT, ControllerIntent.CONFIRM]);\nkeyToIntentMappings.set(\"Escape\", [ControllerIntent.ABORT, ControllerIntent.PAUSE]);\nkeyToIntentMappings.set(\"ShiftLeft\", [ControllerIntent.PLAYER_RUN]);\nkeyToIntentMappings.set(\"ShiftRight\", [ControllerIntent.PLAYER_RUN]);\nkeyToIntentMappings.set(\"KeyE\", [ControllerIntent.PLAYER_INTERACT, ControllerIntent.CONFIRM]);\nkeyToIntentMappings.set(\"KeyF\", [ControllerIntent.PLAYER_ACTION]);\nkeyToIntentMappings.set(\"KeyR\", [ControllerIntent.PLAYER_RELOAD]);\nkeyToIntentMappings.set(\"Digit1\", [ControllerIntent.PLAYER_DANCE_1]);\nkeyToIntentMappings.set(\"Digit2\", [ControllerIntent.PLAYER_DANCE_2]);\nkeyToIntentMappings.set(\"Numpad1\", [ControllerIntent.PLAYER_DANCE_1]);\nkeyToIntentMappings.set(\"Numpad2\", [ControllerIntent.PLAYER_DANCE_2]);\n\nexport class Keyboard {\n    public readonly onKeyDown = new Signal<KeyboardEvent>();\n    public readonly onKeyUp = new Signal<KeyboardEvent>();\n    public readonly onKeyPress = new Signal<KeyboardEvent>();\n    private readonly pressed = new Set<string>();\n    private readonly controllerManager = ControllerManager.getInstance();\n\n    public constructor() {\n        document.addEventListener(\"keypress\", event => this.handleKeyPress(event));\n        document.addEventListener(\"keydown\", event => this.handleKeyDown(event));\n        document.addEventListener(\"keyup\", event => this.handleKeyUp(event));\n    }\n\n    private handleKeyPress(event: KeyboardEvent): void {\n        this.onKeyPress.emit(event);\n\n        // Quick workaround to make sure, that modifier keys never trigger a game-related\n        // controller event. Especially necessary to make other non-game related actions\n        // possible. (Shift is used as a modifier key to enable running and is therefore\n        // excluded from the list below)\n        if (event.altKey || event.ctrlKey || event.metaKey) {\n            return;\n        }\n\n        this.controllerManager.onButtonPress.emit(\n            new ControllerEvent(\n                ControllerFamily.KEYBOARD, ControllerEventType.PRESS,\n                keyToIntentMappings.get(event.code) || [ControllerIntent.NONE], event.repeat\n            )\n        );\n    }\n\n    private handleKeyDown(event: KeyboardEvent): void {\n        if (preventDefaultKeyCodes.includes(event.code)) {\n            event.preventDefault();\n        }\n\n        if (!event.repeat) {\n            this.pressed.add(event.key);\n        }\n\n        this.onKeyDown.emit(event);\n\n        if (event.altKey || event.ctrlKey || event.metaKey) {\n            return;\n        }\n\n        this.controllerManager.onButtonDown.emit(\n            new ControllerEvent(\n                ControllerFamily.KEYBOARD, ControllerEventType.DOWN,\n                keyToIntentMappings.get(event.code) || [ControllerIntent.NONE], event.repeat\n            )\n        );\n    }\n\n    private handleKeyUp(event: KeyboardEvent): void {\n        if (!event.repeat) {\n            this.pressed.delete(event.key);\n        }\n\n        this.onKeyUp.emit(event);\n\n        if (event.altKey || event.ctrlKey || event.metaKey) {\n            return;\n        }\n\n        this.controllerManager.onButtonUp.emit(\n            new ControllerEvent(\n                ControllerFamily.KEYBOARD, ControllerEventType.UP,\n                keyToIntentMappings.get(event.code) || [ControllerIntent.NONE], event.repeat\n            )\n        );\n    }\n\n    public isPressed(key: string): boolean {\n        return this.pressed.has(key);\n    }\n}\n","import { Aseprite } from \"../assets/Aseprite\";\nimport { Game } from \"../Game\";\nimport { Rect } from \"../geom/Rect\";\nimport { Polygon2 } from \"../graphics/Polygon2\";\nimport { SceneNode, SceneNodeArgs, SceneNodeAspect } from \"./SceneNode\";\n\n/**\n * Constructor arguments for [[AsepriteNode]].\n */\nexport interface AsepriteNodeArgs extends SceneNodeArgs {\n    /** The Aseprite to display. */\n    aseprite: Aseprite;\n\n    /** Optional animation tag to draw. */\n    tag?: string;\n\n    /** Optional initial X mirroring of the sprite. */\n    mirrorX?: boolean;\n\n    /** Optional forced source bounds. If not set then bounds are read from the sprite. */\n    sourceBounds?: Rect;\n}\n\n/**\n * Scene node for displaying an [[Aseprite]].\n *\n * @param T - Optional owner game class.\n */\nexport class AsepriteNode<T extends Game = Game> extends SceneNode<T> {\n    /** The displayed aseprite. */\n    private aseprite: Aseprite;\n\n    /** The animation tag to draw. Null to draw whole animation. */\n    private tag: string | null;\n\n    /** Counter how often a tag was played. */\n    private timesTagPlayed = 0;\n\n    /** The current time index of the animation. */\n    private time = 0;\n\n    private mirrorX: boolean;\n    private tagPlayTime = 0;\n    private tagStartTime = 0;\n\n    /** Forcers source bounds. Null to read bounds from sprite. */\n    private sourceBounds: Rect | null;\n\n    /**\n     * Creates a new scene node displaying the given Aseprite.\n     */\n    public constructor({ aseprite, sourceBounds, ...args }: AsepriteNodeArgs) {\n        super({\n            ...args,\n            width: aseprite.width,\n            height: aseprite.height,\n        });\n        this.aseprite = aseprite;\n        this.tag = args.tag ?? null;\n        this.mirrorX = args.mirrorX ?? false;\n        this.sourceBounds = sourceBounds ?? null;\n    }\n\n    /** @inheritDoc */\n    protected updateBoundsPolygon(bounds: Polygon2): void {\n        if (this.sourceBounds != null) {\n            bounds.addRect(this.sourceBounds);\n        } else {\n            if (this.aseprite.hasTag(\"bounds\")) {\n                bounds.addRect(this.aseprite.getTaggedSourceBounds(\"bounds\", 0));\n            } else if (this.tag != null) {\n                bounds.addRect(this.aseprite.getTaggedSourceBounds(this.tag, this.time * 1000));\n            } else {\n                bounds.addRect(this.aseprite.getSourceBounds(this.time * 1000));\n            }\n        }\n    }\n\n    /**\n     * Returns the displayed Aseprite.\n     *\n     * @return The displayed Aseprite.\n     */\n    public getAseprite(): Aseprite {\n        return this.aseprite;\n    }\n\n    /**\n     * Sets the Aseprite.\n     *\n     * @param aseprite - The Aseprite to draw.\n     */\n    public setAseprite(aseprite: Aseprite): this {\n        if (aseprite !== this.aseprite) {\n            this.aseprite = aseprite;\n            this.resizeTo(aseprite.width, aseprite.height);\n            this.invalidate(SceneNodeAspect.RENDERING);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the current animation tag. Null if whole animation is displayed.\n     *\n     * @return The current animation tag or null for whole animation.\n     */\n    public getTag(): string | null {\n        return this.tag;\n    }\n\n    /**\n     * Sets the animation tag. Null to display whole animation.\n     *\n     * @param tag - The animation tag to set. Null to unset.\n     */\n    public setTag(tag: string | null): this {\n        if (tag !== this.tag) {\n            this.tag = tag;\n            this.invalidate(SceneNodeAspect.RENDERING);\n            if (this.tag) {\n                this.timesTagPlayed = 0;\n                this.tagPlayTime = this.aseprite.getAnimationDurationByTag(this.tag);\n                this.tagStartTime = 0;\n                this.time = 0;\n            }\n        }\n        return this;\n    }\n\n    public getTimesPlayed(tag: string | null): number {\n        if (tag != null && tag === this.tag) {\n            return this.timesTagPlayed;\n        }\n\n        return 0;\n    }\n\n    public setMirrorX(mirrorX: boolean): this {\n        if (mirrorX !== this.mirrorX) {\n            this.mirrorX = mirrorX;\n            this.invalidate(SceneNodeAspect.RENDERING);\n        }\n        return this;\n    }\n\n    public isMirrorX(): boolean {\n        return this.mirrorX;\n    }\n\n    /** @inheritDoc */\n    public update(dt: number, time: number) {\n        this.time += dt;\n    }\n\n    /** @inheritDoc */\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        if (this.mirrorX) {\n            ctx.translate(this.aseprite.width, 0);\n            ctx.scale(-1, 1);\n        }\n        if (this.tag != null) {\n            if (this.tagPlayTime > 0) {\n                // Calculate the times the tag was played since tagStartTime.\n                this.timesTagPlayed = Math.floor((50 + (this.time - this.tagStartTime) * 1000) / this.tagPlayTime);\n            }\n            this.aseprite.drawTag(ctx, this.tag, 0, 0, this.time * 1000);\n        } else {\n            this.aseprite.draw(ctx, 0, 0, this.time * 1000);\n        }\n        ctx.restore();\n    }\n}\n","import { AffineTransform, ReadonlyAffineTransform } from \"../graphics/AffineTransform\";\nimport { Game } from \"../Game\";\nimport { SceneNode } from \"./SceneNode\";\nimport { easeInOutQuad } from \"../util/easings\";\nimport { Animation } from \"./animations/Animation\";\nimport { Animator, AnimatorArgs } from \"./animations/Animator\";\nimport { CinematicBars } from \"./camera/CinematicBars\";\nimport { FadeToBlack as FadeToBlack } from \"./camera/FadeToBlack\";\nimport { ReadonlyVector2Like } from \"../graphics/Vector2\";\nimport { Rect } from \"../geom/Rect\";\nimport { clamp } from \"../util/math\";\nimport { Scene } from \"./Scene\";\n\n/** Camera target type. Can be a simple position object, a scene node or a function which returns a camera target. */\nexport type CameraTarget = ReadonlyVector2Like | SceneNode | (() => CameraTarget);\n\n/**\n * Helper function to get the actual position of a camera target which can be of various types.\n *\n * @param target - The camera target.\n * @return The camera target position.\n */\nfunction getCameraTargetPosition(target: CameraTarget): ReadonlyVector2Like {\n    if (target instanceof Function) {\n        return getCameraTargetPosition(target());\n    } else if (target instanceof SceneNode) {\n        return target.getCameraTarget();\n    } else {\n        return target;\n    }\n}\n\n/** Arguments for the focus method. */\nexport interface FocusArgs extends AnimatorArgs {\n    /** Set to true to follow the target after focus animation is done. Defaults to false. */\n    follow?: boolean;\n\n    /**\n     * The rotation angle to reach on end of animation. Measured in counter-clockwise RAD.\n     * Defaults to current camera rotation.\n     */\n    rotation?: number;\n\n    /** The scale factor to reach on end of animation. Defaults to current camera scale. */\n    scale?: number;\n}\n\n/**\n * Base camera implementation.\n */\nexport class Camera<T extends Game = Game> {\n        /** The current horizontal focus point of the camera within the scene. */\n    private x: number = 0;\n\n    /** The current vertical focus point of the camera within the scene. */\n    private y: number = 0;\n\n    /** The current camera scale. */\n    private zoom: number = 1;\n\n    /** The current camera rotation in anti-clockwise RAD. */\n    private rotation: number = 0;\n\n    /** The game this camera is connected to. */\n    private readonly game: T;\n\n    /**\n     * The camera target to follow (if any). When set then the camera automatically follows this given target. When null\n     * then camera position is not adjusted automatically.\n     */\n    private follow: CameraTarget | null = null;\n\n    /** Custom camera transformation added on top of the camera position (x and y coordinates). */\n    private readonly transformation = new AffineTransform();\n\n    /**\n     * The scene transformation of the camera. This combines the camera position (x and y) and its custom\n     * [[transformation]].\n     */\n    private readonly sceneTransformation = new AffineTransform();\n\n    /** Flag which indicates if [[sceneTransformation]] is valid or must be recalculated on next access. */\n    private sceneTransformationValid = false;\n\n    /** Array with currently active animations. Animations are automatically removed from the array when finished. */\n    private readonly animations: Animation<this>[] = [];\n\n    /** Control the cinematic bars of the camera. */\n    public readonly cinematicBars = new CinematicBars();\n\n    /** Controls the fading to black. */\n    public readonly fadeToBlack = new FadeToBlack();\n\n    /** The currently playing focus animation. Null if none. */\n    private focusAnimation: Animator<Camera> | null = null;\n\n    /**\n     * The current camera limits. Null if no limits. When set then the followed target position is corrected so\n     * visible rectangle of camera is within these limits.\n     */\n    private limits: Rect | null = null;\n\n    /**\n     * Creates a new standard camera for the given game. The camera position is initialized to look at the center\n     * of the game screen.\n     */\n    public constructor(scene: Scene<T, unknown>) {\n        this.game = scene.game;\n        this.x = this.game.width / 2;\n        this.y = this.game.height / 2;\n    }\n\n    /**\n     * Returns the width of the visible camera area.\n     *\n     * @return The camera width.\n     */\n    public getWidth() {\n        return this.game.width / this.zoom;\n    }\n\n    /**\n     * Returns the height of the visible camera area.\n     *\n     * @return The camera height.\n     */\n    public getHeight() {\n        return this.game.height / this.zoom;\n    }\n\n    /**\n     * Returns the current horizontal focus point of the camera.\n     *\n     * @return The camera X position.\n     */\n    public getX(): number {\n        return this.x;\n    }\n\n    /**\n     * Sets the horizontal focus point of the camera.\n     *\n     * @param x - The camera X position to set.\n     */\n    public setX(x: number): this {\n        if (x !== this.x) {\n            this.x = x;\n            this.invalidateSceneTransformation();\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the current vertical focus point of the camera.\n     *\n     * @return The camera Y position.\n     */\n    public getY(): number {\n        return this.y;\n    }\n\n    /**\n     * Sets the horizontal focus point of the camera.\n     *\n     * @param x - The camera Y position to set.\n     */\n    public setY(y: number): this {\n        if (y !== this.y) {\n            this.y = y;\n            this.invalidateSceneTransformation();\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Moves the camera focus point to the given coordinates.\n     *\n     * @param x - The camera X position to set.\n     * @param y - The camera Y position to set.\n     */\n    public moveTo(x: number, y: number): this {\n        if (x !== this.x || y !== this.y) {\n            this.x = x;\n            this.y = y;\n            this.invalidateSceneTransformation();\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Moves the camera focus point by the given delta.\n     *\n     * @param x - The horizontal delta.\n     * @param y - The vertical delta.\n     */\n    public moveBy(x: number, y: number): this {\n        if (x !== 0 || y !== 0) {\n            this.x += x;\n            this.y += y;\n            this.invalidateSceneTransformation();\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the left edge of the visible camera area.\n     *\n     * @return The left camera edge.\n     */\n    public getLeft(): number {\n        return this.x - this.getWidth() / 2;\n    }\n\n    /**\n     * Returns the right edge of the visible camera area.\n     *\n     * @return The right camera edge.\n     */\n    public getRight(): number {\n        return this.x + this.getWidth() / 2;\n    }\n\n    /**\n     * Returns the top edge of the visible camera area.\n     *\n     * @return The top camera edge.\n     */\n    public getTop(): number {\n        return this.y - this.getHeight() / 2;\n    }\n\n    /**\n     * Returns the bottom edge of the visible camera area.\n     *\n     * @return The bottom camera edge.\n     */\n    public getBottom(): number {\n        return this.y + this.getHeight() / 2;\n    }\n\n    /**\n     * Sets the camera zoom.\n     *\n     * @param zoom - The camera zoom to set.\n     */\n    public setZoom(zoom: number): this {\n        if (zoom !== this.zoom) {\n            this.zoom = zoom;\n            this.invalidateSceneTransformation();\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the current camera zoom.\n     *\n     * @return The current camera zoom.\n     */\n    public getZoom(): number {\n        return this.zoom;\n    }\n\n    /**\n     * Sets the camera rotation.\n     *\n     * @param scale - The camera rotation to set.\n     */\n    public setRotation(rotation: number): this {\n        if (rotation !== this.rotation) {\n            this.rotation = rotation;\n            this.invalidateSceneTransformation();\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the camera rotation.\n     *\n     * @return The current camera rotation.\n     */\n    public getRotation(): number {\n        return this.rotation;\n    }\n\n    /**\n     * Called when camera is changed and a redraw of the scene is needed.\n     */\n    private invalidate(): void {\n        // TODO Nothing to do here yet. Maybe inform the scene that it needs to redraw the canvas later.\n    }\n\n    /**\n     * Called when position or transformation of the camera has changed and scene transformation must be\n     * recalculated.\n     */\n    private invalidateSceneTransformation() {\n        this.sceneTransformationValid = false;\n    }\n\n    /**\n     * Transforms the camera with the given transformer. Scene and scene transformation is invalidated after\n     * calling the transformer.\n     *\n     * @param transformer - The transformer function used to modify the transformation matrix.\n     */\n    public transform(transformer: (transformation: AffineTransform) => void): this {\n        transformer(this.transformation);\n        this.invalidateSceneTransformation();\n        this.invalidate();\n        return this;\n    }\n\n    /**\n     * Returns the custom transformation of the camera which can be manipulated by the [[transform]] method. This\n     * transformation is applied on of the camera position which is controlled by the X/Y coordinates. So you\n     * can fancy rotations and scaling with it for example.\n     *\n     * @return The custom node transformation.\n     */\n    public getTransformation(): ReadonlyAffineTransform {\n        return this.transformation;\n    }\n\n    /**\n     * Returns the scene transformation which is the screen centering, the custom camera transformation and the\n     * camera position combined into one transformation matrix. The scene transformation is cached and automatically\n     * invalidated when camera position or transformation is changed.\n     *\n     * @return The scene transformation.\n     */\n    public getSceneTransformation(): ReadonlyAffineTransform {\n        if (!this.sceneTransformationValid) {\n            this.sceneTransformation.reset()\n                .translate(this.game.width / 2, this.game.height / 2)\n                .mul(this.transformation)\n                .scale(this.zoom)\n                .rotate(this.rotation)\n                .translate(-this.x, -this.y);\n            this.sceneTransformationValid = true;\n        }\n        return this.sceneTransformation;\n    }\n\n    /**\n     * Adds a new animation to the scene.\n     *\n     * @param animation - The animation to add.\n     */\n    public addAnimation(animation: Animation<this>): this {\n        this.animations.push(animation);\n        return this;\n    }\n\n    /**\n     * Runs the given animation and returns when animation is finished/canceled. Promise value is true if animation was\n     * finished and false if it was canceled.\n     *\n     * @param animation - The animation to add.\n     * @return True if animation was finished, false if it was canceled.\n     */\n    public runAnimation(animation: Animation<this>): Promise<boolean> {\n        this.addAnimation(animation);\n        return animation.getPromise();\n    }\n\n    /**\n     * Finishes all currently running animations.\n     */\n    public finishAnimations(): this {\n        for (const animation of this.animations) {\n            animation.finish();\n        }\n        return this;\n    }\n\n    /**\n     * Updates the animations and removes finished animations.\n     */\n    private updateAnimations(dt: number): void {\n        const animations = this.animations;\n        let numAnimations = animations.length;\n        let i = 0;\n        while (i < numAnimations) {\n            if (animations[i].update(this, dt)) {\n                animations.splice(i, 1);\n                numAnimations--;\n            } else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Checks if camera has running animations.\n     *\n     * @return True if camera has running animations, false if not.\n     */\n    public hasAnimations(): boolean {\n        return this.animations.length > 0;\n    }\n\n    /**\n     * Stops following the currently followed target and focuses the given target. When no animation duration is given\n     * then this happens instantly. Otherwise the camera smoothly transitions over to the target. When the follow flag\n     * is set then the target is followed after focusing it.\n     *\n     * It is allowed to change the focus while the animation is still running. The previous animation is then canceled\n     * and the new animation transitions from the current position over to the target.\n     *\n     * @param target - The target scene node to focus.\n     * @param args   - Optional focus arguments.\n     * @return True when focus was successfully set, false when the transition to the target was canceled by another\n     *         focus call.\n     */\n    public async focus(target: CameraTarget, args: FocusArgs = {}): Promise<boolean> {\n        // Cancel already running focus animation\n        this.cancelFocus();\n\n        // Unfollow currently followed target\n        this.follow = null;\n\n        const oldX = this.x;\n        const oldY = this.y;\n        const oldScale = this.zoom;\n        const newScale = args.scale ?? oldScale;\n        const oldRotation = this.rotation;\n        const newRotation = args.rotation ?? oldRotation;\n        const deltaScale = newScale - oldScale;\n        const deltaRotation = newRotation - oldRotation;\n        this.focusAnimation = new Animator<Camera>(\n            (camera, value) => {\n                const position = getCameraTargetPosition(target);\n                const newX = position.x;\n                const newY = position.y;\n                const deltaX = newX - oldX;\n                const deltaY = newY - oldY;\n                if (deltaX !== 0) {\n                    camera.x = oldX + deltaX * value;\n                }\n                if (deltaY !== 0) {\n                    camera.y = oldY + deltaY * value;\n                }\n                if (deltaRotation !== 0) {\n                    camera.rotation = oldRotation + deltaRotation * value;\n                }\n                if (deltaScale !== 0) {\n                    camera.zoom = oldScale + deltaScale * value;\n                }\n                this.invalidate();\n                this.invalidateSceneTransformation();\n            }, { easing: easeInOutQuad, ...args }\n        );\n        const finished = await this.runAnimation(this.focusAnimation);\n        if (finished) {\n            this.focusAnimation = null;\n            if (args.follow === true) {\n                this.follow = target;\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Returns true if camera is currently in a focus animation.\n     *\n     * @return True if focusing, false if not.\n     */\n    public isFocusing(): boolean {\n        return this.focusAnimation != null;\n    }\n\n    /**\n     * Cancels a currently running focus animation.\n     */\n    private cancelFocus(): this {\n        if (this.focusAnimation != null) {\n            this.focusAnimation.cancel();\n            this.focusAnimation = null;\n        }\n        return this;\n    }\n\n    /**\n     * Sets the target to follow. Null to stop following the current target.\n     *\n     * @param target - The target to follow or null to unset.\n     */\n    public setFollow(target: CameraTarget | null): this {\n        if (target !== this.follow) {\n            this.cancelFocus();\n            this.follow = target;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the target which the camera follows. Null if none.\n     *\n     * @return The camera target to follow. Null if none.\n     */\n    public getFollow(): CameraTarget | null {\n        return this.follow;\n    }\n\n    public isPointVisible(x: number, y: number, radius = 0): boolean {\n        return (\n            x >= this.getLeft() - radius\n            && y >= this.getTop() - radius\n            && x <= this.getRight() + radius\n            && y <= this.getBottom() + radius\n        );\n    }\n\n    /**\n     * Sets the camera bounds limits. This applies when following a target (not when focusing). The camera position\n     * is limited so the camera bounds are inside the limits.\n     *\n     * @param limits - The limits to set. Null to unset.\n     */\n    public setLimits(limits: Rect | null): this {\n        this.limits = limits;\n        return this;\n    }\n\n    /**\n     * Returns the current camera bounds limits.\n     *\n     * @return The current camera bounds limits.\n     */\n    public getLimits(): Rect | null {\n        return this.limits;\n    }\n\n    private limitX(x: number): number {\n        if (this.limits) {\n            return clamp(x, this.limits.getLeft() + this.getWidth() / 2, this.limits.getRight() - this.getWidth() / 2);\n        } else {\n            return x;\n        }\n    }\n\n    private limitY(y: number): number {\n        if (this.limits) {\n            return clamp(y, this.limits.getTop() + this.getHeight() / 2, this.limits.getBottom() - this.getHeight() / 2);\n        } else {\n            return y;\n        }\n    }\n\n    /**\n     * Updates the camera. Must be called every time the scene is updated.\n     *\n     * @param dt - The time delta since last update.\n     */\n    public update(dt: number): void {\n        this.updateAnimations(dt);\n        if (this.follow) {\n            const position = getCameraTargetPosition(this.follow);\n            this.moveTo(this.limitX(position.x), this.limitY(position.y));\n        }\n        this.cinematicBars.update(dt);\n        this.fadeToBlack.update(dt);\n    }\n\n    /**\n     * Draws this camera. The method can return a boolean which indicates if the scene is not finished yet and must be\n     * drawn continuously (for animations for example). The method can also return an optional function which is called\n     * after the child nodes are drawn so this can be used for post-drawing operations. This post-draw function then\n     * can again return an optional boolean which indicates that scene must be continuously draw itself.\n     *\n     * @param ctx    - The rendering context.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     * @return Optional boolean to indicate if scene must be redrawn continuously (Defaults to false) or a post-draw\n     *         function which is called after drawing the child nodes and which again can return a flag indicating\n     *         continuos redraw.\n     */\n    public draw(ctx: CanvasRenderingContext2D, width: number, height: number):\n            void | boolean | (() => void | boolean) {\n        ctx.save();\n        this.getSceneTransformation().transformCanvas(ctx);\n        return () => {\n            ctx.restore();\n            let result = this.cinematicBars.draw(ctx, width, height);\n            result = this.fadeToBlack.draw(ctx, width, height) || result;\n            return result;\n        };\n    }\n}\n","import { Game } from \"../Game\";\nimport { TextNode } from \"./TextNode\";\n\nexport class FpsCounterNode<T extends Game> extends TextNode<T> {\n    private frameCounter = 0;\n    private lastUpdate = 0;\n\n    public update(dt: number, time: number) {\n        super.update(dt, time);\n        if (this.lastUpdate + 1 < time) {\n            this.setText(`${this.frameCounter} FPS`);\n            this.lastUpdate = time;\n            this.frameCounter = 0;\n        }\n        this.frameCounter++;\n    }\n}\n","import { Game } from \"../Game\";\nimport { SceneNode, SceneNodeArgs } from \"./SceneNode\";\n\n/**\n * Constructor arguments for [[ImageNode]].\n */\nexport interface ImageNodeArgs extends SceneNodeArgs {\n    /** The image to be displayed by the image node. */\n    image: HTMLImageElement;\n}\n\n/**\n * Scene node for displaying an HTMLImageElement.\n *\n * @param T - Optional owner game class.\n */\nexport class ImageNode<T extends Game = Game> extends SceneNode<T> {\n    /** The image to display. */\n    private readonly image: HTMLImageElement;\n\n    /**\n     * Creates a new scene node displaying the given image.\n     */\n    public constructor({ image, ...args }: ImageNodeArgs) {\n        super({\n            width: image.width,\n            height: image.height,\n            ...args\n        });\n        this.image = image;\n    }\n\n    /**\n     * Returns the displayed image.\n     *\n     * @return The displayed image.\n     */\n    public getImage(): HTMLImageElement {\n        return this.image;\n    }\n\n    /** @inheritDoc */\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.drawImage(this.image, 0, 0);\n    }\n}\n","import { Game } from \"../Game\";\nimport { SceneNode, SceneNodeArgs, SceneNodeAspect } from \"./SceneNode\";\nimport { clamp } from \"../util/math\";\n\nconst DEFAULT_BACKGROUND_STYLE = \"#111\";\nconst DEFAULT_BORDER_STYLE = \"#222\";\nconst DEFAULT_PROGRESS_STYLE = \"#888\";\nconst DEFAULT_WIDTH = 200;\nconst DEFAULT_HEIGHT = 8;\n\n/**\n * Constructor arguments for [[ProgressBarNode]].\n */\nexport interface ProgressBarNodeArgs extends SceneNodeArgs {\n    backgroundStyle?: string;\n    borderStyle?: string\n    progressStyle?: string;\n}\n\n/**\n * Scene node for displaying a progress bar.\n *\n * @param T - Optional owner game class.\n */\nexport class ProgressBarNode<T extends Game = Game> extends SceneNode<T> {\n    private backgroundStyle: string;\n    private borderStyle: string;\n    private progressStyle: string;\n    private progress: number = 0;\n\n    /**\n     * Creates a new scene node displaying the given image.\n     */\n    public constructor({ backgroundStyle = DEFAULT_BACKGROUND_STYLE, borderStyle = DEFAULT_BORDER_STYLE,\n            progressStyle = DEFAULT_PROGRESS_STYLE, ...args }: ProgressBarNodeArgs = {}) {\n        super({\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT,\n            ...args\n        });\n        this.backgroundStyle = backgroundStyle;\n        this.borderStyle = borderStyle;\n        this.progressStyle = progressStyle;\n    }\n\n    public setProgress(progress: number): this {\n        progress = clamp(progress, 0, 1);\n        if (progress !== this.progress) {\n            this.progress = progress;\n            this.invalidate(SceneNodeAspect.RENDERING);\n        }\n        return this;\n    }\n\n    public getProgress(): number {\n        return this.progress;\n    }\n\n    /** @inheritDoc */\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n\n        const width = this.getWidth();\n        const height = this.getHeight();\n\n        // Draw background\n        ctx.fillStyle = this.backgroundStyle;\n        ctx.fillRect(0, 0, width, height);\n\n        // Draw progress bar\n        ctx.fillStyle = this.progressStyle;\n        ctx.fillRect(0, 0, width * this.progress, height);\n\n        // Draw border\n        ctx.save();\n        ctx.strokeStyle = this.borderStyle;\n        ctx.lineWidth = 2;\n        ctx.rect(0, 0, width, height);\n        ctx.clip();\n        ctx.stroke();\n        ctx.restore();\n\n        ctx.restore();\n    }\n}\n","import { Game } from \"../Game\";\nimport { SceneNode, PostDrawHints } from \"./SceneNode\";\nimport { Direction } from \"../geom/Direction\";\nimport { Scene } from \"./Scene\";\n\n/**\n * Function signature for updating the root node. This function is exposed to the scene through the constructor so\n * the scene can call it but no one else can by accident.\n */\nexport type UpdateRootNode = (dt: number, time: number) => number;\n\n/**\n * Function signature for drawing the root node.\n */\nexport type DrawRootNode = (ctx: CanvasRenderingContext2D, layer: number, width: number, height: number)\n    => PostDrawHints;\n\n/**\n * The root node of a scene.\n *\n * @param T - Optional owner game class.\n */\nexport class RootNode<T extends Game = Game> extends SceneNode<T> {\n    /**\n     * Creates a new root scene node for the given scene. Functions for updating and drawing the root node (and its\n     * child nodes) is exposed to the scene through the second parameter. Only the scene can use these exposed\n     * functions, no one else can by accident.\n     *\n     * @param scene - The scene this root node is meant for.\n     * @param expose - Callback for exposing the update/draw methods of the root node to the scene so the scene can\n     *                 call it without making the methods public.\n     */\n    public constructor(scene: Scene<T, unknown>, expose: (update: UpdateRootNode, draw: DrawRootNode) => void) {\n        super({ anchor: Direction.TOP_LEFT, childAnchor: Direction.TOP_LEFT });\n        this.setScene(scene);\n        expose(this.updateAll.bind(this), this.drawAllWithBounds.bind(this));\n    }\n\n    /**\n     * Draws this node and its child nodes recursively and then renders the node bounds when enabled.\n     *\n     * @param ctx    - The rendering context.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     * @return Hints which suggests further actions after drawing.\n     */\n    private drawAllWithBounds(ctx: CanvasRenderingContext2D, layer: number, width: number, height: number):\n            PostDrawHints {\n        const flags = this.drawAll(ctx, layer, width, height);\n        if ((flags & PostDrawHints.DRAW_BOUNDS) !== 0) {\n            this.drawBounds(ctx);\n        }\n        return flags;\n    }\n}\n","import { ControllerManager } from \"../input/ControllerManager\";\nimport { Game } from \"../Game\";\nimport { Keyboard } from \"../input/Keyboard\";\nimport { Scenes } from \"./Scenes\";\nimport { Transition } from \"./Transition\";\nimport { UpdateRootNode, DrawRootNode, RootNode } from \"./RootNode\";\nimport { SceneNode } from \"./SceneNode\";\nimport { Camera } from \"./Camera\";\nimport { createCanvas, getRenderingContext } from \"../util/graphics\";\nimport { Signal } from \"../util/Signal\";\nimport { ScenePointerMoveEvent } from \"./events/ScenePointerMoveEvent\";\nimport { ScenePointerDownEvent } from \"./events/ScenePointerDownEvent\";\n\n/**\n * Constructor type of a scene.\n *\n * @param T - The game type.\n * @param A - Optional scene argument type. A value of this type must be specified when setting or pushing a scene.\n *            Defaults to no argument (void type)\n */\nexport type SceneConstructor<T extends Game = Game, A = void> = new (game: T) => Scene<T, A>;\n\n/**\n * Abstract base class of a scene.\n *\n * @param T - The game type.\n * @param A - Optional scene argument type. A value of this type must be specified when setting or pushing a scene.\n *            Defaults to no argument (void type)\n */\nexport abstract class Scene<T extends Game = Game, A = void> {\n    public zIndex: number = 0;\n    public currentTransition: Transition | null = null;\n    public inTransition: Transition | null = null;\n    public outTransition: Transition | null = null;\n    public readonly rootNode: RootNode<T>;\n    private updateRootNode!: UpdateRootNode;\n    private drawRootNode!: DrawRootNode;\n    private usedLayers: number = 0;\n    private hiddenLayers: number = 0;\n    private lightLayers: number = 0;\n    private hudLayers: number = 0;\n    private backgroundStyle: string | null = null;\n\n    public readonly camera: Camera<T>;\n\n    public readonly onPointerMove = new Signal<ScenePointerMoveEvent<T, A>>(this.initPointerMove.bind(this));\n    public readonly onPointerDown = new Signal<ScenePointerDownEvent<T, A>>(this.initPointerDown.bind(this));\n\n    public constructor(public readonly game: T) {\n        this.rootNode = new RootNode(this, (update, draw) => {\n            this.updateRootNode = update;\n            this.drawRootNode = draw;\n        });\n        this.rootNode.resizeTo(this.game.width, this.game.height);\n        this.camera = new Camera(this);\n    }\n\n    public get keyboard(): Keyboard {\n        return this.game.keyboard;\n    }\n\n    public get input(): ControllerManager {\n        return ControllerManager.getInstance();\n    }\n\n    public get scenes(): Scenes<T> {\n        return this.game.scenes;\n    }\n\n    /**\n     * Shows the given layer when it was previously hidden.\n     *\n     * @param layer - The layer to show (0-31).\n     */\n    public showLayer(layer: number): this {\n        this.hiddenLayers &= ~(1 << layer);\n        return this;\n    }\n\n    /**\n     * Hides the given layer when it was previously shown.\n     *\n     * @param layer - The layer to hide (0-31).\n     */\n    public hideLayer(layer: number): this {\n        this.hiddenLayers |= 1 << layer;\n        return this;\n    }\n\n    /**\n     * Toggles the visibility of the given layer.\n     *\n     * @param layer   - The layer to toggle.\n     * @param visible - Forced visibility state.\n     */\n    public toggleLayer(layer: number, visible?: boolean): this {\n        if (visible ?? !this.isLayerShown(layer)) {\n            this.showLayer(layer);\n        } else {\n            this.hideLayer(layer);\n        }\n        return this;\n    }\n\n    /**\n     * Checks if given layer is hidden.\n     *\n     * @param layer - The layer to check (0-31).\n     * @return True if layer is hidden, false if not.\n     */\n    public isLayerHidden(layer: number): boolean {\n        return (this.hiddenLayers & (1 << layer)) !== 0;\n    }\n\n    /**\n     * Checks if given layer is shown.\n     *\n     * @param layer - The layer to check (0-31).\n     * @return True if layer is shown, false if not.\n     */\n    public isLayerShown(layer: number): boolean {\n        return (this.hiddenLayers & (1 << layer)) === 0;\n    }\n\n    /**\n     * Sets the layers which are handled as lighting layers. The nodes rendered in this layer are multiplied with the\n     * layers beneath them to achieve dynamic illumination.\n     *\n     * @param lightLayers - The light layers to set.\n     */\n    public setLightLayers(lightLayers: number[]): this {\n        this.lightLayers = lightLayers.reduce((layers, layer) => layers | (1 << layer), 0);\n        return this;\n    }\n\n    /**\n     * Returns the layers which are handled as lighting layers.\n     *\n     * @return The light layers.\n     */\n    public getLightLayers(): number[] {\n        const lightLayers: number[] = [];\n        for (let layer = 0; layer < 32; ++layer) {\n            if ((this.lightLayers & (1 << layer)) !== 0) {\n                lightLayers.push(layer);\n            }\n        }\n        return lightLayers;\n    }\n\n    /**\n     * Sets the layers which are not transformed by the camera. These layers can be used to display fixed information\n     * on the screen which is independent from the current camera settings.\n     *\n     * @param hudLayers - The hud layers to set.\n     */\n    public setHudLayers(hudLayers: number[]): this {\n        this.hudLayers = hudLayers.reduce((layers, layer) => layers | (1 << layer), 0);\n        return this;\n    }\n\n    /**\n     * Returns the HUD layers which are not transformed by the camera.\n     *\n     * @return The hud layers.\n     */\n    public getHudLayers(): number[] {\n        const hudLayers: number[] = [];\n        for (let layer = 0; layer < 32; ++layer) {\n            if ((this.hudLayers & (1 << layer)) !== 0) {\n                hudLayers.push(layer);\n            }\n        }\n        return hudLayers;\n    }\n\n    /**\n     * Returns the scene node with the given id.\n     *\n     * @param id - The ID to look for.\n     * @return The matching scene node or null if none.\n     */\n    public getNodeById(id: string): SceneNode<T> | null {\n        return this.rootNode.getDescendantById(id);\n    }\n\n    /**\n     * Returns the background style of this scene. This style is used to fill the background of the scene when set.\n     *\n     * @return The scene background style.\n     */\n    public getBackgroundStyle(): string | null {\n        return this.backgroundStyle;\n    }\n\n    /**\n     * Sets the background style of this scene. This style is used to fill the background of the scene when set.\n     *\n     * @param backgroundStyle - The background style to set.\n     */\n    public setBackgroundStyle(backgroundStyle: string | null): this {\n        this.backgroundStyle = backgroundStyle;\n        return this;\n    }\n\n    private initPointerMove(signal: Signal<ScenePointerMoveEvent<T, A>>) {\n        const listener = (event: PointerEvent) => {\n            signal.emit(new ScenePointerMoveEvent(this, event));\n        };\n        this.game.canvas.addEventListener(\"pointermove\", listener);\n        return () => {\n            this.game.canvas.removeEventListener(\"pointermove\", listener);\n        };\n    }\n\n    private initPointerDown(signal: Signal<ScenePointerDownEvent<T, A>>) {\n        const listener = (event: PointerEvent) => {\n            signal.emit(new ScenePointerDownEvent(this, event));\n        };\n        this.game.canvas.addEventListener(\"pointerdown\", listener);\n        return () => {\n            this.game.canvas.removeEventListener(\"pointerdown\", listener);\n        };\n    }\n\n    /**\n     * Checks if this scene is active.\n     *\n     * @return True if scene is active, false it not.\n     */\n    public isActive(): boolean {\n        return this.scenes.activeScene === this;\n    }\n\n    /**\n     * Called when the scene is pushed onto the stack and before any transitions.\n     *\n     * @param args - The scene arguments (if any).\n     */\n    public setup(args: A): Promise<void> | void {}\n\n    /**\n     * Called when the scene becomes the top scene on the stack and after the on-stage transition is complete.\n     */\n    public activate(): Promise<void> | void {}\n\n    /**\n     * Called when the scene is no longer the top scene on the stack and before the off-stage transition begins.\n     */\n    public deactivate(): Promise<void> | void {}\n\n    /**\n     * Called when the scene is popped from the scene stack, after any transitions are complete.\n     */\n    public cleanup(): Promise<void> | void {}\n\n    /**\n     * Updates the scene. Scenes can overwrite this method to do its own drawing but when you are going to use the\n     * scene graph then make sure to call the super method in your overwritten method or the scene graph will not be\n     * updated.\n     */\n    public update(dt: number, time: number): void {\n        this.usedLayers = this.updateRootNode(dt, time);\n        this.camera.update(dt);\n    }\n\n    /**\n     * Draws the scene. Scenes can overwrite this method to do its own drawing but when you are going to use the\n     * scene graph then make sure to call the super method in your overwritten method or the scene graph will not be\n     * rendered.\n     *\n     * @param ctx    - The rendering context.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     */\n    public draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        if (this.backgroundStyle != null) {\n            ctx.save();\n            ctx.fillStyle = this.backgroundStyle;\n            ctx.fillRect(0, 0, width, height);\n            ctx.restore();\n        }\n        ctx.save();\n        const reverseCameraTransformation = this.camera.getSceneTransformation().clone().invert();\n        const postDraw = this.camera.draw(ctx, width, height);\n        let layer = 1;\n        let usedLayers = this.usedLayers & ~this.hiddenLayers;\n        let debugLight = true;\n        while (usedLayers !== 0) {\n            if ((usedLayers & 1) === 1) {\n                const light = (this.lightLayers & layer) !== 0;\n                const hud = (this.hudLayers & layer) !== 0;\n                if (light) {\n                    ctx.save();\n                    const canvas = createCanvas(width, height);\n                    const tmpCtx = getRenderingContext(canvas, \"2d\");\n                    tmpCtx.fillStyle = \"#000\";\n                    tmpCtx.fillRect(0, 0, width * 200, height * 200);\n                    this.camera.getSceneTransformation().setCanvasTransform(tmpCtx);\n                    tmpCtx.globalCompositeOperation = \"screen\";\n                    this.drawRootNode(tmpCtx, layer, width, height);\n                    if (!debugLight) {\n                        ctx.globalCompositeOperation = \"multiply\";\n                    }\n                    reverseCameraTransformation.transformCanvas(ctx);\n                    ctx.drawImage(canvas, 0, 0);\n                    ctx.restore();\n                } else {\n                    if (hud) {\n                        ctx.save();\n                        reverseCameraTransformation.transformCanvas(ctx);\n                    }\n                    this.drawRootNode(ctx, layer, width, height);\n                    debugLight = false;\n                    if (hud) {\n                        ctx.restore();\n                    }\n                }\n            }\n            usedLayers >>>= 1;\n            layer <<= 1;\n        }\n        if (postDraw != null) {\n            if (postDraw === true) {\n                // TODO\n            } else if (postDraw !== false) {\n                postDraw();\n            }\n        }\n        ctx.restore();\n    }\n}\n","import { Scene } from \"./Scene\";\nimport { Game } from \"../Game\";\nimport { Direction } from \"../geom/Direction\";\nimport { AffineTransform, ReadonlyAffineTransform } from \"../graphics/AffineTransform\";\nimport { Polygon2 } from \"../graphics/Polygon2\";\nimport { Vector2, ReadonlyVector2, ReadonlyVector2Like } from \"../graphics/Vector2\";\nimport { Bounds2 } from \"../graphics/Bounds2\";\nimport { Animation } from \"./animations/Animation\";\nimport { Size2 } from \"../graphics/Size2\";\nimport { Constructor } from \"../util/types\";\nimport { TiledObject } from \"../tiled/TiledObject\";\n\n/**\n * Hints which are returned to the scene after drawing the scene graph. These hints can suggest further actions after\n * drawing like requesting continuous drawing because of running animations.\n */\nexport enum PostDrawHints {\n    /** As long as this hint is present the scene must be continuously redrawn to keep animations running. */\n    CONTINUE_DRAWING = 1,\n\n    /**\n     * When this flag is set then at least one node has the showBounds flag set to true. The root node already\n     * handles this flag by drawing the bounds when this hint is present.\n     */\n    DRAW_BOUNDS = 2\n}\n\n/**\n * The various aspects of a scene node which can be invalidated to force a re-rendering or recalculation of\n * positions, relayouting and so on.\n */\nexport enum SceneNodeAspect {\n    /** Node must be re-rendered. */\n    RENDERING = 1,\n\n    /** Scene transformation must be recalculated. */\n    SCENE_TRANSFORMATION = 2,\n\n    /** Scene position must be recalculated. */\n    SCENE_POSITION = 4,\n\n    /** The bounds (in local coordinate system) polygon must be recalculated. */\n    BOUNDS = 8,\n\n    /** The scene bounds (in scene coordinate system) polygon must be recalculated. */\n    SCENE_BOUNDS = 16,\n\n    /** Camera target position must be recalculated. */\n    CAMERA_TARGET = 32\n}\n\n/**\n * Constructor arguments for [[SceneNode]].\n *\n * @param T - Optional owner game class.\n */\nexport interface SceneNodeArgs {\n    /** Optional initial scene node ID. */\n    id?: string | null;\n\n    /** Optional initial horizontal position of the scene node. Defaults to 0. */\n    x?: number;\n\n    /** Optional initial vertical position of the scene node. Defaults to 0. */\n    y?: number;\n\n    /** Optional initial width of the scene node. Defaults to 0. */\n    width?: number;\n\n    /** Optional initial height of the scene node. Defaults to 0. */\n    height?: number;\n\n    /**\n     * Optional initial node anchor. Defaults to CENTER which means the X/Y coordinates of the node define where\n     * the center of this scene node is displayed relative to the parent node.\n     */\n    anchor?: Direction;\n\n    /**\n     * Optional initial child node anchor. Defaults to CENTER which means the child nodes are positioned relative to\n     * the center of this scene node.\n     */\n    childAnchor?: Direction;\n\n    /**\n     * Optional initial node opacity. Must be 0 or higher. 0.0 means fully transparent. Defaults to 1.0 which means\n     * fully opaque. Can be larger than 1.0 to compensate transparency of its parent.\n     */\n    opacity?: number;\n\n    /**\n     * Optional initial layer (0-31) to put the node onto. Defaults to null which means inheriting layer from parent.\n     */\n    layer?: number | null;\n\n    /** Optional initial showBounds flag. Set to true to show bounds around the node for debugging purposes. */\n    showBounds?: boolean;\n\n    /** Optional initial hidden flag. Set to true to hide the node. */\n    hidden?: boolean;\n\n    /** Optional parameter used to identify the connected TiledObject. */\n    tiledObject?: TiledObject;\n\n    /**\n     * Optional initial collision mask. Only objects with the same bits set can collide with each other.\n     * Defaults to 0 (No collision detection)\n     */\n    collisionMask?: number;\n\n    /**\n     * Optional camera target offset. When camera follows this node then it focuses the scene position plus this\n     * offset.\n     */\n    cameraTargetOffset?: ReadonlyVector2Like;\n}\n\n/**\n * Base scene node. Is used as base class for more specialized scene nodes but can also be used standalone as parent\n * node for other nodes (similar to a DIV element in HTML for example).\n */\nexport class SceneNode<T extends Game = Game> {\n    /** The parent node. Null if none. */\n    private parent: SceneNode<T> | null = null;\n\n    /** The next sibling node. Null if none. */\n    private nextSibling: SceneNode<T> | null = null;\n\n    /** The previous sibling node. Null if none. */\n    private previousSibling: SceneNode<T> | null = null;\n\n    /** The first child node. Null if none. */\n    private firstChild: SceneNode<T> | null = null;\n\n    /** The last child node. Null if none. */\n    private lastChild: SceneNode<T> | null = null;\n\n    /** The scene this node is connected to. Null if none. */\n    private scene: Scene<T, unknown> | null = null;\n\n    /** The ID of the node. Null if none. */\n    private id: string | null;\n\n    /** The node position relative to the parent node. */\n    private position = new Vector2();\n\n    /** The size of the scene node. */\n    private size = new Size2();\n\n    /** The node position within the scene. */\n    private scenePosition = new Vector2();\n\n    /** The position the camera focuses when following this node. */\n    private cameraTarget = new Vector2();\n\n    /**\n     * The anchor defining the origin of this scene node. When set to TOP_LEFT for example then the X/Y coordinates of\n     * this node define where to display the upper left corner of it. When set to CENTER then the node is centered at\n     * its X/Y coordinates.\n     */\n    private anchor: Direction;\n\n    /**\n     * The camera target offset. When the camera follows this node then it focuses the scene position plus this offset.\n     */\n    private readonly cameraTargetOffset: Vector2 = new Vector2();\n\n    /**\n     * The anchor of the local coordinate system. When set to CENTER for example then the X/Y coordinates or child\n     * nodes are relative to the center of this node.\n     */\n    private childAnchor: Direction;\n\n    /**\n     * The bounds polygon in local coordinate system. This is updated on demand and automatically invalidated when\n     * node size changes. Node has to call [[invalidate]] with BOUNDS argument manually when something else influences\n     * the bounds.\n     */\n    private readonly boundsPolygon: Polygon2 = new Polygon2();\n\n    /**\n     * The bounds polygon in scene coordinates. This is updated on demand and automatically invalidated when node\n     * size or scene transformation changes. Node has to call [[invalidate]] with the BOUNDS argument manually when\n     * something else influences the bounds.\n     */\n    private readonly sceneBoundsPolygon: Polygon2 = new Polygon2();\n\n    /**\n     * The transformation matrix of this node. This transformation is applied to the node before moving the node to\n     * its position (X/Y coordinates). So in simple cases this transformation is not needed at all and its up to you\n     * if you want to use the coordinates and/or the transformation matrix.\n     */\n    private readonly transformation = new AffineTransform();\n\n    /**\n     * The transformation matrix combining the nodes transformation with all the parent transformations. This is\n     * calculated on-the-fly when a scene node is updated.\n     */\n    private readonly sceneTransformation = new AffineTransform();\n\n    /** Array with currently active animations. Animations are automatically removed from the array when finished.*/\n    private readonly animations: Animation<this>[] = [];\n\n    /**\n     * The current opacity of the node. 0.0 means fully transparent and 1.0 means fully opaque. Can be larger\n     * than 1.0 to compensate transparency of its parent.\n     */\n    private opacity: number;\n\n    /** Set to true to show bounds. Useful for debugging. */\n    private showBounds: boolean;\n\n    /**\n     * The layer this node is drawn on. Internal representation is stored in `2^n` while setter and getter works\n     * with `n` instead. This is because the layering system internally works with fast bit masks. Can be set to\n     * null to inherit layer from parent.\n     */\n    private layer: number | null;\n\n    /** True if node is hidden, false if not. A hidden node also hides all its child nodes. */\n    private hidden: boolean;\n\n    /**\n     * The aspects of the scene node (like rendering, scene transformation, ...) which are currently valid.\n     * Used to automatically update the corresponding state of the scene node on the fly.\n     */\n    private valid: number = 0;\n\n    /**\n     * Collision mask. Only objects with the same bits set can collide with each other.\n     * Defaults to 0 (No collision detection)\n     */\n    protected collisionMask: number = 0;\n\n    /** List of nodes this node is currently colliding with. */\n    protected collidingWith: SceneNode[] = [];\n\n    /**\n     * Creates a new scene node with the given initial settings.\n     */\n    public constructor({ id = null, x = 0, y = 0, width = 0, height = 0, anchor = Direction.CENTER,\n            childAnchor = Direction.CENTER, opacity = 1, showBounds = false, layer = null, hidden = false,\n            collisionMask = 0, cameraTargetOffset }: SceneNodeArgs = {}) {\n        this.id = id;\n        this.position.setComponents(x, y);\n        this.size.setDimensions(width, height);\n        this.opacity = opacity;\n        this.anchor = anchor;\n        this.childAnchor = childAnchor;\n        this.showBounds = showBounds;\n        this.layer = layer == null ? null : (1 << layer);\n        this.hidden = hidden;\n        this.collisionMask = collisionMask;\n        if (cameraTargetOffset != null) {\n            this.cameraTargetOffset.setVector(cameraTargetOffset);\n        }\n    }\n\n    /**\n     * Returns the node ID.\n     *\n     * @return The ID of the node or null if none.\n     */\n    public getId(): string | null {\n        return this.id;\n    }\n\n    /**\n     * Sets (or removes) the node ID.\n     *\n     * @param id - The id to set or null to unset.\n     */\n    public setId(id: string | null): this {\n        this.id = id;\n        return this;\n    }\n\n    /**\n     * Returns the X position of the node relative to the parent node.\n     *\n     * @return The X position.\n     */\n    public getX(): number {\n        return this.position.x;\n    }\n\n    public get x(): number {\n        return this.position.x;\n    }\n\n    public set x(x: number) {\n        this.setX(x);\n    }\n\n    /**\n     * Sets the horizontal position relative to the parent node.\n     *\n     * @param x - The horizontal position to set.\n     */\n    public setX(x: number): this {\n        if (x !== this.position.x) {\n            this.position.x = x;\n            this.invalidate(SceneNodeAspect.SCENE_POSITION);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the Y position of the node relative the parent node.\n     *\n     * @return The Y position.\n     */\n    public getY(): number {\n        return this.position.y;\n    }\n\n    public get y(): number {\n        return this.position.y;\n    }\n\n    public set y(y: number) {\n        this.setY(y);\n    }\n\n    /**\n     * Sets the vertical position relative to the parent node.\n     *\n     * @param y - The vertical position to set.\n     */\n    public setY(y: number): this {\n        if (y !== this.position.y) {\n            this.position.y = y;\n            this.invalidate(SceneNodeAspect.SCENE_POSITION);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the node position relative to its parent.\n     *\n     * @return The node position relative to its parent.\n     */\n    public getPosition(): ReadonlyVector2 {\n        return this.position;\n    }\n\n    /**\n     * Returns the node position in the scene.\n     *\n     * @return The node position in the scene.\n     */\n    public getScenePosition(): ReadonlyVector2 {\n        if ((this.valid & SceneNodeAspect.SCENE_POSITION) === 0) {\n            this.scenePosition.setComponents(this.x, this.y);\n            if (this.parent != null) {\n                this.scenePosition.mul(this.parent.getSceneTransformation());\n                this.scenePosition.translate(\n                    (Direction.getX(this.parent.childAnchor) + 1) / 2 * this.parent.width,\n                    (Direction.getY(this.parent.childAnchor) + 1) / 2 * this.parent.height\n                );\n            }\n            this.valid |= SceneNodeAspect.SCENE_POSITION;\n        }\n        return this.scenePosition;\n    }\n\n    /**\n     * Returns the camera target point. This is the same as the scene position but uses the camera anchor instead of\n     * the normal node anchor.\n     *\n     * @return The camera target position.\n     */\n    public getCameraTarget(): ReadonlyVector2 {\n        if ((this.valid & SceneNodeAspect.CAMERA_TARGET) === 0) {\n            this.cameraTarget.setVector(this.getScenePosition()).add(this.cameraTargetOffset);\n            this.valid |= SceneNodeAspect.CAMERA_TARGET;\n        }\n        return this.cameraTarget;\n    }\n\n    /**\n     * Invalidates the given scene node aspect. Depending on the aspect other aspects of this node, its parent node\n     * or its child nodes are also invalidated.\n     *\n     * @param aspect - The aspect to invalidate. Actually it's a bitmap so multiple aspects can be specified by\n     *                 ORing them. Defaults to RENDERING as this is the most invalidated aspect of a scene node.\n     */\n    public invalidate(aspect: SceneNodeAspect = SceneNodeAspect.RENDERING): this {\n        let childAspects = 0;\n\n        // When bounds are invalidated then scene bounds and rendering and scene positions of children must also be\n        // invalidated\n        if ((aspect & SceneNodeAspect.BOUNDS) !== 0) {\n            aspect |= SceneNodeAspect.SCENE_BOUNDS;\n            aspect |= SceneNodeAspect.RENDERING;\n            childAspects |= SceneNodeAspect.SCENE_POSITION;\n        }\n\n        // When scene position is invalidated then scene transformation must also be invalidated\n        if ((aspect & SceneNodeAspect.SCENE_POSITION) !== 0) {\n            aspect |= SceneNodeAspect.SCENE_TRANSFORMATION;\n            aspect |= SceneNodeAspect.CAMERA_TARGET;\n        }\n\n        // When scene transformation is invalidated then scene bounds and rendering and scene positions of children\n        // must also be invalidated.\n        if ((aspect & SceneNodeAspect.SCENE_TRANSFORMATION) !== 0) {\n            aspect |= SceneNodeAspect.SCENE_BOUNDS;\n            aspect |= SceneNodeAspect.RENDERING;\n            childAspects |= SceneNodeAspect.SCENE_POSITION;\n        }\n\n        if ((aspect & this.valid) !== 0) {\n            this.valid &= ~aspect;\n\n            // Invalidate corresponding child aspects if needed\n            if (childAspects !== 0) {\n                this.forEachChild(child => child.invalidate(childAspects));\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Checks if given aspect of the scene node is valid. This method is most likely only needed in unit tests.\n     * The application usually does not need to care about invalidation because the various aspects are automatically\n     * validated again on-demand.\n     *\n     * @param aspect - The aspect to check. Actually it's a bitmap so multiple aspects can be specified by ORing them.\n     * @return True if aspect is valid (Or all specified aspects are valid), false if not.\n     */\n    public isValid(aspect: SceneNodeAspect): boolean {\n        return (this.valid & aspect) === aspect;\n    }\n\n    /**\n     * Moves the node by the given deltas.\n     *\n     * @param x - The horizontal delta to move the node by.\n     * @param y - The vertical delta to move the node by.\n     */\n    public moveBy(x: number, y: number): this {\n        if (x !== 0 || y !== 0) {\n            this.position.x += x;\n            this.position.y += y;\n            this.invalidate(SceneNodeAspect.SCENE_POSITION);\n        }\n        return this;\n    }\n\n    /**\n     * Moves the node to the given position relative to its parent node.\n     *\n     * @param x - The horizontal position to move to.\n     * @param y - The vertical position to move to.\n     */\n    public moveTo(x: number, y: number): this {\n        if (x !== this.position.x || y !== this.position.y) {\n            this.position.x = x;\n            this.position.y = y;\n            this.invalidate(SceneNodeAspect.SCENE_POSITION);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the width of the node.\n     *\n     * @return The node width.\n     */\n    public getWidth(): number {\n        return this.size.width;\n    }\n\n    public get width(): number {\n        return this.size.width;\n    }\n\n    public set width(width: number) {\n        this.setHeight(width);\n    }\n\n    /**\n     * Sets the width of the node.\n     *\n     * @param width - The width to set.\n     */\n    public setWidth(width: number): this {\n        if (width !== this.size.width) {\n            this.size.width = width;\n            this.invalidate(SceneNodeAspect.BOUNDS);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the height of the node.\n     *\n     * @return The node width.\n     */\n    public getHeight(): number {\n        return this.size.height;\n    }\n\n    public get height(): number {\n        return this.size.height;\n    }\n\n    public set height(height: number) {\n        this.setHeight(height);\n    }\n\n    /**\n     * Sets the height of the node.\n     *\n     * @param height - The height to set.\n     */\n    public setHeight(height: number): this {\n        if (height !== this.size.height) {\n            this.size.height = height;\n            this.invalidate(SceneNodeAspect.BOUNDS);\n        }\n        return this;\n    }\n\n    /**\n     * Get the left edge of the scene node.\n     *\n     * @return The left edge of the scene node.\n     */\n    public getLeft(): number {\n        if (Direction.isLeft(this.anchor)) {\n            return this.position.x;\n        } else if (Direction.isRight(this.anchor)) {\n            return this.position.x - this.size.width;\n        } else {\n            return this.position.x - this.size.width / 2;\n        }\n    }\n\n    /**\n     * Get the left edge of the scene node.\n     *\n     * @return The left edge of the scene node.\n     */\n    public getRight(): number {\n        if (Direction.isRight(this.anchor)) {\n            return this.position.x;\n        } else if (Direction.isLeft(this.anchor)) {\n            return this.position.x + this.size.width;\n        } else {\n            return this.position.x + this.size.width / 2;\n        }\n    }\n\n    /**\n     * Get the top edge of the scene node.\n     *\n     * @return The top edge of the scene node.\n     */\n    public getTop(): number {\n        if (Direction.isTop(this.anchor)) {\n            return this.position.y;\n        } else if (Direction.isBottom(this.anchor)) {\n            return this.position.y - this.size.height;\n        } else {\n            return this.position.y - this.size.height / 2;\n        }\n    }\n\n    /**\n     * Get the vertical center position of the scene node.\n     *\n     * @return The vertical center of the scene node.\n     */\n    public getCenterY(): number {\n        if (Direction.isTop(this.anchor)) {\n            return this.position.y + this.size.height / 2;\n        } else if (Direction.isBottom(this.anchor)) {\n            return this.position.y - this.size.height / 2;\n        } else {\n            return this.position.y;\n        }\n    }\n\n    /**\n     * Get the bottom edge of the scene node.\n     *\n     * @return The bottom edge of the scene node.\n     */\n    public getBottom(): number {\n        if (Direction.isBottom(this.anchor)) {\n            return this.position.y;\n        } else if (Direction.isTop(this.anchor)) {\n            return this.position.y + this.size.height;\n        } else {\n            return this.position.y + this.size.height / 2;\n        }\n    }\n\n    /**\n     * Resizes the node to the given width and height.\n     *\n     * @param width  - The width to set.\n     * @param height - The height to set.\n     */\n    public resizeTo(width: number, height: number): this {\n        const size = this.size;\n        if (width !== size.width || height !== size.height) {\n            size.width = width;\n            size.height = height;\n            this.invalidate(SceneNodeAspect.BOUNDS);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the current opacity of the node.\n     *\n     * @return The opacity. 0.0 means fully transparent, 1.0 means fully opaque.\n     */\n    public getOpacity(): number {\n        return this.opacity;\n    }\n\n    /**\n     * Sets the nodes opacity.\n     *\n     * @pram opacity - The opacity to set. 0.0 means fully transparent, 1.0 means fully opaque. Can be larger than 1.0\n     *                 to compensate transparency of its parent.\n     */\n    public setOpacity(opacity: number): this {\n        opacity = Math.max(0, opacity);\n        if (opacity !== this.opacity) {\n            this.opacity = opacity;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the effective node opacity which is the nodes opacity multiplied by the parents effective opacity.\n     *\n     * @return The effective node opacity clamped to valid range of 0.0 to 1.0.\n     */\n    public getEffectiveOpacity(): number {\n        if (this.opacity === Infinity) {\n            return 1;\n        }\n        return Math.max(0, Math.min(1, (this.parent?.getEffectiveOpacity() ?? 1) * this.opacity));\n    }\n\n    /**\n     * Shows or hides this node.\n     *\n     * @param hidden - True to hide the node, false to show it.\n     */\n    public setHidden(hidden: boolean): this {\n        if (hidden !== this.hidden) {\n            this.hidden = hidden;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Shows or hides this node.\n     *\n     * @param visible - True to show the node, false to hide it.\n     */\n    public setVisible(visible: boolean): this {\n        return this.setHidden(!visible);\n    }\n\n    /**\n     * Checks if node is hidden.\n     *\n     * @return True if node is hidden, false if not.\n     */\n    public isHidden(): boolean {\n        return this.hidden;\n    }\n\n    /**\n     * Checks if node is visible.\n     *\n     * @return True if node is visible, false if not.\n     */\n    public isVisible(): boolean {\n        return !this.hidden;\n    }\n\n    /**\n     * Hides this node.\n     */\n    public hide(): this {\n        return this.setHidden(true);\n    }\n\n    /**\n     * Show this node.\n     */\n    public show(): this {\n        return this.setHidden(false);\n    }\n\n    /**\n     * Returns the node anchor which defines the meaning of the X/Y coordinates of the node. CENTER means the X/Y\n     * coordinates define the center of the node. TOP_LEFT means the X/Y coordinates define the upper left corner of\n     * the node.\n     *\n     * @return The node anchor.\n     */\n    public getAnchor(): Direction {\n        return this.anchor;\n    }\n\n    /**\n     * Sets the node anchor which defines the meaning of the X/Y coordinates of the node. CENTER means the X/Y\n     * coordinates define the center of the node. TOP_LEFT means the X/Y coordinates define the upper left corner of\n     * the node.\n     *\n     * @param anchor - The node anchor to set.\n     */\n    public setAnchor(anchor: Direction): this {\n        if (anchor !== this.anchor) {\n            this.anchor = anchor;\n            this.invalidate(SceneNodeAspect.SCENE_TRANSFORMATION);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the child anchor which defines the origin of the local coordinate system to which the coordinates of\n     * child nodes are relative to.\n     *\n     * @return The child anchor.\n     */\n    public getChildAnchor(): Direction {\n        return this.childAnchor;\n    }\n\n    /**\n     * Sets the child anchor which defines the origin of the local coordinate system to which the coordinates of\n     * child nodes are relative to.\n     *\n     * @param childAnchor - The child anchor to set.\n     */\n    public setChildAnchor(childAnchor: Direction): this {\n        if (childAnchor !== this.childAnchor) {\n            this.childAnchor = childAnchor;\n            this.forEachChild(child => child.invalidate(SceneNodeAspect.SCENE_POSITION));\n        }\n        return this;\n    }\n\n    /**\n     * Returns the custom transformation of this node which can be manipulated by the [[transform]] method. This\n     * transformation is applied to the node before it is rendered at its intended position. Transformation and\n     * node position can complement each other or you can only use one of them, that's up to you.\n     *\n     * @return The custom node transformation.\n     */\n    public getTransformation(): ReadonlyAffineTransform {\n        return this.transformation;\n    }\n\n    /**\n     * Returns the scene transformation of this node. This is cached and automatically recalculated when\n     * local transformation of this node or one of its parents is changed.\n     *\n     * @return The scene transformation.\n     */\n    public getSceneTransformation(): ReadonlyAffineTransform {\n        if ((this.valid & SceneNodeAspect.SCENE_TRANSFORMATION) === 0) {\n            const parent = this.parent;\n            if (parent != null) {\n                this.sceneTransformation.setMatrix(parent.getSceneTransformation());\n                this.sceneTransformation.translate(\n                    (Direction.getX(parent.childAnchor) + 1) / 2 * parent.size.width,\n                    (Direction.getY(parent.childAnchor) + 1) / 2 * parent.size.height\n                );\n            } else {\n                this.sceneTransformation.reset();\n            }\n            this.sceneTransformation.translate(this.position.x, this.position.y);\n            this.sceneTransformation.mul(this.transformation);\n            this.sceneTransformation.translate(\n                -(Direction.getX(this.anchor) + 1) / 2 * this.size.width,\n                -(Direction.getY(this.anchor) + 1) / 2 * this.size.height\n            );\n            this.valid |= SceneNodeAspect.SCENE_TRANSFORMATION;\n        }\n        return this.sceneTransformation;\n    }\n\n    /**\n     * Modifies the custom transformation matrix of this node. Calls the given transformer function which can then\n     * modify the given transformation matrix. After this the node is invalidated to recalculate bounds and redraw it.\n     *\n     * @param transformer - Function to call with transformation matrix as argument.\n     */\n    public transform(transformer: (transformation: AffineTransform) => void): this {\n        transformer(this.transformation);\n        return this.invalidate(SceneNodeAspect.SCENE_TRANSFORMATION);\n    }\n\n    /**\n     * Returns the scene the node is currently attached to. Null if none.\n     *\n     * @return The current scene or null if none.\n     */\n    public getScene(): Scene<T> | null {\n        return this.scene;\n    }\n\n    /**\n     * Returns the game.\n     *\n     * @return The game.\n     */\n    public getGame(): T {\n        if (this.scene == null) {\n            throw new Error(\"Node is not in a scene and therefor can't access the game\");\n        }\n        return this.scene.game;\n    }\n\n    /**\n     * Sets the scene this node and all its children belongs to. This is called internally when a node is added to\n     * the scene.\n     *\n     * @param scene - The scene the node belongs to from now on. null to unset the current scene.\n     */\n    protected setScene(scene: Scene<T> | null): void {\n        if (scene !== this.scene) {\n            if (this.scene) {\n                this.deactivate();\n            }\n            this.scene = scene;\n            if (scene) {\n                this.activate();\n            }\n            this.forEachChild(node => node.setScene(scene));\n        }\n    }\n\n    /**\n     * Checks if scene node is present in a scene.\n     *\n     * @return True if in scene, false if not.\n     */\n    public isInScene(): boolean {\n        return this.scene != null;\n    }\n\n    /**\n     * Called when node is added to scene. Can be overwritten to connect event handlers for example.\n     */\n    protected activate(): void {}\n\n    /**\n     * Called when node is removed from scene. Can be overwritten to disconnect event handlers for example.\n     */\n    protected deactivate(): void {}\n\n    /**\n     * Returns the parent node of this node or null if node is not attached to a parent or is the root node.\n     *\n     * @return The parent node or null if unattached or root element.\n     */\n    public getParent(): SceneNode<T> | null {\n        return this.parent;\n    }\n\n    /**\n     * Returns the next node at the same level.\n     *\n     * @return The next sibling or null if none.\n     */\n    public getNextSibling(): SceneNode<T> | null {\n        return this.nextSibling;\n    }\n\n    /**\n     * Returns the previous node at the same level.\n     *\n     * @return The previous sibling or null if none.\n     */\n    public getPreviousSibling(): SceneNode<T> | null {\n        return this.previousSibling;\n    }\n\n    /**\n     * Returns the first child node.\n     *\n     * @return The first child node or null if none.\n     */\n    public getFirstChild(): SceneNode<T> | null {\n        return this.firstChild;\n    }\n\n    /**\n     * Returns the last child node.\n     *\n     * @return The last child node or null if none.\n     */\n    public getLastChild(): SceneNode<T> | null {\n        return this.lastChild;\n    }\n\n    /**\n     * Checks if this node has child nodes.\n     *\n     * @return True if it child nodes are present, false if not.\n     */\n    public hasChildNodes(): boolean {\n        return this.firstChild != null;\n    }\n\n    /**\n     * Appends the given child node so it becomes the last child of this node.\n     *\n     * @param node - The child node to append.\n     */\n    public appendChild(node: SceneNode<T>): this {\n        if (node === this) {\n            throw new Error(\"Node can not be appended to itself\");\n        }\n\n        // Remove from old parent if there is one\n        const oldParent = node.parent;\n        if (oldParent) {\n            oldParent.removeChild(node);\n        }\n\n        // Append the child\n        node.previousSibling = this.lastChild;\n        const oldLastChild = this.lastChild;\n        if (oldLastChild) {\n            oldLastChild.nextSibling = node;\n        }\n        this.lastChild = node;\n        if (!this.firstChild) {\n            this.firstChild = node;\n        }\n        node.parent = this;\n        node.setScene(this.scene);\n\n        node.invalidate(SceneNodeAspect.SCENE_POSITION);\n        return this;\n    }\n\n    /**\n     * Prepends the given child node so it becomes the first child of this node.\n     *\n     * @param node - The child node to prepend.\n     */\n    public prependChild(node: SceneNode<T>): this {\n        if (this.firstChild != null) {\n            return this.insertChildBefore(node, this.firstChild);\n        } else {\n            return this.appendChild(node);\n        }\n    }\n\n    /**\n     * Removes the given child node\n     *\n     * @param child - The child node to remove.\n     */\n    public removeChild(node: SceneNode<T>): this {\n        if (node.parent !== this) {\n            throw new Error(\"Node must be a child node\");\n        }\n\n        // Remove node from linked list\n        const next = node.nextSibling;\n        const prev = node.previousSibling;\n        if (next) {\n            next.previousSibling = prev;\n        }\n        if (prev) {\n            prev.nextSibling = next;\n        }\n\n        // Correct first/last reference\n        if (node === this.firstChild) {\n            this.firstChild = next;\n        }\n        if (node === this.lastChild) {\n            this.lastChild = prev;\n        }\n\n        // Remove all references from node\n        node.parent = null;\n        node.nextSibling = null;\n        node.previousSibling = null;\n        node.setScene(null);\n\n        node.invalidate(SceneNodeAspect.SCENE_POSITION);\n\n        return this;\n    }\n\n    /**\n     * Removes this node from the scene. The node is then a detached node ready to be added to the scene (or some\n     * other scene) again.\n     */\n    public remove(): this {\n        if (this.parent) {\n            this.parent.removeChild(this);\n        }\n        return this;\n    }\n\n    /**\n     * Removes all child nodes.\n     */\n    public clear(): this {\n        while (this.lastChild) {\n            this.removeChild(this.lastChild);\n        }\n        return this;\n    }\n\n    /**\n     * Inserts the given child node before the specified reference child node.\n     *\n     * @param newNode - The child node to insert.\n     * @param refNode - The reference node. The child node is inserted before this one.\n     */\n    public insertChildBefore(newNode: SceneNode<T>, refNode: SceneNode<T>): this {\n        if (newNode === refNode) {\n            // Nothing to do when inserting before itself\n            return this;\n        }\n        if (newNode === this) {\n            throw new Error(\"Node can not be inserted into itself\");\n        }\n        if (refNode.parent !== this) {\n            throw new Error(\"Reference node must be a child node\");\n        }\n\n        // Remove from old parent if there is one\n        const oldParent = newNode.parent;\n        if (oldParent != null) {\n            oldParent.removeChild(newNode);\n        }\n\n        // Insert the node\n        const oldPrevious = refNode.previousSibling;\n        if (oldPrevious == null) {\n            this.firstChild = newNode;\n        } else {\n            oldPrevious.nextSibling = newNode;\n        }\n        refNode.previousSibling = newNode;\n        newNode.previousSibling = oldPrevious;\n        newNode.nextSibling = refNode;\n        newNode.parent = this;\n        newNode.setScene(this.scene);\n\n        newNode.invalidate(SceneNodeAspect.SCENE_POSITION);\n\n        return this;\n    }\n\n    /**\n     * Inserts this node before the given reference node.\n     *\n     * @param refNode - The reference node. The node is inserted before this one.\n     */\n    public insertBefore(refNode: SceneNode<T>): this {\n        const parent = refNode.parent;\n        if (parent == null) {\n            throw new Error(\"Reference node has no parent\");\n        }\n        parent.insertChildBefore(this, refNode);\n        return this;\n    }\n\n    /**\n     * Inserts the given child node after the specified reference child node.\n     *\n     * @param newNode - The child node to insert.\n     * @param refNode - The reference node. The child node is inserted after this one.\n     */\n    public insertChildAfter(newNode: SceneNode<T>, refNode: SceneNode<T>): this {\n        if (newNode === refNode) {\n            // Nothing to do when inserting after itself\n            return this;\n        }\n        if (newNode === this) {\n            throw new Error(\"Node can not be inserted into itself\");\n        }\n        if (refNode.parent !== this) {\n            throw new Error(\"Reference node must be a child node\");\n        }\n        const nextRefSibling = refNode.nextSibling;\n        if (nextRefSibling != null) {\n            return this.insertChildBefore(newNode, nextRefSibling);\n        } else {\n            return this.appendChild(newNode);\n        }\n    }\n\n    /**\n     * Inserts this node before the given reference node.\n     *\n     * @param refNode - The reference node. The node is inserted after this one.\n     */\n    public insertAfter(refNode: SceneNode<T>): this {\n        const parent = refNode.parent;\n        if (parent == null) {\n            throw new Error(\"Reference node has no parent\");\n        }\n        parent.insertChildAfter(this, refNode);\n        return this;\n    }\n\n    /**\n     * Replaces the given child node with a new node.\n     *\n     * @param oldNode - The old child node to replace.\n     * @param newNode - The new node to replace the old one with.\n     */\n    public replaceChild(oldNode: SceneNode<T>, newNode: SceneNode<T>): this {\n        if (newNode === this) {\n            throw new Error(\"New node must not be the parent node\");\n        }\n        if (oldNode.parent !== this) {\n            throw new Error(\"Old node must be a child node\");\n        }\n\n        // If new node is the same as the old node then do nothing\n        if (newNode === oldNode) {\n            return this;\n        }\n\n        const next = oldNode.nextSibling;\n        this.removeChild(oldNode);\n        if (next) {\n            this.insertChildBefore(newNode, next);\n        } else {\n            this.appendChild(newNode);\n        }\n\n        return this;\n    }\n\n    /**\n     * Replace this node with the given one.\n     *\n     * @param node - The node to replace this one with.\n     */\n    public replaceWith(node: SceneNode<T>): this {\n        if (this.parent) {\n            this.parent.replaceChild(this, node);\n        }\n        return this;\n    }\n\n    /**\n     * Appends this node to the given parent node.\n     *\n     * @param node - The parent node to append this node to.\n     */\n    public appendTo(node: SceneNode<T>): this {\n        node.appendChild(this);\n        return this;\n    }\n\n    /**\n     * Prepends this node to the given parent node.\n     *\n     * @param node - The parent node to prepend this node to.\n     */\n    public prependTo(node: SceneNode<T>): this {\n        node.prependChild(this);\n        return this;\n    }\n\n    public forEachChild<C>(callback: (this: C, node: SceneNode<T>, index: number) => void, thisArg: C): this;\n    public forEachChild(callback: (this: this, node: SceneNode<T>, index: number) => void): this;\n\n    /**\n     * Iterates over all child nodes and calls the given callback with the currently iterated node as parameter.\n     *\n     * @param callback - The callback to call for each child node.\n     * @param thisArg  - Optional value to use as `this` when executing `callback`.\n     */\n    public forEachChild<C extends unknown>(callback: (this: C, node: SceneNode<T>, index: number) => void,\n            thisArg = this as C): this {\n        let index = 0;\n        let node = this.firstChild;\n        while (node) {\n            const next = node.nextSibling;\n            callback.call(thisArg, node, index++);\n            node = next;\n        }\n        return this;\n    }\n\n    /**\n     * Returns an iterator over all child nodes of this node.\n     *\n     * @return The child iterator.\n     */\n    public *children(): IterableIterator<SceneNode<T>> {\n        let node = this.firstChild;\n        while (node) {\n            const next = node.nextSibling;\n            yield node;\n            node = next;\n        }\n    }\n\n    public forEachDescendant<C>(callback: (this: C, node: SceneNode<T>) => void, thisArg: C): this;\n    public forEachDescendant(callback: (this: this, node: SceneNode<T>) => void): this;\n\n    /**\n     * Iterates over all descendant nodes and calls the given callback with the currently iterated node as parameter.\n     *\n     * @param callback - The callback to call for each descendant node.\n     * @param thisArg  - Optional value to use as `this` when executing `callback`.\n     */\n    public forEachDescendant<C extends unknown>(callback: (this: C, node: SceneNode<T>) => void,\n            thisArg = this as C): this {\n        let node = this.firstChild;\n        while (node != null && node !== this) {\n            let next = node.firstChild;\n            if (next == null) {\n                next = node.nextSibling;\n            }\n            if (next == null) {\n                let parent = node.parent;\n                if (parent === this) {\n                    parent = null;\n                }\n                while (parent != null && parent.nextSibling == null) {\n                    parent = parent.parent;\n                }\n                next = parent?.nextSibling ?? null;\n            }\n            callback.call(thisArg, node);\n            node = next;\n        }\n        return this;\n    }\n\n    /**\n     * Returns an iterator over all child nodes of this node.\n     *\n     * @return The child iterator.\n     */\n    public *descendants(): IterableIterator<SceneNode<T>> {\n        let node = this.firstChild;\n        while (node != null && node !== this) {\n            let next = node.firstChild;\n            if (next == null) {\n                next = node.nextSibling;\n            }\n            if (next == null) {\n                let parent = node.parent;\n                if (parent === this) {\n                    parent = null;\n                }\n                while (parent != null && parent.nextSibling == null) {\n                    parent = parent.parent;\n                }\n                next = parent?.nextSibling ?? null;\n            }\n            yield(node);\n            node = next;\n        }\n    }\n\n    public findChild<C>(callback: (this: C, node: SceneNode<T>, index: number) => boolean,\n            thisArg: C): SceneNode<T> | null;\n    public findChild(callback: (this: this, node: SceneNode<T>, index: number) => boolean): SceneNode<T> | null;\n\n    /**\n     * Returns the first child node for which the given callback returns true.\n     *\n     * @param callback - The callback which checks if the iterated node is the one to look for.\n     * @return The found matching child node or null if none.\n     */\n    public findChild<C extends unknown>(callback: (this: C, node: SceneNode<T>, index: number) => boolean,\n            thisArg = this as C): SceneNode<T> | null {\n        let index = 0;\n        let node = this.firstChild;\n        while (node) {\n            const next = node.nextSibling;\n            if (callback.call(thisArg, node, index++)) {\n                return node;\n            }\n            node = next;\n        }\n        return null;\n    }\n\n    /**\n     * Returns the first descendant node for which the given callback returns true.\n     *\n     * @param callback - The callback which checks if the iterated node is the one to look for.\n     * @return The found matching descendant node or null if none.\n     */\n    public findDescendant(callback: (node: SceneNode<T>) => boolean, thisArg: unknown = this): SceneNode<T> | null {\n        let node = this.firstChild;\n        while (node != null && node !== this) {\n            let next = node.firstChild;\n            if (next == null) {\n                next = node.nextSibling;\n            }\n            if (next == null) {\n                let parent = node.parent;\n                if (parent === this) {\n                    parent = null;\n                }\n                while (parent != null && parent.nextSibling == null) {\n                    parent = parent.parent;\n                }\n                next = parent?.nextSibling ?? null;\n            }\n            if (callback.call(thisArg, node)) {\n                return node;\n            }\n            node = next;\n        }\n        return null;\n    }\n\n    /**\n     * Tests whether at least one child node passes the test implemented by the provided function.\n     *\n     * @param callback - The callback to call for each child node returning a boolean.\n     * @param thisArg  - Optional value to use as `this` when executing `callback`.\n     * @return True if at least one child node returned true in the given callback, false if none did.\n     */\n    public someChildren(callback: (node: SceneNode<T>, index: number) => boolean, thisArg: any = this): boolean {\n        let index = 0;\n        let node = this.firstChild;\n        while (node) {\n            const next = node.nextSibling;\n            if (callback.call(thisArg, node, index++)) {\n                return true;\n            }\n            node = next;\n        }\n        return false;\n    }\n\n    /**\n     * Returns a new array with all child nodes.\n     *\n     * @return All child nodes.\n     */\n    public getChildren(): SceneNode<T>[] {\n        const children: SceneNode<T>[] = [];\n        let node = this.firstChild;\n        while (node) {\n            children.push(node);\n            node = node.nextSibling;\n        }\n        return children;\n    }\n\n    /**\n     * Returns the descendant node with the given id.\n     *\n     * @param id - The ID to look for.\n     * @return The matching descendant node or null if none.\n     */\n    public getDescendantById(id: string): SceneNode<T> | null {\n        return this.findDescendant(node => node.getId() === id);\n    }\n\n    /**\n     * Returns the descendant node with the given type.\n     *\n     * @param type - The type to look for.\n     * @return The matching descendants. May be empty if none found.\n     */\n    public getDescendantsByType<T extends SceneNode>(type: Constructor<T>): T[] {\n        const descendants: T[] = [];\n        let node = this.firstChild;\n        while (node != null && node !== this) {\n            let next = node.firstChild;\n            if (next == null) {\n                next = node.nextSibling;\n            }\n            if (next == null) {\n                let parent = node.parent;\n                if (parent === this) {\n                    parent = null;\n                }\n                while (parent != null && parent.nextSibling == null) {\n                    parent = parent.parent;\n                }\n                next = parent?.nextSibling ?? null;\n            }\n            if (node instanceof type) {\n                descendants.push(node);\n            }\n            node = next;\n        }\n        return descendants;\n    }\n\n    /**\n     * Updates the bounds polygon of the node. The default implementation simply sets a bounding box. Specialized nodes\n     * can overwrite this method to define a more specific polygon.\n     *\n     * @param bounds - The empty bounds polygon to be filled with points by this method.\n     */\n    protected updateBoundsPolygon(bounds: Polygon2): void {\n        bounds.addVertex(new Vector2(0, 0));\n        bounds.addVertex(new Vector2(this.size.width, 0));\n        bounds.addVertex(new Vector2(this.size.width, this.size.height));\n        bounds.addVertex(new Vector2(0, this.size.height));\n    }\n\n    /**\n     * Returns the bounds polygon of the node.\n     *\n     * @return The bounds polygon.\n     */\n    public getBoundsPolygon(): Polygon2 {\n        if ((this.valid & SceneNodeAspect.BOUNDS) === 0) {\n            this.boundsPolygon.clear();\n            this.updateBoundsPolygon(this.boundsPolygon);\n            this.valid |= SceneNodeAspect.BOUNDS;\n        }\n        return this.boundsPolygon;\n    }\n\n    /**\n     * Returns the node bounds within local coordinate system.\n     *\n     * @return The bounds of this node.\n     */\n    public getBounds(): Bounds2 {\n        return this.getBoundsPolygon().getBounds();\n    }\n\n    /**\n     * Returns the scene bounds polygon of the node.\n     *\n     * @return The scene bounds polygon.\n     */\n    public getSceneBoundsPolygon(): Polygon2 {\n        if ((this.valid & SceneNodeAspect.SCENE_BOUNDS) === 0) {\n            const boundsPolygon = this.getBoundsPolygon();\n            this.sceneBoundsPolygon.clear();\n            for (const vertex of boundsPolygon.vertices) {\n                this.sceneBoundsPolygon.addVertex(vertex.clone());\n            }\n            this.sceneBoundsPolygon.transform(this.getSceneTransformation());\n            this.valid |= SceneNodeAspect.SCENE_BOUNDS;\n        }\n        return this.sceneBoundsPolygon;\n    }\n\n    /**\n     * Returns the node bounds within scene coordinate system.\n     *\n     * @return The scene bounds.\n     */\n    public getSceneBounds(): Bounds2 {\n        return this.getSceneBoundsPolygon().getBounds();\n    }\n\n    /**\n     * Adds a new animation to the scene.\n     *\n     * @param animation - The animation to add.\n     */\n    public addAnimation(animation: Animation<this>): this {\n        this.animations.push(animation);\n        return this;\n    }\n\n    /**\n     * Finishes all currently running animations. This calls all animator functions with their last animation index\n     * (1.0) and then removes the animations.\n     */\n    public finishAnimations(): this {\n        for (const animation of this.animations) {\n            animation.finish();\n        }\n        return this.forEachChild(child => child.finishAnimations());\n    }\n\n    /**\n     * Checks if node has running animations.\n     *\n     * @return True if node has animations, false if not.\n     */\n    public hasAnimations(): boolean {\n        return this.animations.length > 0 || this.someChildren(child => child.hasAnimations());\n    }\n\n    /**\n     * Enables or disables showing node bounds. This may be useful for debugging.\n     *\n     * @param showBounds - True to enable showing node bounds, false to disable it.\n     */\n    public setShowBounds(showBounds: boolean): this {\n        if(showBounds !== this.showBounds) {\n            this.showBounds = showBounds;\n        }\n        return this;\n    }\n\n    /**\n     * Returns true if node bounds are currently shown for debugging purposes.\n     *\n     * @return True if node bounds are shown, false if not.\n     */\n    public isShowBounds(): boolean {\n        return this.showBounds;\n    }\n\n    /**\n     * Returns the layer of this node.\n     *\n     * @return The node's layer (0-31). Null if inherited from parent.\n     */\n    public getLayer(): number | null {\n        return this.layer == null ? null : Math.log2(this.layer);\n    }\n\n    /**\n     * Sets the layer this node should appear on.\n     *\n     * @param layer - The layer to set (0-31).\n     */\n    public setLayer(layer: number | null): this {\n        if (layer != null && (layer < 0 || layer > 31)) {\n            throw new Error(`Valid layer range is 0-31 but was ${layer}`);\n        }\n        layer = layer == null ? null : (1 << layer);\n        if (layer !== this.layer) {\n            this.layer = layer;\n        }\n        return this;\n    }\n\n    /**\n     * Returns the effective layer of this node.\n     *\n     * @return The effective layer.\n     */\n    protected getEffectiveLayer(): number {\n        if (this.layer == null) {\n            if (this.parent == null) {\n                return 1;\n            } else {\n                return this.parent.getEffectiveLayer();\n            }\n        } else {\n            return this.layer;\n        }\n    }\n\n    /**\n     * Checks if this node collides with the given node.\n     *\n     * @param node - The other node to check collision with.\n     * @return True if nodes collide, false if not.\n     */\n    public collidesWithNode(node: SceneNode): boolean {\n        return this.getSceneBoundsPolygon().collidesWith(node.getSceneBoundsPolygon());\n    }\n\n    /**\n     * Checks if given point is contained by this node.\n     *\n     * @param x - The X coordinate in scene coordinate system.\n     * @param y - The Y coordinate in scene coordinate system.\n     * @return True if point is contained by the node, false if not.\n     */\n    public containsPoint(x: number, y: number): boolean {\n        return this.getSceneBoundsPolygon().containsPoint(x, y);\n    }\n\n    /**\n     * Updates the animations and removes finished animations.\n     */\n    private updateAnimations(dt: number): void {\n        const animations = this.animations;\n        let numAnimations = animations.length;\n        let i = 0;\n        while (i < numAnimations) {\n            if (animations[i].update(this, dt)) {\n                animations.splice(i, 1);\n                numAnimations--;\n            } else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Updates this node and its child nodes recursively.\n     *\n     * @param dt - The time in seconds since the last update.\n     * @return Bit mask with used layers.\n     */\n    protected updateAll(dt: number, time: number): number {\n        // Update this node and run animations\n        const postUpdate = this.update(dt, time);\n        this.updateAnimations(dt);\n\n        // Update child nodes\n        const layers = this.updateChildren(dt, time) | this.getEffectiveLayer();\n\n        // When update method returned a post-update function then call it now\n        if (postUpdate != null) {\n            postUpdate();\n        }\n\n        return layers;\n    }\n\n    /**\n     * Updates the child nodes of this node recursively.\n     *\n     * @param dt - The time in seconds since the last update.\n     * @return Bit mask with used layers.\n     */\n    protected updateChildren(dt: number, time: number): number {\n        let layers = 0;\n        this.forEachChild(child => {\n            layers |= child.updateAll(dt, time);\n        });\n        return layers;\n    }\n\n    /**\n     * Updates this node. This is done before updating the child nodes of this node. The method can return an optional\n     * function which is called after the child nodes are updated so this can be used for post-updating operations.\n     *\n     * @param dt - The time in seconds since the last update.\n     * @return Optional post-update function which is called after updating the child nodes.\n     */\n    protected update(dt: number, time: number): void | (() => void) {}\n\n    /**\n     * Recursively draws the bounds for this node and alls its child nodes as long as the [[showBounds]] for the node\n     * is set to true.\n     *\n     * @param ctx - The rendering context.\n     */\n    protected drawBounds(ctx: CanvasRenderingContext2D): this {\n        if (this.showBounds) {\n            const lineDashOffset = Math.round(Date.now() / 100) % 8;\n\n            // Draw bounds polygon\n            const boundsPolygon = this.getSceneBoundsPolygon();\n            ctx.save();\n            ctx.beginPath();\n            boundsPolygon.draw(ctx);\n            ctx.clip();\n            ctx.save();\n            ctx.lineWidth = 2;\n            ctx.strokeStyle = \"red\";\n            ctx.setLineDash([2, 6]);\n            ctx.lineDashOffset = lineDashOffset;\n            ctx.stroke();\n            ctx.strokeStyle = \"white\";\n            ctx.lineDashOffset = lineDashOffset + 2;\n            ctx.stroke();\n            ctx.restore();\n            ctx.restore();\n\n            // Draw bounds rectangle\n            const bounds = this.getSceneBounds();\n            ctx.save();\n            ctx.beginPath();\n            bounds.draw(ctx);\n            ctx.clip();\n            ctx.save();\n            ctx.lineWidth = 2;\n            ctx.strokeStyle = \"blue\";\n            ctx.setLineDash([2, 6]);\n            ctx.lineDashOffset = lineDashOffset + 4;\n            ctx.stroke();\n            ctx.strokeStyle = \"white\";\n            ctx.lineDashOffset = lineDashOffset + 6;\n            ctx.stroke();\n            ctx.restore();\n            ctx.restore();\n        }\n        return this.forEachChild(child => child.drawBounds(ctx));\n    }\n\n    /**\n     * Draws this scene node and its child nodes recursively\n     *\n     * @param ctx    - The rendering context.\n     * @param layer  - The layer to render. Nodes which doesn't belong to this layer are not drawn.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     * @return Hints which suggests further actions after drawing.\n     */\n    protected drawAll(ctx: CanvasRenderingContext2D, layer: number, width: number, height: number): PostDrawHints {\n        if (this.hidden) {\n            this.valid |= SceneNodeAspect.RENDERING;\n            return 0;\n        }\n\n        ctx.save();\n        ctx.globalAlpha *= this.getEffectiveOpacity();\n        ctx.translate(this.position.x, this.position.y);\n        this.transformation.transformCanvas(ctx);\n        ctx.translate(\n            -(Direction.getX(this.anchor) + 1) / 2 * this.size.width,\n            -(Direction.getY(this.anchor) + 1) / 2 * this.size.height\n        );\n\n        // Ugly hack to correct node positions to exact pixel boundaries because Chrome renders broken character images\n        // when exactly between two pixels (Firefox doesn't have this problem).\n        if (ctx.getTransform) {\n            const transform = ctx.getTransform();\n            ctx.translate(\n                Math.round(transform.e) - transform.e,\n                Math.round(transform.f) - transform.f\n            );\n        }\n\n        const postDraw = layer === this.getEffectiveLayer() ? this.draw(ctx, width, height) : null;\n        ctx.save();\n        ctx.translate(\n            (Direction.getX(this.childAnchor) + 1) / 2 * this.size.width,\n            (Direction.getY(this.childAnchor) + 1) / 2 * this.size.height\n        );\n        let flags = this.drawChildren(ctx, layer, width, height);\n        ctx.restore();\n        if (postDraw != null) {\n            if (postDraw === true) {\n                flags |= PostDrawHints.CONTINUE_DRAWING;\n            } else if (postDraw !== false) {\n                postDraw();\n            }\n        }\n        ctx.restore();\n        const hints = this.showBounds ? flags | PostDrawHints.DRAW_BOUNDS | PostDrawHints.CONTINUE_DRAWING : flags;\n        this.valid |= SceneNodeAspect.RENDERING;\n        return hints;\n    }\n\n    /**\n     * Draws all child nodes of this scene node recursively.\n     *\n     * @param ctx    - The rendering context.\n     * @param layer  - The layer to render. Nodes which doesn't belong to this layer are not drawn.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     * @return Hints which suggests further actions after drawing.\n     */\n    protected drawChildren(ctx: CanvasRenderingContext2D, layer: number, width: number, height: number):\n            PostDrawHints {\n        let flags = 0;\n        this.forEachChild(child => {\n            flags |= child.drawAll(ctx, layer, width, height);\n        });\n        return flags;\n    }\n\n    /**\n     * Draws this node. This is done before drawing the child nodes of this node. The method can return a boolean\n     * which indicates if the scene is not finished yet and must be drawn continuously (for animations for example).\n     * The method can also return an optional function which is called after the child nodes are drawn so this can be\n     * used for post-drawing operations. This post-draw function then can again return an optional boolean which\n     * indicates that scene must be continuously draw itself.\n     *\n     * @param ctx    - The rendering context.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     * @return Optional boolean to indicate if scene must be redrawn continuously (Defaults to false) or a post-draw\n     *         function which is called after drawing the child nodes and which again can return a flag indicating\n     *         continuos redraw.\n     */\n    protected draw(ctx: CanvasRenderingContext2D, width: number, height: number):\n        void | boolean | (() => void | boolean) {}\n}\n","import { Game } from \"../Game\";\nimport { Constructor } from \"../util/types\";\nimport { Scene, SceneConstructor } from \"./Scene\";\n\nexport class Scenes<T extends Game> {\n    public activeScene: Scene<T, unknown> | null = null;\n    private sceneCache = new WeakMap<SceneConstructor>();\n    private scenes: Scene<T, unknown>[] = [];\n    private sortedScenes: Scene<T, unknown>[] = [];\n\n    public constructor(public readonly game: T) {}\n\n    private createScene<A>(sceneClass: SceneConstructor): Scene<T, A> {\n        let scene = this.sceneCache.get(sceneClass);\n\n        if (scene == null) {\n            scene = new sceneClass(this.game);\n            this.sceneCache.set(sceneClass, scene);\n        }\n\n        return scene;\n    }\n\n    public async pushScene<A>(sceneClass: SceneConstructor, args: void): Promise<void>;\n    public async pushScene<A>(sceneClass: SceneConstructor, args: A): Promise<void>;\n    public async pushScene<A>(sceneClass: SceneConstructor, args: A): Promise<void> {\n        if (this.activeScene != null) {\n            await this.activeScene.deactivate();\n        }\n\n        const scene = this.createScene(sceneClass);\n\n        await scene.setup(args);\n        this.scenes.push(scene);\n        this.updateSortedScenes();\n\n        if (scene.inTransition != null) {\n            scene.currentTransition = scene.inTransition;\n            await scene.currentTransition.start(\"in\");\n            scene.currentTransition = null;\n        }\n\n        this.activeScene = scene;\n        await scene.activate();\n    }\n\n    public getPreviousScene(): Scene<T> | null {\n        return this.scenes[this.scenes.length - 2] ?? null;\n    }\n\n    public getScene<C extends Scene>(type: Constructor<C>): C | null {\n        return (this.scenes.find(scene => scene instanceof type) ?? null) as (C | null);\n    }\n\n    public async popScene({ noTransition = false }: { noTransition?: boolean} = {}): Promise<Scene<T> | null> {\n        const activeScene = this.activeScene;\n\n        if (activeScene != null) {\n            await activeScene.deactivate();\n\n            if (!noTransition && activeScene.outTransition != null) {\n                activeScene.currentTransition = activeScene.outTransition;\n                await activeScene.currentTransition.start(\"out\");\n                activeScene.currentTransition = null;\n            }\n\n            this.scenes.pop();\n            this.updateSortedScenes();\n            await activeScene.cleanup();\n            this.activeScene = this.scenes[this.scenes.length - 1] ?? null;\n\n            if (this.activeScene != null) {\n                await this.activeScene.activate();\n            }\n        }\n\n        return activeScene;\n    }\n\n    public async setScene<A>(newSceneClass: SceneConstructor<T>, args: void): Promise<void>;\n    public async setScene<A>(newSceneClass: SceneConstructor<T>, args: A): Promise<void>;\n    public async setScene<A>(newSceneClass: SceneConstructor, args: A): Promise<void> {\n        const currentScene = this.activeScene;\n\n        if (currentScene == null) {\n            return this.pushScene(newSceneClass, args);\n        }\n\n        await currentScene.deactivate();\n        let outTransitionPromise: Promise<void> | null = null;\n\n        if (currentScene.outTransition) {\n            currentScene.currentTransition = currentScene.outTransition;\n            outTransitionPromise = currentScene.currentTransition.start(\"out\");\n            if (currentScene.outTransition.isExclusive()) {\n                await outTransitionPromise;\n            }\n        }\n\n        const currentSceneIndex = this.scenes.length - 1;\n        const newScene = this.createScene(newSceneClass);\n        await newScene.setup(args);\n        this.scenes.push(newScene);\n        this.updateSortedScenes();\n\n        if (newScene.inTransition != null) {\n            newScene.currentTransition = newScene.inTransition;\n            await newScene.currentTransition.start(\"in\");\n            newScene.currentTransition = null;\n        }\n\n        await newScene.activate();\n        this.activeScene = newScene;\n\n        if (outTransitionPromise != null) {\n            await outTransitionPromise;\n            currentScene.currentTransition = null;\n        }\n\n        this.scenes.splice(currentSceneIndex, 1);\n        this.updateSortedScenes();\n        currentScene.cleanup();\n    }\n\n    private updateSortedScenes(): void {\n        this.sortedScenes = this.scenes.slice().sort((a, b) => {\n            if (a.zIndex === b.zIndex) {\n                return this.scenes.indexOf(a) - this.scenes.indexOf(b);\n            } else {\n                return a.zIndex - b.zIndex;\n            }\n        });\n    }\n\n    public update(dt: number, time: number): void {\n        this.sortedScenes.forEach(scene => {\n            scene.currentTransition?.update(dt);\n            scene.update(dt, time);\n        });\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        this.sortedScenes.forEach(scene => {\n            ctx.save();\n            if (scene.currentTransition != null) {\n                scene.currentTransition.draw(ctx, () => scene.draw(ctx, width, height), width, height);\n            } else {\n                scene.draw(ctx, width, height);\n            }\n            ctx.restore();\n        });\n    }\n}\n","import { Sound } from \"../assets/Sound\";\nimport { Game } from \"../Game\";\nimport { Vector2 } from \"../graphics/Vector2\";\nimport { SceneNode, SceneNodeArgs, SceneNodeAspect } from \"./SceneNode\";\n\n/**\n * Constructor arguments for [[Sound]].\n */\nexport interface SoundNodeArgs extends SceneNodeArgs {\n    /** The sound to play. */\n    sound: Sound;\n\n    /** The sound range. */\n    range: number;\n\n    /** The sound intensity between 0.0 and 1.0. Defaults to 1.0. */\n    intensity?: number;\n}\n\n/**\n * Scene node for playing an ambient sound depending on the distance to the screen center.\n *\n * @param T - Optional owner game class.\n */\nexport class SoundNode<T extends Game = Game> extends SceneNode<T> {\n    /** The displayed aseprite. */\n    private sound: Sound;\n\n    /** The sound range. */\n    private range: number;\n\n    /** The sound intensity. */\n    private intensity: number;\n\n    /**\n     * Creates a new scene node displaying the given Aseprite.\n     */\n    public constructor({ sound, range, intensity = 1.0, ...args }: SoundNodeArgs) {\n        super({ ...args });\n        this.sound = sound;\n        this.range = range;\n        this.intensity = intensity;\n    }\n\n    /**\n     * Returns the played sound.\n     *\n     * @return The played sound.\n     */\n    public getSound(): Sound {\n        return this.sound;\n    }\n\n    /**\n     * Sets the sound.\n     *\n     * @param aseprite - The Aseprite to draw.\n     */\n    public setSound(sound: Sound): this {\n        if (sound !== this.sound) {\n            this.sound = sound;\n            this.invalidate(SceneNodeAspect.RENDERING);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the sound range.\n     *\n     * @return The sound range.\n     */\n    public getRange(): number {\n        return this.range;\n    }\n\n    /**\n     * Sets the sound range.\n     *\n     * @param range - The sound range to set.\n     */\n    public setRange(range: number): this {\n        if (range !== this.range) {\n            this.range = range;\n            this.invalidate(SceneNodeAspect.RENDERING);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the sound intensity (0.0 - 1.0).\n     *\n     * @return The sound intensity (0.0 - 1.0).\n     */\n    public getIntensity(): number {\n        return this.intensity;\n    }\n\n    /**\n     * Sets the sound range.\n     *\n     * @param intensity - The sound range to set.\n     */\n    public setIntensity(intensity: number): this {\n        if (intensity !== this.intensity) {\n            this.intensity = intensity;\n            this.invalidate(SceneNodeAspect.RENDERING);\n        }\n        return this;\n    }\n\n    /** @inheritDoc */\n    public update(dt: number, time: number) {\n        super.update(dt, time);\n        let distance = 0;\n        const scene = this.getScene();\n        if (scene) {\n            distance = this.getScenePosition().getDistance(new Vector2(scene.camera.getX(), scene.camera.getY()));\n        }\n        const volume = Math.max(0, this.range - distance) / this.range * this.intensity;\n        if (volume > 0) {\n            this.sound.setVolume(volume);\n            if (!this.sound.isPlaying()) {\n                this.sound.play();\n            }\n        } else {\n            this.sound.stop();\n        }\n    }\n}\n","import { Game } from \"../Game\";\nimport { SceneNode, SceneNodeArgs } from \"./SceneNode\";\nimport { BitmapFont } from \"../assets/BitmapFont\";\n\n/**\n * Constructor arguments for [[TextNode]].\n */\nexport interface TextNodeArgs extends SceneNodeArgs {\n    /** The initial font used to draw the text. */\n    font: BitmapFont;\n\n    /** Optional initial text to draw. Defaults to empty string. */\n    text?: string;\n\n    /** Optional initial text color. Defaults to \"white\". */\n    color?: string;\n\n    /** Optional initial outline text color. Default is null which means no outline is drawn. */\n    outlineColor?: string | null;\n}\n\n/**\n * Scene node for displaying a text with an optional icon left to it.\n *\n * @param T - Optional owner game class.\n */\nexport class TextNode<T extends Game = Game> extends SceneNode<T> {\n    /** The font used to draw the text. */\n    private font: BitmapFont;\n\n    /** The text to draw. */\n    private text: string;\n\n    /** The text color. */\n    private color: string;\n\n    /** Optional outline color. */\n    private outlineColor: string | null;\n\n    /**\n     * Creates a new scene node displaying the given image.\n     */\n    public constructor({ font, text = \"\", color = \"white\", outlineColor = null, ...args } : TextNodeArgs) {\n        super(args);\n        this.font = font;\n        this.text = text;\n        this.color = color;\n        this.outlineColor = outlineColor;\n        this.updateSize();\n    }\n\n    /**\n     * Returns the displayed text.\n     *\n     * @return The displayed text.\n     */\n    public getText(): string {\n        return this.text;\n    }\n\n    /**\n     * Sets the displayed text.\n     *\n     * @param text - The text to set.\n     */\n    public setText(text: string): this {\n        if (text !== this.text) {\n            this.text = text;\n            this.updateSize();\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the bitmap font used to draw the text.\n     *\n     * @return The used bitmap font.\n     */\n    public getFont(): BitmapFont {\n        return this.font;\n    }\n\n    /**\n     * Sets the bitmap font used to draw the text.\n     *\n     * @param font - The bitmap font to use.\n     */\n    public setFont(font: BitmapFont): this {\n        if (font !== this.font) {\n            this.font = font;\n            this.updateSize();\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the text color.\n     *\n     * @return The text color.\n     */\n    public getColor(): string {\n        return this.color;\n    }\n\n    /**\n     * Sets the text color.\n     *\n     * @param color - The text color to set.\n     */\n    public setColor(color: string): this {\n        if (color !== this.color) {\n            this.color = color;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the text outline color. Null if none.\n     *\n     * @return The text outline color. Null if none.\n     */\n    public getOutlineColor(): string | null {\n        return this.outlineColor;\n    }\n\n    /**\n     * Sets the text outline color.\n     *\n     * @param outlineColor - The text outline color to set.\n     */\n    public setOutlineColor(outlineColor: string | null): this {\n        if (outlineColor !== this.outlineColor) {\n            this.outlineColor = outlineColor;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Updates the node size according to the text measurements.\n     */\n    private updateSize(): void {\n        const size = this.font.measureText(this.text);\n        this.resizeTo(size.width, size.height);\n    }\n\n    /** @inheritDoc */\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (this.outlineColor != null) {\n            this.font.drawTextWithOutline(ctx, this.text, 0, 0, this.color, this.outlineColor);\n        } else {\n            this.font.drawText(ctx, this.text, 0, 0, this.color);\n        }\n    }\n}\n","import { Game } from \"../Game\";\nimport { Direction } from \"../geom/Direction\";\nimport { TiledMap } from \"../tiled/TiledMap\";\nimport { TiledTileLayer } from \"../tiled/TiledTileLayer\";\nimport { createCanvas, getRenderingContext } from \"../util/graphics\";\nimport { SceneNode, SceneNodeArgs } from \"./SceneNode\";\n\n/**\n * Constructor arguments for [[TiledNode]].\n */\nexport interface TiledMapLayerNodeArgs extends SceneNodeArgs {\n    map: TiledMap,\n    name: string\n}\n\nexport class TiledMapLayerNode<T extends Game> extends SceneNode<T> {\n    private map: TiledMap;\n    private name: string;\n\n    /**\n     * Creates a new scene node displaying the given Tiled Map.\n     */\n    public constructor({ map, name, ...args }: TiledMapLayerNodeArgs) {\n        super({\n            width: map.getWidth() * map.getTileWidth(),\n            height: map.getHeight() * map.getTileHeight(),\n            anchor: Direction.TOP_LEFT,\n            ...args\n        });\n        this.map = map;\n        this.name = name;\n    }\n\n    private renderedMap: HTMLCanvasElement | null = null;\n\n    private getRenderedMap(): HTMLCanvasElement | null {\n        if (this.renderedMap == null) {\n            const canvas = createCanvas(this.map.getWidth() * this.map.getTileWidth(), this.map.getHeight() * this.map.getTileHeight());\n            const ctx = getRenderingContext(canvas, \"2d\");\n            const layer = this.map.getLayer(this.name, TiledTileLayer);\n            const tileset = this.map.getTilesets()[0];\n            const tilesetImage = tileset.getImage();\n            if (tilesetImage === null) {\n                return null;\n            }\n            const data = layer.getData();\n            const height = layer.getHeight();\n            const width = layer.getWidth();\n            for (let y = layer.getY(); y < height; ++y) {\n                for (let x = layer.getX(); x < width; ++x) {\n                    const tile = data[y * width + x];\n                    const tileId = (tile & 0x1FFFFFFF) - tileset.getFirstGID();\n                    if (tileId < 0) {\n                        continue;\n                    }\n                    const flippedHorizontally = (tile & 0x80000000);\n                    const flippedVertically = (tile & 0x40000000);\n                    const flippedDiagonally = (tile & 0x20000000);\n                    const tileY = Math.floor(tileId / tileset.getColumns());\n                    const tileX = tileId % tileset.getColumns();\n                    ctx.save();\n                    ctx.translate(x * tileset.getTileWidth(), y * tileset.getTileHeight());\n                    if (flippedHorizontally || flippedDiagonally) {\n                        ctx.translate(tileset.getTileWidth(), 0);\n                        ctx.scale(-1, 1);\n                        // offsetX = tileset.getTileWidth();\n                    }\n                    if (flippedVertically || flippedDiagonally) {\n                        ctx.translate(0, tileset.getTileHeight());\n                        ctx.scale(1, -1);\n\n                    }\n                    ctx.drawImage(\n                        tilesetImage,\n                        tileX * tileset.getTileWidth(), tileY * tileset.getTileHeight(), tileset.getTileWidth(), tileset.getTileHeight(),\n                        0, 0, tileset.getTileWidth(), tileset.getTileHeight()\n                    );\n                    ctx.restore();\n                }\n            }\n            this.renderedMap = canvas;\n        }\n        return this.renderedMap;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const renderedMap = this.getRenderedMap();\n        if (renderedMap != null) {\n            ctx.drawImage(renderedMap, 0, 0);\n        }\n    }\n}\n","import { Game } from \"../Game\";\nimport { Direction } from \"../geom/Direction\";\nimport { TiledMap } from \"../tiled/TiledMap\";\nimport { TiledObject } from \"../tiled/TiledObject\";\nimport { TiledObjectGroupLayer } from \"../tiled/TiledObjectGroupLayer\";\nimport { TiledTileLayer } from \"../tiled/TiledTileLayer\";\nimport { radians } from \"../util/math\";\nimport { SceneNode, SceneNodeArgs } from \"./SceneNode\";\nimport { TiledMapLayerNode } from \"./TiledMapLayerNode\";\n\nexport interface TiledSceneArgs extends SceneNodeArgs {\n    tiledObject?: TiledObject;\n}\n\n/**\n * Constructor arguments for [[TiledMapNode]].\n */\nexport interface TiledMapNodeArgs<T extends Game> extends SceneNodeArgs {\n    map: TiledMap,\n    objects?: Record<string, new (args: TiledSceneArgs) => SceneNode<T>>\n}\n\nexport class TiledMapNode<T extends Game> extends SceneNode<T> {\n    /**\n     * Creates a new scene node displaying the given Tiled Map.\n     */\n    public constructor({ map, objects, ...args }: TiledMapNodeArgs<T>) {\n        super({\n            width: map.getWidth() * map.getTileWidth(),\n            height: map.getHeight() * map.getTileHeight(),\n            anchor: Direction.TOP_LEFT,\n            childAnchor: Direction.TOP_LEFT,\n            ...args\n        });\n        for (const tiledLayer of map.getLayers()) {\n            const layer = tiledLayer.getOptionalProperty(\"layer\", \"int\")?.getValue();\n            if (tiledLayer instanceof TiledTileLayer) {\n                this.appendChild(new TiledMapLayerNode({ map, layer, name: tiledLayer.getName() }));\n            } else if (tiledLayer instanceof TiledObjectGroupLayer) {\n                for (const object of tiledLayer.getObjects()) {\n                    const constructor = (objects != null ? objects[object.getType()] : null) ?? SceneNode;\n                    const args: TiledSceneArgs = {\n                        id: object.getName(),\n                        x: object.getX(),\n                        y: object.getY(),\n                        showBounds: object.getOptionalProperty(\"showBounds\", \"bool\")?.getValue(),\n                        layer,\n                        tiledObject: object\n                    };\n                    const width = object.getWidth();\n                    const height = object.getHeight();\n                    if (width > 0 && height > 0) {\n                        args.width = width;\n                        args.height = height;\n                        args.anchor = Direction.TOP_LEFT;\n                    }\n                    const node = new constructor(args);\n                    node.transform(m => m.rotate(radians(object.getRotation())));\n                    this.appendChild(node);\n                }\n            } else if (tiledLayer instanceof Object) {\n                console.log(\"Unknown layer\", tiledLayer.constructor.name);\n            }\n        }\n    }\n}\n","import { Easing, linear } from \"../../util/easings\";\nimport { Animation } from \"./Animation\";\n\n/**\n * Optional named arguments for the [[Animator]] constructor.\n */\nexport interface AnimatorArgs {\n    /** Number of seconds to wait until animations starts. Defaults to 0. */\n    delay?: number;\n\n    /** Duration of the animation in seconds. Defaults to 1. */\n    duration?: number;\n\n    /** The easing function to use. Defaults to linear. */\n    easing?: Easing;\n}\n\n/**\n * Type of an animator function which animates the given target. The value grows from 0.0 to 1.0 and the elapsed\n * parameter contains the animation time elapsed so far.\n */\nexport type AnimatorFunction<T> = (target: T, value: number, elapsed: number) => void;\n\n/**\n * Animation implementation which calls an animator function with a time index from 0.0 to 1.0 (Which can be\n * interpolated with an easing function) to perform the actual animation. It is guaranteed that the animator function\n * is called with value 1.0 when animation is finished.\n */\nexport class Animator<T extends unknown = unknown> implements Animation<T> {\n    /** The animator function. */\n    private readonly animator: AnimatorFunction<T>;\n\n    /** The delay in seconds before actual animation starts. */\n    private readonly delay: number;\n\n    /** The duration of the animation in seconds. */\n    private readonly duration: number;\n\n    /** The total lifetime of the animation (delay + duration). */\n    private readonly lifetime: number;\n\n    /** The easing function to use for easing the animation. */\n    private readonly easing: Easing;\n\n    /** Time elapsed so far within the animation (including delay). */\n    private elapsed: number = 0;\n\n    /** The promise to resolve when animation is finished. */\n    private promise: Promise<boolean>;\n\n    /** Resolve function to call for resolving the animation promise. */\n    private resolvePromise: null | ((finished: boolean) => void) = null;\n\n    /** Set to true when animation has been canceled. */\n    private canceled: boolean = false;\n\n    /**\n     * Creates an animation based on the given animator function. Some aspects of the animation can be configured with\n     * named options as second argument.\n     *\n     * @param animator - The animator function which performs the actual animation.\n     */\n    public constructor(animator: AnimatorFunction<T>, { delay = 0, duration = 1, easing = linear }: AnimatorArgs = {}) {\n        this.promise = new Promise(resolve => {\n            this.resolvePromise = resolve;\n        });\n        this.animator = animator;\n        this.delay = delay;\n        this.duration = duration;\n        this.easing = easing;\n        this.lifetime = delay + duration;\n    }\n\n    /** @inheritDoc */\n    public update(target: T, dt: number): boolean {\n        if (!this.canceled) {\n            this.elapsed += dt;\n            if (this.elapsed < this.lifetime) {\n                if (this.elapsed > this.delay) {\n                    const timeIndex = ((this.elapsed - this.delay) / this.duration) % 1;\n                    this.animator(target, this.easing(timeIndex), this.elapsed);\n                }\n                return false;\n            } else {\n                if (this.resolvePromise != null) {\n                    this.animator(target, 1, this.lifetime);\n                    this.resolvePromise(true);\n                    this.resolvePromise = null;\n                }\n                return true;\n            }\n        } else {\n            if (this.resolvePromise != null) {\n                this.resolvePromise(false);\n                this.resolvePromise = null;\n            }\n            return true;\n        }\n    }\n\n    /** @inheritDoc */\n    public finish(): void {\n        this.elapsed = this.lifetime;\n    }\n\n    /** @inheritDoc */\n    public cancel(): void {\n        this.canceled = true;\n    }\n\n    /** @inheritDoc */\n    public getPromise(): Promise<boolean> {\n        return this.promise;\n    }\n\n    /** @inheritDoc */\n    public isFinished(): boolean {\n        return this.elapsed >= this.lifetime;\n    }\n\n    /** @inheritDoc */\n    public isCanceled(): boolean {\n        return this.canceled;\n    }\n\n    /** @inheritDoc */\n    public isRunning(): boolean {\n        return this.elapsed < this.lifetime && !this.canceled;\n    }\n}\n","export class CinematicBars {\n    private time: number = 0;\n    private source: number = 0;\n    private target: number = 0;\n    private current: number = 0;\n    private duration: number = 0.5;\n\n    private move(target = 0.1, duration = this.duration): this {\n        this.time = 0;\n        this.source = this.current;\n        this.target = target;\n        this.duration = duration;\n        return this;\n    }\n\n    public show({ target, duration }: { target?: number, duration?: number } = {}): this {\n        return this.move(target, duration);\n    }\n\n    public hide({ duration }: { duration?: number } = {}): this {\n        return this.move(0, duration);\n    }\n\n    public set(target: number): this {\n        this.current = this.source = this.target = target;\n        return this;\n    }\n\n    public update(dt: number): void {\n        if (this.current !== this.target) {\n            const delta = (this.target - this.source) * this.time / this.duration;\n            if (this.target >= this.source) {\n                this.current = Math.min(this.target, this.source + delta);\n            } else {\n                this.current = Math.max(this.target, this.source + delta);\n            }\n            this.time += dt;\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, width: number, height: number): boolean {\n        if (this.current > 0) {\n            ctx.save();\n            ctx.fillStyle = \"black\";\n            const bar = this.current * height;\n            ctx.fillRect(0, 0, width, bar);\n            ctx.fillRect(0, height - bar, width, bar);\n            ctx.restore();\n            return true;\n        }\n        return false;\n    }\n}\n","export class FadeToBlack {\n    private color: string = \"black\";\n    private time: number = 0;\n    private source: number = 0;\n    private target: number = 0;\n    private current: number = 0;\n    private duration: number = 0.5;\n    private promise: Promise<this> | null = null;\n    private promiseResolve: (() => void) | null = null;\n\n    private move(target: number, duration: number): Promise<this> {\n        if (this.promise == null) {\n            this.promise = new Promise(resolve => {\n                this.promiseResolve = resolve;\n            });\n        }\n        this.time = 0;\n        this.source = this.current;\n        this.target = target;\n        this.duration = duration;\n        return this.promise;\n    }\n\n    public fadeOut({ duration = 0.8, color = \"black\" } = {}): Promise<this> {\n        this.color = color;\n        return this.move(1, duration);\n    }\n\n    public fadeIn({ duration = 0.8 } = {}): Promise<this> {\n        return this.move(0, duration);\n    }\n\n    public set(current: number, color = \"black\"): this {\n        this.color = color;\n        this.source = this.target = this.current = current;\n        return this;\n    }\n\n    public update(dt: number): void {\n        if (this.current !== this.target) {\n            const delta = (this.target - this.source) * this.time / this.duration;\n            if (this.target > this.source) {\n                this.current = Math.min(this.target, this.source + delta);\n            } else {\n                this.current = Math.max(this.target, this.source + delta);\n            }\n            this.time += dt;\n        } else if (this.promiseResolve != null) {\n            this.promise = null;\n            this.promiseResolve();\n            this.promiseResolve = null;\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, width: number, height: number): boolean {\n        if (this.current > 0) {\n            ctx.save();\n            ctx.fillStyle = this.color;\n            ctx.globalAlpha = this.current;\n            ctx.fillRect(0, 0, width, height);\n            ctx.restore();\n        }\n        return this.current !== this.target;\n    }\n}\n","import { Game } from \"../../Game\";\nimport { Signal } from \"../../util/Signal\";\nimport { ScenePointerEvent } from \"./ScenePointerEvent\";\nimport { ScenePointerMoveEvent } from \"./ScenePointerMoveEvent\";\nimport { ScenePointerEndEvent } from \"./ScenePointerEndEvent\";\n\nexport class ScenePointerDownEvent<T extends Game = Game, A = void> extends ScenePointerEvent<T, A> {\n    public readonly onPointerMove = new Signal<ScenePointerMoveEvent<T, A>>(this.initPointerMove.bind(this));\n    public readonly onPointerEnd = new Signal<ScenePointerEndEvent<T, A>>(this.initPointerEnd.bind(this));\n\n    private initPointerMove(signal: Signal<ScenePointerMoveEvent<T, A>>) {\n        const listener = (event: PointerEvent) => {\n            signal.emit(new ScenePointerMoveEvent(this.scene, event));\n        };\n        const canvas = this.scene.game.canvas;\n        const cleanup = () => {\n            canvas.removeEventListener(\"pointermove\", listener);\n            this.onPointerEnd.disconnect(cleanup);\n        };\n        canvas.addEventListener(\"pointermove\", listener);\n        return cleanup;\n    }\n\n    private initPointerEnd(signal: Signal<ScenePointerEndEvent<T, A>>) {\n        const listener = (event: PointerEvent) => {\n            signal.emit(new ScenePointerMoveEvent(this.scene, event));\n            cleanup();\n        };\n        const cleanup = () => {\n            canvas.removeEventListener(\"pointercancel\", listener);\n            canvas.removeEventListener(\"pointerup\", listener);\n            this.onPointerMove.clear();\n            this.onPointerEnd.clear();\n        };\n        const canvas = this.scene.game.canvas;\n        canvas.addEventListener(\"pointerup\", listener);\n        canvas.addEventListener(\"pointercancel\", listener);\n        return cleanup;\n    }\n\n    public getButton(): number {\n        return this.event.button;\n    }\n}\n","import { Game } from \"../../Game\";\nimport { ReadonlyVector2, Vector2 } from \"../../graphics/Vector2\";\nimport { Scene } from \"../Scene\";\n\nexport class ScenePointerEvent<T extends Game = Game, A = void> {\n    private readonly position: ReadonlyVector2;\n    private readonly screenPosition: ReadonlyVector2;\n\n    public constructor(\n        protected readonly scene: Scene<T, A>,\n        protected readonly event: PointerEvent\n    ) {\n        const canvas = scene.game.canvas;\n        const scaleX = canvas.width / canvas.offsetWidth;\n        const scaleY = canvas.height / canvas.offsetHeight;\n        const cameraTransformation = scene.camera.getSceneTransformation();\n        this.position = new Vector2(event.offsetX, event.offsetY).scale(scaleX, scaleY).div(cameraTransformation);\n        this.screenPosition = new Vector2(event.offsetX, event.offsetY).scale(scaleX, scaleY);\n    }\n\n    public getX(): number {\n        return this.position.x;\n    }\n\n    public getY(): number {\n        return this.position.y;\n    }\n\n    public getPosition(): ReadonlyVector2 {\n        return this.position;\n    }\n\n    public getScreenX(): number {\n        return this.screenPosition.x;\n    }\n\n    public getScreenY(): number {\n        return this.screenPosition.y;\n    }\n\n    public getScreenPosition(): ReadonlyVector2 {\n        return this.screenPosition;\n    }\n}\n","import { Game } from \"../../Game\";\nimport { ScenePointerEvent } from \"./ScenePointerEvent\";\n\nexport class ScenePointerMoveEvent<T extends Game = Game, A = void> extends ScenePointerEvent<T, A> {\n}\n","import { TiledLayerJSON, TiledLayerType } from \"*.tiledmap.json\";\n\nimport type { TiledLayer } from \"./TiledLayer\";\nimport { TiledProperties } from \"./TiledProperties\";\n\nexport abstract class AbstractTiledLayer<T extends TiledLayerJSON = TiledLayerJSON>\n        extends TiledProperties<TiledLayerJSON> implements TiledLayer<T> {\n    public constructor(protected readonly json: T, protected readonly baseURL: string | URL) {\n        super(json, baseURL);\n    }\n\n    public toJSON(): T {\n        return this.json;\n    }\n\n    public getType(): TiledLayerType {\n        return this.json.type;\n    }\n\n    public getId(): number {\n        return this.json.id;\n    }\n\n    public getName(): string {\n        return this.json.name;\n    }\n\n    public getOffsetX(): number {\n        return this.json.offsetx;\n    }\n\n    public getOffsetY(): number {\n        return this.json.offsety;\n    }\n\n    public getOpacity(): number {\n        return this.json.opacity;\n    }\n\n    public isVisible(): boolean {\n        return this.json.visible;\n    }\n\n    public getX(): number {\n        return this.json.x;\n    }\n\n    public getY(): number {\n        return this.json.y;\n    }\n\n    public getWidth(): number {\n        return this.json.width;\n    }\n\n    public getHeight(): number {\n        return this.json.height;\n    }\n}\n","import base64 from \"base64-js\";\nimport pako from \"pako\";\n\nimport { TiledChunkJSON, TiledCompression } from \"*.tiledmap.json\";\n\nexport class TiledChunk {\n    private decoded: Uint32Array | null = null;\n\n    private constructor(\n        private readonly json: TiledChunkJSON,\n        private readonly compression: TiledCompression | null\n    ) {}\n\n    public static fromJSON(json: TiledChunkJSON, compression: TiledCompression | null): TiledChunk {\n        return new TiledChunk(json, compression);\n    }\n\n    public toJSON(): TiledChunkJSON {\n        return this.json;\n    }\n\n    public getData(): Uint32Array {\n        if (this.decoded == null) {\n            const json = this.json;\n            let decoded: Uint32Array;\n            if (typeof json.data === \"string\") {\n                const compressed = base64.toByteArray(json.data);\n                let uncompressed: Uint8Array;\n                switch (this.compression) {\n                    case \"\":\n                        // Data is not compressed\n                        uncompressed = compressed;\n                        break;\n                    case \"gzip\":\n                        uncompressed = pako.ungzip(compressed);\n                        break;\n                    case \"zlib\":\n                        uncompressed = pako.inflate(compressed);\n                        break;\n                    default:\n                        // zstd is not supported because there is only a very large emscripten port available for\n                        // JavaScript. Stick to gzip or zlib for now.\n                        throw new Error(\"Unknown layer compression: \" + this.compression);\n                }\n                decoded = new Uint32Array(uncompressed.buffer);\n            } else {\n                decoded = new Uint32Array(json.data);\n            }\n            this.decoded = decoded;\n        }\n        return this.decoded;\n    }\n\n    public getWidth(): number {\n        return this.json.width;\n    }\n\n    public getHeight(): number {\n        return this.json.height;\n    }\n\n    public getX(): number {\n        return this.json.x;\n    }\n\n    public getY(): number {\n        return this.json.y;\n    }\n}\n","import type { TiledGroupLayerJSON, TiledLayerJSON } from \"*.tiledmap.json\";\n\nimport { AbstractTiledLayer } from \"./AbstractTiledLayer\";\n\nexport function isTiledGroupLayerJSON(json: TiledLayerJSON): json is TiledGroupLayerJSON {\n    return json.type === \"group\";\n}\n\nexport class TiledGroupLayer extends AbstractTiledLayer<TiledGroupLayerJSON> {\n    public static fromJSON(json: TiledGroupLayerJSON, baseURL: string | URL): TiledGroupLayer {\n        return new TiledGroupLayer(json, baseURL);\n    }\n}\n","import { TiledImageLayerJSON, TiledLayerJSON } from \"*.tiledmap.json\";\n\nimport { AbstractTiledLayer } from \"./AbstractTiledLayer\";\n\nexport function isTiledImageLayerJSON(json: TiledLayerJSON): json is TiledImageLayerJSON {\n    return json.type === \"imagelayer\";\n}\n\nexport class TiledImageLayer extends AbstractTiledLayer<TiledImageLayerJSON> {\n    public static fromJSON(json: TiledImageLayerJSON, baseURL: string | URL): TiledImageLayer {\n        return new TiledImageLayer(json, baseURL);\n    }\n}\n","import { TiledLayerJSON, TiledLayerType, TiledPropertyType } from \"*.tiledmap.json\";\n\nimport { AbstractTiledLayer } from \"./AbstractTiledLayer\";\nimport { isTiledGroupLayerJSON, TiledGroupLayer } from \"./TiledGroupLayer\";\nimport { isTiledImageLayerJSON, TiledImageLayer } from \"./TiledImageLayer\";\nimport { isTiledObjectGroupLayerJSON } from \"./TiledObject\";\nimport { TiledObjectGroupLayer } from \"./TiledObjectGroupLayer\";\nimport { TiledProperty } from \"./TiledProperty\";\nimport { isTiledTileLayerJSON, TiledTileLayer } from \"./TiledTileLayer\";\n\nexport interface TiledLayer<T extends TiledLayerJSON = TiledLayerJSON> {\n    getType(): TiledLayerType;\n    getId(): number;\n    getName(): string;\n    getOffsetX(): number;\n    getOffsetY(): number;\n    getOpacity(): number;\n    isVisible(): boolean;\n    getX(): number;\n    getY(): number;\n    getWidth(): number;\n    getHeight(): number;\n    getProperties(): readonly TiledProperty[];\n    getProperty<T extends TiledPropertyType = TiledPropertyType>(name: string, type?: T): TiledProperty<T>;\n    getOptionalProperty<T extends TiledPropertyType = TiledPropertyType>(name: string, type?: T):\n        TiledProperty<T> | null;\n    hasProperty(name: string): boolean;\n}\n\nexport namespace TiledLayer {\n    export function fromJSON(json: TiledLayerJSON, baseURL: string | URL): AbstractTiledLayer {\n        if (isTiledImageLayerJSON(json)) {\n            return TiledImageLayer.fromJSON(json, baseURL);\n        } else if (isTiledTileLayerJSON(json)) {\n            return TiledTileLayer.fromJSON(json, baseURL);\n        } else if (isTiledObjectGroupLayerJSON(json)) {\n            return TiledObjectGroupLayer.fromJSON(json, baseURL);\n        } else if (isTiledGroupLayerJSON(json)) {\n            return TiledGroupLayer.fromJSON(json, baseURL);\n        } else {\n            throw new Error(\"Unknown tiled layer type: \" + json.type);\n        }\n    }\n}\n","import type {\n    TiledMapJSON, TiledMapOrientation, TiledMapRenderOrder, TiledMapStaggerAxis, TiledMapStaggerIndex\n} from \"*.tiledmap.json\";\nimport { Color } from \"../color/Color\";\nimport { RGBAColor } from \"../color/RGBAColor\";\nimport { Deserializable } from \"../lang/Deserializable\";\nimport { cacheResult } from \"../util/cache\";\nimport { Constructor } from \"../util/types\";\n\nimport { TiledLayer } from \"./TiledLayer\";\nimport { TiledProperties } from \"./TiledProperties\";\nimport { TiledTileset } from \"./TiledTileset\";\n\nexport class TiledMap extends TiledProperties<TiledMapJSON> {\n    public static fromJSON(json: TiledMapJSON, baseURL: string | URL): TiledMap {\n        return new TiledMap(json, baseURL);\n    }\n\n    /**\n     * Loads the tiled map from the given source.\n     *\n     * @param source - The URL pointing to the JSON file of the tiled map.\n     * @return The loaded tiled map.\n     */\n    public static async load(source: string): Promise<TiledMap> {\n        const json = await (await fetch(source)).json() as TiledMapJSON;\n        const baseURL = new URL(source, location.href);\n        return TiledMap.fromJSON(json, baseURL);\n    }\n    /**\n     * Returns the optional background color.\n     *\n     * @return The optional background color.\n     */\n    @cacheResult\n    public getBackgroundColor(): RGBAColor | null {\n        return this.json.backgroundcolor != null ? Color.fromJSON(this.json.backgroundcolor).toRGBA() : null;\n    }\n\n    /**\n     * Returns the number of tile columns.\n     *\n     * @return The number of tile columns.\n     */\n    public getWidth(): number {\n        return this.json.width;\n    }\n\n    /**\n     * Returns the number of tile rows.\n     *\n     * @return The number of tile rows.\n     */\n    public getHeight(): number {\n        return this.json.height;\n    }\n\n    /**\n     * Returns the length of the side of a hex in pixels.\n     *\n     * @return The length of the side of a hex in pixels. Null if not a hexagonal map.\n     */\n    public getHexSideLength(): number | null {\n        return this.json.hexsidelength ?? null;\n    }\n\n    /**\n     * Checks whether the map has infinite dimensions.\n     *\n     * @return True when infinite dimensions, false if not.\n     */\n    public isInfinite(): boolean {\n        return this.json.infinite;\n    }\n\n    /**\n     * Returns the map orientation.\n     *\n     * @return The map orientation.\n     */\n    public getOrientation(): TiledMapOrientation {\n        return this.json.orientation;\n    }\n\n    /**\n     * Returns the render order.\n     *\n     * @return The render order.\n     */\n    public getRenderOrder(): TiledMapRenderOrder {\n        return this.json.renderorder;\n    }\n\n    /**\n     * Returns the stagger axis (x or y).\n     *\n     * @return The stagger axis. Null if map is not staggered and not hexagonal.\n     */\n    public getStaggerAxis(): TiledMapStaggerAxis | null {\n        return this.json.staggeraxis ?? null;\n    }\n\n    /**\n     * Returns the stagger index (odd or even).\n     *\n     * @return The stagger index. Null if map is not staggered and not hexagonal.\n     */\n    public getStaggerIndex(): TiledMapStaggerIndex | null {\n        return this.json.staggerindex ?? null;\n    }\n\n    /**\n     * Returns the Tiled version used to save the file.\n     *\n     * @return The Tiled version used to save the file.\n     */\n    public getTiledVersion(): string {\n        return this.json.tiledversion;\n    }\n\n    /**\n     * Returns the map grid width.\n     *\n     * @return The map grid width.\n     */\n    public getTileWidth(): number {\n        return this.json.tilewidth;\n    }\n\n    /**\n     * Returns the map grid height.\n     *\n     * @return The map grid height.\n     */\n    public getTileHeight(): number {\n        return this.json.tileheight;\n    }\n\n    /**\n     * Returns the tilesets.\n     *\n     * @return The tilesets.\n     */\n    @cacheResult\n    public getTilesets(): readonly TiledTileset[] {\n        return this.json.tilesets.map(json => TiledTileset.fromJSON(json, this.baseURL));\n    }\n\n    @cacheResult\n    public getLayers(): readonly TiledLayer[] {\n        return this.json.layers.map(json => TiledLayer.fromJSON(json, this.baseURL));\n    }\n\n    public getLayersByType<T extends TiledLayer>(type: Constructor<T>): readonly T[] {\n        return this.getLayers().filter((layer): layer is T => layer instanceof type);\n    }\n\n    /**\n     * Returns the map property with the given name.\n     *\n     * @param name - The name of the property to return.\n     * @param type - The expected property type. An exception is thrown when actual type doesn't match the expected one.\n     * @return The map property or null if not found.\n     */\n    public getLayer<T extends TiledLayer>(name: string, type?: Deserializable<T>): T {\n        const layer = this.getLayers().find(layer => layer.getName() === name);\n        if (layer == null) {\n            throw new Error(`No map layer with name '${name}' found`);\n        }\n        if (type != null && !(layer instanceof type)) {\n            throw new Error(\n                `Expected layer with name '${name}' to be of type '${type.name}' but is '${layer.constructor.name}'`);\n        }\n        return layer as T;\n    }\n}\n","import type { TiledLayerJSON, TiledObjectGroupLayerJSON, TiledObjectJSON } from \"*.tiledmap.json\";\nimport { Polygon2 } from \"../graphics/Polygon2\";\nimport { Vector2 } from \"../graphics/Vector2\";\nimport { cacheResult } from \"../util/cache\";\nimport { TiledProperties } from \"./TiledProperties\";\n\nexport function isTiledObjectGroupLayerJSON(json: TiledLayerJSON): json is TiledObjectGroupLayerJSON {\n    return json.type === \"objectgroup\";\n}\n\nexport class TiledObject extends TiledProperties<TiledObjectJSON> {\n    public toJSON(): TiledObjectJSON {\n        return this.json;\n    }\n\n    public static fromJSON(json: TiledObjectJSON, baseURL: string | URL): TiledObject {\n        return new TiledObject(json, baseURL);\n    }\n\n    @cacheResult\n    public getPolygon(): Polygon2 | null {\n        if (this.json.polygon == null) {\n            return null;\n        }\n        const polygon = new Polygon2();\n        for (const point of this.json.polygon) {\n            polygon.addVertex(new Vector2(point.x, point.y));\n        }\n        return polygon;\n    }\n\n    public isEllipse(): boolean {\n        return this.json.ellipse === true;\n    }\n\n    public getId(): number {\n        return this.json.id;\n    }\n\n    public getName(): string {\n        return this.json.name;\n    }\n\n    public getType(): string {\n        return this.json.type;\n    }\n\n    public getHeight(): number {\n        return this.json.height;\n    }\n\n    public getWidth(): number {\n        return this.json.width;\n    }\n\n    public isVisible(): boolean {\n        return this.json.visible;\n    }\n\n    public getX(): number {\n        return this.json.x;\n    }\n\n    public getY(): number {\n        return this.json.y;\n    }\n\n    public getRotation(): number {\n        return this.json.rotation;\n    }\n}\n","import type { TiledDrawOrder, TiledLayerJSON, TiledObjectGroupLayerJSON } from \"*.tiledmap.json\";\nimport { cacheResult } from \"../util/cache\";\n\nimport { AbstractTiledLayer } from \"./AbstractTiledLayer\";\nimport { TiledObject } from \"./TiledObject\";\n\nexport function isTiledObjectGroupLayerJSON(json: TiledLayerJSON): json is TiledObjectGroupLayerJSON {\n    return json.type === \"objectgroup\";\n}\n\nexport class TiledObjectGroupLayer extends AbstractTiledLayer<TiledObjectGroupLayerJSON> {\n    public static fromJSON(json: TiledObjectGroupLayerJSON, baseURL: string | URL): TiledObjectGroupLayer {\n        return new TiledObjectGroupLayer(json, baseURL);\n    }\n\n    public getDrawOrder(): TiledDrawOrder {\n        return this.json.draworder;\n    }\n\n    @cacheResult\n    public getObjects(): readonly TiledObject[] {\n        return this.json.objects.map(json => TiledObject.fromJSON(json, this.baseURL));\n    }\n}\n","import { TiledPropertiesJSON, TiledPropertyType } from \"*.tiledmap.json\";\nimport { cacheResult } from \"../util/cache\";\n\nimport { TiledProperty } from \"./TiledProperty\";\n\nexport abstract class TiledProperties<T extends TiledPropertiesJSON = TiledPropertiesJSON> {\n    protected constructor(protected readonly json: T, protected readonly baseURL: string | URL) {}\n\n    public toJSON(): T {\n        return this.json;\n    }\n\n    /**\n     * Returns the layer properties.\n     *\n     * @return The layer properties.\n     */\n    @cacheResult\n    public getProperties(): readonly TiledProperty[] {\n        return this.json.properties != null ? this.json.properties.map(json => TiledProperty.fromJSON(json)) : [];\n    }\n\n    /**\n     * Returns the map property with the given name.\n     *\n     * @param name - The name of the property to return.\n     * @param type - The expected property type. An exception is thrown when actual type doesn't match the expected one.\n     * @return The map property or null if not found.\n     */\n    public getProperty<T extends TiledPropertyType = TiledPropertyType>(name: string, type?: T): TiledProperty<T> {\n        const property = this.getOptionalProperty(name, type);\n        if (property == null) {\n            throw new Error(`No map property with name '${name}' found`);\n        }\n        return property;\n    }\n\n    /**\n     * Returns the map property with the given name.\n     *\n     * @param name - The name of the property to return.\n     * @param type - The expected property type. An exception is thrown when actual type doesn't match the expected one.\n     * @return The map property or null if not found.\n     */\n    public getOptionalProperty<T extends TiledPropertyType = TiledPropertyType>(name: string, type?: T):\n            TiledProperty<T> | null {\n        const property = this.getProperties().find(property => property.getName() === name);\n        if (property == null) {\n            return null;\n        }\n        if (type != null && property.getType() !== type) {\n            throw new Error(\n                `Expected property with name '${name}' to be of type '${type}' but is '${property.getType()}'`);\n        }\n        return property as TiledProperty<T>;\n    }\n\n    /**\n     * Checks if map contains a property with the given name.\n     *\n     * @param name - The name of the property to look for.\n     * @return True if property exists, false if not.\n     */\n    public hasProperty(name: string): boolean {\n        return this.getProperties().findIndex(property => property.getName() === name) >= 0;\n    }\n}\n","import type { TiledPropertyJSON, TiledPropertyType } from \"*.tiledmap.json\";\nimport { Color } from \"../color/Color\";\n\nexport type TiledPropertyValueType<T extends TiledPropertyType> =\n    T extends \"int\" ? number :\n    T extends \"float\" ? number :\n    T extends \"bool\" ? boolean :\n    T extends \"color\" ? Color :\n    string;\n\nexport class TiledProperty<T extends TiledPropertyType = TiledPropertyType> {\n    public constructor(private readonly json: TiledPropertyJSON<T>) {}\n\n    public static fromJSON<T extends TiledPropertyType>(json: TiledPropertyJSON<T>): TiledProperty<T> {\n        return new TiledProperty(json);\n    }\n\n    public toJSON(): TiledPropertyJSON<T> {\n        return this.json;\n    }\n\n    public getName(): string {\n        return this.json.name;\n    }\n\n    public getValue(): TiledPropertyValueType<T> {\n        return (this.json.type === \"color\" ? Color.fromJSON(this.json.value as string) : this.json.value) as\n            TiledPropertyValueType<T>;\n    }\n\n    public getType(): T {\n        return this.json.type ?? \"string\" as T;\n    }\n\n    public isInt(): this is TiledProperty<\"int\"> {\n        return this.getType() === \"int\";\n    }\n\n    public isFloat(): this is TiledProperty<\"float\"> {\n        return this.getType() === \"float\";\n    }\n\n    public isBoolean(): this is TiledProperty<\"bool\"> {\n        return this.getType() === \"bool\";\n    }\n\n    public iString(): this is TiledProperty<\"string\"> {\n        return this.getType() === \"string\";\n    }\n\n    public isColor(): this is TiledProperty<\"color\"> {\n        return this.getType() === \"color\";\n    }\n\n    public isFile(): this is TiledProperty<\"file\"> {\n        return this.getType() === \"file\";\n    }\n}\n","import base64 from \"base64-js\";\nimport pako from \"pako\";\n\nimport type { TiledCompression, TiledLayerJSON, TiledTileLayerJSON } from \"*.tiledmap.json\";\n\nimport { AbstractTiledLayer } from \"./AbstractTiledLayer\";\nimport { TiledChunk } from \"./TiledChunk\";\nimport { cacheResult } from \"../util/cache\";\n\nexport function isTiledTileLayerJSON(json: TiledLayerJSON): json is TiledTileLayerJSON {\n    return json.type === \"tilelayer\";\n}\n\nexport class TiledTileLayer extends AbstractTiledLayer<TiledTileLayerJSON> {\n    public static fromJSON(json: TiledTileLayerJSON, baseURL: string | URL): TiledTileLayer {\n        return new TiledTileLayer(json, baseURL);\n    }\n\n    @cacheResult\n    public getData(): Uint32Array {\n        const json = this.json;\n        let decoded: Uint32Array;\n        if (typeof json.data === \"string\") {\n            const compressed = base64.toByteArray(json.data);\n            let uncompressed: Uint8Array;\n            switch (json.compression) {\n                case \"\":\n                    // Data is not compressed\n                    uncompressed = compressed;\n                    break;\n                case \"gzip\":\n                    uncompressed = pako.ungzip(compressed);\n                    break;\n                case \"zlib\":\n                    uncompressed = pako.inflate(compressed);\n                    break;\n                default:\n                    // zstd is not supported because there is only a very large emscripten port available for\n                    // JavaScript. Stick to gzip or zlib for now.\n                    throw new Error(\"Unknown layer compression: \" + json.compression);\n            }\n            decoded = new Uint32Array(uncompressed.buffer);\n        } else {\n            decoded = new Uint32Array(json.data);\n        }\n        return decoded;\n    }\n\n    @cacheResult\n    public getChunks(): readonly TiledChunk[] | null {\n        return this.json.chunks?.map(json => TiledChunk.fromJSON(json, this.getCompression())) ?? null;\n    }\n\n    public getCompression(): TiledCompression | null{\n        return this.json.compression ?? null;\n    }\n\n    public getStartX(): number | null {\n        return this.json.startx ?? null;\n    }\n\n    public getStartY(): number | null {\n        return this.json.starty ?? null;\n    }\n}\n","import { TiledTilesetJSON } from \"*.tiledmap.json\";\nimport { Color } from \"../color/Color\";\nimport { RGBAColor } from \"../color/RGBAColor\";\nimport { RGBColor } from \"../color/RGBColor\";\nimport { cacheResult } from \"../util/cache\";\nimport { loadImage } from \"../util/graphics\";\n\nexport class TiledTileset {\n    private image: HTMLImageElement | null = null;\n\n    private constructor(\n        private readonly json: TiledTilesetJSON,\n        private readonly baseURL: string | URL\n    ) {}\n\n    public static fromJSON(json: TiledTilesetJSON, baseURL: string | URL): TiledTileset {\n        return new TiledTileset(json, baseURL);\n    }\n\n    public toJSON(): TiledTilesetJSON {\n        return this.json;\n    }\n\n    /**\n     * Returns the optional background color.\n     *\n     * @return The optional background color.\n     */\n    @cacheResult\n    public getBackgroundColor(): RGBAColor | null {\n        return this.json.backgroundcolor != null ? Color.fromJSON(this.json.backgroundcolor).toRGBA() : null;\n    }\n\n    public getColumns(): number {\n        return this.json.columns;\n    }\n\n    public getFirstGID(): number {\n        return this.json.firstgid;\n    }\n\n    @cacheResult\n    public async loadImage(): Promise<HTMLImageElement> {\n        this.image = await loadImage(new URL(this.json.image, this.baseURL));\n        return this.image;\n    }\n\n    public getImage(): HTMLImageElement | null {\n        if (this.image === null) {\n            this.loadImage();\n        }\n        return this.image;\n    }\n\n    public getImageURL(): string {\n        return this.json.image;\n    }\n\n    public getImageWidth(): number {\n        return this.json.imagewidth;\n    }\n\n    public getImageHeight(): number {\n        return this.json.imageheight;\n    }\n\n    public getMargin(): number {\n        return this.json.margin;\n    }\n\n    public getSource(): string | null {\n        return this.json.source ?? null;\n    }\n\n    public getSpacing(): number {\n        return this.json.spacing;\n    }\n\n    public getTileCount(): number {\n        return this.json.tilecount;\n    }\n\n    public getTiledVersion(): string {\n        return this.json.tiledversion;\n    }\n\n    public getTileWidth(): number {\n        return this.json.tilewidth;\n    }\n\n    public getTileHeight(): number {\n        return this.json.tileheight;\n    }\n\n    /**\n     * Returns the optional transparency color.\n     *\n     * @return The optional transparency color.\n     */\n    @cacheResult\n    public getTransparencyColor(): RGBColor | null {\n        return this.json.transparentcolor != null ? RGBColor.fromJSON(this.json.transparentcolor) : null;\n    }\n\n    public getVersion(): number {\n        return this.json.version;\n    }\n}\n","/**\n * Internally used container for a slot (A callback function with a calling context).\n */\nclass Slot<T = unknown> {\n    public constructor(public callback: (value: T) => void, public context?: object) {}\n    public call(value: T): void {\n        this.callback.call(this.context, value);\n    }\n}\n\n/**\n * Light-weight and very fast signal/slot based event system. Just create a signal instance, connect slots\n * (event listeners) to it and then let the signal emit values which are then send to all connected slots.\n * Slots can be methods and it's easy to disconnect them again using the disconnect() method or calling the function\n * returned by connect().\n */\nexport class Signal<T = void> {\n    private readonly slots: Slot<T>[] = [];\n    private readonly onInit: ((signal: Signal<T>) => (() => void) | void) | null;\n    private onDone: ((signal: Signal<T>) => void) | null = null;\n\n    /**\n     * Creates a new signal with the given optional initialization function.\n     *\n     * @param onInit - Optional initialization function which is called when the first slot is connected to the signal.\n     *                 This function can return an optional deinitialization function which is called after the last\n     *                 slot has been disconnected.\n     */\n    public constructor(onInit?: (signal: Signal<T>) => (() => void) | void) {\n        this.onInit = onInit ?? null;\n    }\n\n    /**\n     * Connects a slot to this signal.\n     *\n     * @param callback - The slot callback function to call when signal emits a value.\n     * @param context  - Optional context to call the slot callback function on. This is useful for connecting methods.\n     * @return A function which can be called to disconnect the slot from the signal again.\n     */\n    public connect(callback: (value: T) => void, context?: object): () => void {\n        if (this.onInit != null && this.slots.length === 0) {\n            this.onDone = this.onInit(this) || null;\n        }\n        this.slots.push(new Slot(callback, context));\n        return () => this.disconnect(callback, context);\n    }\n\n    /**\n     * Disconnects a slot from this signal.\n     *\n     * @param callback - The slot callback function to disconnect from the signal.\n     * @param context  - Optional context. Needed to disconnect methods.\n     */\n    public disconnect(callback: (value: T) => void, context?: object): void {\n        const index = this.slots.findIndex(slot => slot.callback === callback && slot.context === context);\n        if (index >= 0) {\n            this.slots.splice(index, 1);\n        }\n        if (this.onDone != null && this.slots.length === 0) {\n            this.onDone(this);\n            this.onDone = null;\n        }\n    }\n\n    /**\n     * Disconnects all slots from this signal.\n     */\n    public clear(): void {\n        if (this.slots.length > 0) {\n            this.slots.length = 0;\n            if (this.onDone != null) {\n                this.onDone(this);\n                this.onDone = null;\n            }\n        }\n    }\n\n    /**\n     * Emits the given value to all connected slots.\n     *\n     * @param value - The value to emit.\n     */\n    public emit(value: T): void {\n        this.slots.forEach(slot => slot.call(value));\n    }\n\n    /**\n     * Returns a new signal which only emits the values matching the giving predicate.\n     *\n     * @parm predicate - The function which decides if the value is emitted or not.\n     * @return The new signal.\n     */\n    public filter(predicate: (value: T) => boolean): Signal<T> {\n        return new Signal(signal => this.connect(value => {\n            if (predicate(value)) {\n                signal.emit(value);\n            }\n        }));\n    }\n\n    /**\n     * Returns a new signal which maps all emitted values to something else.\n     *\n     * @param mapper - The function which maps the original value to something new.\n     * @return The new signal.\n     */\n    public map<R>(mapper: (value: T) => R): Signal<R> {\n        return new Signal<R>(signal => this.connect(value => {\n            return signal.emit(mapper(value));\n        }));\n    }\n}\n","/**\n * Decorator for caching method results. The method is only called on cache miss and then the returned result\n * is cached. Subsequent calls then return the cached result immediately without executing the method until the\n * cache is reset with `delete obj.method`.\n */\nexport function cacheResult(target: Record<string, any>, propertyKey: string,\n        descriptor: TypedPropertyDescriptor<() => any>): void {\n    const origMethod = target[propertyKey] as () => void;\n    descriptor.value = function(this: unknown) {\n        const origValue = origMethod.call(this) as unknown;\n        Object.defineProperty(this, propertyKey, {\n            configurable: true,\n            value: () => origValue\n        });\n        return origValue;\n    };\n}\n","const { PI, cos, sin } = Math;\n\nexport type Easing = (t: number) => number;\n\nexport function linear(t: number): number {\n    return t;\n}\n\nexport function easeInSine(t: number): number {\n    return 1 - cos(t * PI / 2);\n}\n\nexport function easeOutSine(t: number): number {\n    return sin(t * PI / 2);\n}\n\nexport function easeInOutSine(t: number): number {\n    return 0.5 - cos(PI * t) / 2;\n}\n\nexport function easeInQuad(t: number): number {\n    return t * t;\n}\n\nexport function easeOutQuad(t: number): number {\n    return t * (2 - t);\n}\n\nexport function easeInOutQuad(t: number): number {\n    if (t < 0.5) {\n        return 2 * t * t;\n    } else {\n        return 4 * t - 2 * t * t - 1;\n    }\n}\n\nexport function easeInCubic(t: number): number {\n    return t ** 3;\n}\n\nexport function easeOutCubic(t: number): number {\n    return t ** 3 + 3 * (t - t * t);\n}\n\nexport function easeInOutCubic(t: number): number {\n    if (t < 0.5) {\n        return 4 * t ** 3;\n    } else {\n        return 4 * t ** 3 + 12 * (t - t * t) - 3;\n    }\n}\n\nexport function easeInQuart(t: number): number {\n    return t ** 4;\n}\n\nexport function easeOutQuart(t: number): number {\n    return 1 - (t - 1) ** 4;\n}\n\nexport function easeInOutQuart(t: number): number {\n    if (t < 0.5) {\n        return 8 * t ** 4;\n    } else {\n        return 1 - 8 * (t - 1) ** 4;\n    }\n}\n\nexport function easeInQuint(t: number): number {\n    return t ** 5;\n}\n\nexport function easeOutQuint(t: number): number {\n    return 1 + (t - 1) ** 5;\n}\n\nexport function easeInOutQuint(t: number): number {\n    if (t < 0.5) {\n        return 16 * t ** 5;\n    } else {\n        return 1 + 16 * (t - 1) ** 5;\n    }\n}\n\nexport function easeInExpo(t: number): number {\n    if (t <= 0) { return 0; }\n    return 2 ** (10 * (t - 1));\n}\n\nexport function easeOutExpo(t: number): number {\n    if (t >= 1) {\n        return 1;\n    }\n    return 1 - 1 / 1024 ** t;\n}\n\nexport function easeInOutExpo(t: number): number {\n    if (t <= 0) {\n        return 0;\n    }\n    if (t >= 1) {\n        return 1;\n    }\n    if (t < 0.5) {\n        return 1048576 ** t / 2048;\n    } else {\n        return 1 - 512 / 1048576 ** t;\n    }\n}\n\nexport function easeInCirc(t: number): number {\n    return 1 - (1 - t * t) ** 0.5;\n}\n\nexport function easeOutCirc(t: number): number {\n    return (2 * t - t * t) ** 0.5;\n}\n\nexport function easeInOutCirc(t: number): number {\n    if (t < 0.5) {\n        return 0.5 - (0.25 - t * t) ** 0.5;\n    } else {\n        return ((4 * t * (2 - t) - 3) ** 0.5 + 1) / 2;\n    }\n}\n\nexport function easeInBack(t: number): number {\n    return 2.70158 * t ** 3 - 1.70158 * t * t;\n}\n\nexport function easeOutBack(t: number): number {\n    return 2.70158 * t ** 3 - 6.40316 * t * t + 4.70158 * t;\n}\n\nexport function easeInOutBack(t: number): number {\n    if (t < 0.5) {\n        return 14.379638 * t ** 3 - 5.189819 * t * t;\n    } else {\n        return 14.379638 * t ** 3 - 37.949095 * t * t + 32.759276 * t - 8.189819;\n    }\n}\n\nexport function easeInElastic(t: number): number {\n    if (t <= 0) {\n        return 0;\n    }\n    if (t >= 1) {\n        return 1;\n    }\n    return 1024 ** (t - 1) * -sin(PI * (20 * t / 3 - 43 / 6));\n}\n\nexport function easeOutElastic(t: number): number {\n    if (t <= 0) {\n        return 0;\n    }\n    if (t >= 1) {\n        return 1;\n    }\n    return sin(PI * (20 * t / 3 - 0.5)) / (1024 ** t) + 1;\n}\n\nexport function easeInOutElastic(t: number): number {\n    if (t <= 0) {\n        return 0;\n    }\n    if (t >= 1) {\n        return 1;\n    }\n    if (t < 0.5) {\n        return 1048576 ** t / -2048 * sin(PI * (80 * t / 9 - 89 / 18));\n    } else {\n        return 512 / 1048576 ** t * sin(PI * (80 * t / 9 - 89 / 18)) + 1;\n    }\n}\n\nexport function easeOutBounce(t: number): number {\n    if (t < 4 / 11) {\n        return 121 * t * t / 16;\n    } else if (t < 8 / 11) {\n        return 121 * t * t / 16 - 33 * t / 4 + 3;\n    } else if (t < 10 / 11) {\n        return 121 * t * t / 16 - 99 * t / 8 + 6;\n    } else {\n        return 121 * t * t / 16 - 231 * t / 16 + 63 / 8;\n    }\n}\n\nexport function easeInBounce(t: number): number {\n    return 1 - easeOutBounce(1 - t);\n}\n\nexport function easeInOutBounce(t: number): number {\n    if (t < 0.5) {\n        return easeInBounce(t * 2) / 2;\n    } else {\n        return easeOutBounce(t * 2 - 1) / 2 + 0.5;\n    }\n}\n","\n/** Cached result of [[isLittleEndian]] function */\nlet littleEndian: boolean | null = null;\n\n/**\n * Checks if runtime is little endian.\n *\n * @return True if little endian, false if not.\n */\nexport function isLittleEndian(): boolean {\n    return littleEndian ?? (littleEndian = new Uint16Array(new Uint8Array([ 0x12, 0x34 ]).buffer)[0] === 0x3412);\n}\n\nexport function isElectron(): boolean {\n    return !!navigator.userAgent.match(/\\belectron\\b/i);\n}\n\n/**\n * Figures out if development mode is enabled or not.\n */\nexport function isDev(): boolean {\n    // Legacy behavior.\n    if (window.location.port === \"8000\") {\n        return true;\n    }\n\n    if (!!window.location.search) {\n        return !!window.location.search.substr(1).split(\"&\").find(key => {\n            if (key.toLowerCase().startsWith(\"dev\")) {\n                return key.length === 3 || key.endsWith(\"=true\");\n            }\n            return false;\n        });\n    }\n\n    return false;\n}\n","export async function loadImage(source: string | URL): Promise<HTMLImageElement> {\n    const img = new Image();\n    return new Promise<HTMLImageElement>((resolve, reject) => {\n        img.onload = () => {\n            resolve(img);\n        };\n        img.onerror = () => {\n            reject(new Error(`Unable to load image '${source}'`));\n        };\n        img.src = source instanceof URL ? source.href : `assets/${source}`;\n    });\n}\n\nexport function createCanvas(width: number, height: number): HTMLCanvasElement {\n    const canvas = document.createElement(\"canvas\")!;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    return canvas;\n}\n\nexport function getRenderingContext(canvas: HTMLCanvasElement, contextId: \"2d\",\n    options?: CanvasRenderingContext2DSettings): CanvasRenderingContext2D;\nexport function getRenderingContext(canvas: HTMLCanvasElement, contextId: string, options?: unknown): RenderingContext {\n    const ctx = canvas.getContext(contextId, options);\n    if (ctx == null) {\n        throw new Error(`Canvas doesn't support context with id '${contextId}'`);\n    }\n    return ctx;\n}\n\nexport function createContext2D(width: number, height: number): CanvasRenderingContext2D {\n    return getRenderingContext(createCanvas(width, height), \"2d\");\n}\n\nexport function getImageData(image: HTMLImageElement): ImageData {\n    const ctx = createContext2D(image.width, image.height);\n    ctx.drawImage(image, 0, 0, image.width, image.height);\n\n    return ctx.getImageData(0, 0, image.width, image.height);\n}\n","export function clamp(v: number, min: number, max: number): number {\n    return v < min ? min : v > max ? max : v;\n}\n\nexport function orientPow(v: number, exp: number): number {\n    if (v < 0) {\n        return -((-v) ** exp);\n    } else {\n        return v ** exp;\n    }\n}\n\n/** Factor to convert radians to degrees. */\nconst RAD_TO_DEG = 180 / Math.PI;\n\n/**\n * Converts degrees to radians.\n *\n * @param degrees - The value in degrees to convert to radians.\n * @return The given value converted to radians.\n */\nexport function radians(degrees: number): number {\n    return degrees / RAD_TO_DEG;\n}\n\n/**\n * Converts radians to degrees.\n *\n * @param radians - The value in radians to convert to degrees.\n * @return The given value converted to degrees.\n */\nexport function degrees(radians: number): number {\n    return radians * RAD_TO_DEG;\n}\n\n/**\n * Normalizes an angle in radians so it is between 0 (inclusive) and 2*PI (exclusive).\n *\n * @param degrees - The angle to normalize.\n * @return The normalized angle.\n */\nexport function normalizeRadians(angle: number): number {\n    const pi2 = Math.PI * 2;\n    return ((angle % pi2) + pi2) % pi2;\n}\n\n/**\n * Normalizes an angle in degrees so it is between 0 (inclusive) and 360 (exclusive).\n *\n * @param degrees - The angle to normalize.\n * @return The normalized angle.\n */\nexport function normalizeDegrees(degrees: number): number {\n    return ((degrees % 360) + 360) % 360;\n}\n","export function rnd(minOrMax = 1, max?: number): number {\n    if (max != null) {\n        return minOrMax + Math.random() * (max - minOrMax);\n    } else {\n        return Math.random() * minOrMax;\n    }\n}\n\nexport function rndInt(minOrMax: number, max?: number): number {\n    if (max != null) {\n        return Math.floor(minOrMax + Math.random() * (max - minOrMax));\n    } else {\n        return Math.floor(Math.random() * minOrMax);\n    }\n}\n\nexport function rndItem(array: any[] | string) {\n    const index = Math.floor(Math.random() * array.length);\n\n    return array[index];\n}\n\nexport function timedRnd(dt: number, averageDelay: number): number {\n    let count = 0;\n    let chance = dt - Math.random() * averageDelay;\n\n    while (chance > 0) {\n        count++;\n        chance -= Math.random() * averageDelay;\n    }\n\n    return count;\n}\n","/**\n * Formats a number to a string. The returned string is never in scientific notation so the string may get\n * pretty long. NaN und infinite numbers are rejected because they can't be represented as a numerical string.\n *\n * @param value   - The numeric value to convert.\n * @param options - Optional number format options. Defaults to english fullwide locale, not using number grouping\n *                  and using 6 maximum fraction digits.\n * @return The numerical string.\n */\nexport function formatNumber(value: number, options?: Intl.NumberFormatOptions & { locales?: string | string[] }):\n        string {\n    if (isNaN(value)) {\n        throw new Error(\"Unable to convert NaN to string\");\n    }\n    if (!isFinite(value)) {\n        throw new Error(\"Unable convert infinite value to string\");\n    }\n    return value.toLocaleString(options?.locales ?? [ \"fullwide\", \"en\" ],\n        { useGrouping: false, maximumFractionDigits: 6, ...options });\n}\n\n/**\n * Converts the given value into a hex string.\n *\n * @param value  - The decimal value to convert.\n * @param length - The minimum length of the created hex string. Missing digits are filled with 0.\n * @return The hex string.\n */\nexport function toHex(value: number, length = 0): string {\n    const hex = (value >>> 0).toString(16);\n    return \"0\".repeat(Math.max(0, length - hex.length)) + hex;\n}\n","const timeDelta = Date.now() - performance.now();\n\nexport function now(): number {\n    return performance.now() + timeDelta;\n}\n\nexport async function sleep(ms = 0): Promise<void> {\n    await new Promise((resolve) => {\n        setTimeout(() => resolve(), ms);\n    });\n}\n","\n\nexport class Dialog {\n    public lines: DialogLine[];\n\n    public constructor(lines: string[]) {\n        this.lines = lines.map(DialogLine.fromString);\n    }\n}\n\nexport class DialogLine {\n    public charNum: number;\n    public line: string;\n\n    public constructor(charNum: number, line: string) {\n        this.charNum = charNum;\n        this.line = line;\n    }\n\n    public static fromString(s: string) {\n        const charNum = +s[0] - 1;\n        const line = s.substr(1).trim();\n        return new DialogLine(charNum, line);\n    }\n}\n","import { SceneNode } from \"../engine/scene/SceneNode\";\nimport { PlayerNode } from \"./nodes/PlayerNode\";\n\nexport class DoorHandler {\n    private static theInstance: DoorHandler = new DoorHandler();\n\n    private lastUsage: number = 0;\n    // Delay between two door activations, in seconds\n    private usageDelay: number = 4;\n\n    private constructor() {\n    }\n\n    public transportToDoor(player: PlayerNode, door: SceneNode, currentTime: number): boolean {\n        if (this.isReady(currentTime)) {\n            this.lastUsage = currentTime;\n            this.performTeleportation(player, door);\n            return true;\n        }\n        return false;\n    }\n\n    private performTeleportation(player: PlayerNode, door: SceneNode) {\n        // TODO fade out/in music as well\n        // Fade out\n        const scene = player.getScene();\n        const camera = scene?.camera;\n        camera?.fadeToBlack.fadeOut({ duration: 0.8 }).then(() => {\n            // Teleport\n            player.setX(door.getX());\n            player.setY(door.getY());\n        });\n        // Fade in\n        setTimeout(() => {\n            camera?.fadeToBlack.fadeIn({ duration: 0.8 });\n        }, 1200);\n    }\n\n    public isReady(currentTime: number): boolean {\n        return currentTime - this.lastUsage > this.usageDelay;\n    }\n\n    public static getInstance() {\n        return DoorHandler.theInstance;\n    }\n}\n","import { DialogJSON } from \"*.dialog.json\";\nimport { asset } from \"../engine/assets/Assets\";\nimport { Sound } from \"../engine/assets/Sound\";\nimport { RGBColor } from \"../engine/color/RGBColor\";\nimport { Game } from \"../engine/Game\";\nimport { Vector2 } from \"../engine/graphics/Vector2\";\nimport { Camera } from \"../engine/scene/Camera\";\nimport { FadeToBlack } from \"../engine/scene/camera/FadeToBlack\";\nimport { SceneNode } from \"../engine/scene/SceneNode\";\nimport { clamp } from \"../engine/util/math\";\nimport { rnd } from \"../engine/util/random\";\nimport { Dialog } from \"./Dialog\";\nimport { MusicManager } from \"./MusicManager\";\nimport { CharacterNode } from \"./nodes/CharacterNode\";\nimport { CollisionNode } from \"./nodes/CollisionNode\";\nimport { LightNode } from \"./nodes/LightNode\";\nimport { NpcNode } from \"./nodes/NpcNode\";\nimport { PlayerNode } from \"./nodes/PlayerNode\";\nimport { SpawnNode } from \"./nodes/SpawnNode\";\nimport { SwitchNode } from \"./nodes/SwitchNode\";\nimport { TrainNode } from \"./nodes/TrainNode\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { LoadingScene } from \"./scenes/LoadingScene\";\n\nexport enum GameStage {\n    NONE = 0,\n    INTRO = 1,\n    DRIVE = 2,\n    BRAKE = 3,\n    DIALOG = 4,\n    STUCK = 5,\n    RETURN = 6 // all done, returned into train\n}\n\nexport class Hyperloop extends Game {\n\n    @asset(\"sounds/fx/hyperloopBrakes.ogg\")\n    private static brakeSound: Sound;\n\n    @asset(\"sounds/loops/hyperloopDrone.ogg\")\n    private static droneSound: Sound;\n\n    private stageStartTime = 0;\n    private stageTime = 0;\n    private trainSpeed = 1000; // px per second\n    private totalBrakeTime = 0; // calculated later; seconds train requires to brake down to standstill\n    private playerTeleportLeft = 1100; // leftest point in tunnel where player is teleported\n    private playerTeleportRight = 2970; // rightest point in tunnel where player is teleported\n    private teleportStep = 108; // distance between two tunnel lights\n    private teleportMyTrainYDistance = 50; // only teleport when player is on roughly same height as train, not in rest of level\n    private dialogs: Dialog[] = [];\n    private npcs: CharacterNode[] = [];\n\n    // Game progress\n    private charactersAvailable = 4;\n    private gameStage = GameStage.NONE;\n    public keyTaken = false; // key taken from corpse\n    public fuseboxOn = false;\n    private fadeOutInitiated = false;\n\n    // Dialog\n    private dialogKeyPressed = false;\n    private currentDialogLine = 0;\n    private currentDialog: Dialog | null = null;\n\n    @asset(\"dialog/train.dialog.json\")\n    private static readonly trainDialog: DialogJSON;\n\n    @asset(\"dialog/train2.dialog.json\")\n    private static readonly train2Dialog: DialogJSON;\n\n    public constructor() {\n        super();\n    }\n\n    // Called by GameScene\n    public setupScene(): void {\n        this.spawnNPCs();\n        this.setStage(GameStage.INTRO);\n        // Assets cannot be loaded in constructor because the LoadingScene\n        // is not initialized at constructor time and Assets are loaded in the LoadingScene\n        this.dialogs = [\n            new Dialog(Hyperloop.trainDialog),\n            new Dialog(Hyperloop.train2Dialog)\n        ];\n\n        Hyperloop.droneSound.setVolume(0.5);\n        Hyperloop.droneSound.setLoop(true);\n        Hyperloop.droneSound.play();\n    }\n\n    public update(dt: number, time: number): void {\n        this.stageTime = time - this.stageStartTime;\n        switch (this.gameStage) {\n            case GameStage.INTRO:\n                this.updateIntro();\n                break;\n            case GameStage.DRIVE:\n                this.updateDrive();\n                break;\n            case GameStage.BRAKE:\n                this.updateBrake(dt);\n                break;\n            case GameStage.DIALOG:\n                this.updateConversation();\n                break;\n            case GameStage.STUCK:\n                this.updateStuck();\n                break;\n            case GameStage.RETURN:\n                this.updateReturn(dt);\n                break;\n        }\n        if (this.currentDialog) {\n            this.updateDialog();\n        }\n        super.update(dt, time);\n    }\n\n    public setStage(stage: GameStage): void {\n        if (stage !== this.gameStage) {\n            this.gameStage = stage;\n            this.stageStartTime = this.getTime();\n            switch(this.gameStage) {\n                case GameStage.INTRO:\n                    this.initIntro();\n                    break;\n                case GameStage.DRIVE:\n                    this.initDrive();\n                    break;\n                case GameStage.BRAKE:\n                    break;\n                case GameStage.DIALOG:\n                    this.initConversation();\n                    break;\n                case GameStage.STUCK:\n                    this.initStuck();\n                    break;\n                case GameStage.RETURN:\n                    break;\n            }\n        }\n    }\n\n    private spawnNPCs(): void {\n        const train = this.getTrain();\n        const chars = [ new NpcNode(0), new NpcNode(1), new NpcNode(2), new NpcNode(3), new NpcNode(4) ];\n        const positions = [ -80, -40, 24, 60, 123 ];\n        for (let i = 0; i < chars.length; i++) {\n            chars[i].moveTo(positions[i], -20).appendTo(train);\n        }\n        this.npcs = chars;\n    }\n\n    public turnOffAllLights() {\n        const lights = this.getAllLights();\n        for (const light of lights) {\n            light.setColor(new RGBColor(0, 0, 0));\n        }\n        const ambients = this.getAmbientLights();\n        for (const ambient of ambients) {\n            ambient.setColor(new RGBColor(0.01, 0.01, 0.01));\n        }\n    }\n\n    public turnAllLightsRed() {\n        const lights = this.getAllLights();\n        for (const light of lights) {\n            light.setColor(new RGBColor(1, 0.1, 0.08));\n        }\n        const ambients = this.getAmbientLights();\n        for (const ambient of ambients) {\n            ambient.setColor(new RGBColor(0.05, 0.03, 0.03));\n        }\n    }\n\n    public turnOnAllLights() {\n        const lights = this.getAllLights();\n        for (const light of lights) {\n            light.setColor(new RGBColor(0.8, 0.8, 1));\n        }\n        const ambients = this.getAmbientLights();\n        for (const ambient of ambients) {\n            ambient.setColor(new RGBColor(0.3, 0.3, 0.35));\n        }\n    }\n\n    private updateDialog(): void {\n        // Any key to proceed with next line\n        const pressed = this.input.currentActiveIntents ?? 0;\n        const prevPressed = this.dialogKeyPressed;\n        this.dialogKeyPressed = pressed !== 0;\n        if (pressed && !prevPressed) {\n            this.nextDialogLine();\n        }\n    }\n\n    private nextDialogLine() {\n        // Shut up all characters\n        this.npcs.forEach(npc => npc.say());\n        this.currentDialogLine++;\n        if (this.currentDialog && this.currentDialogLine >= this.currentDialog.lines.length) {\n            this.currentDialog = null;\n            this.currentDialogLine = 0;\n        } else if (this.currentDialog) {\n            // Show line\n            const line = this.currentDialog.lines[this.currentDialogLine];\n            const char = this.npcs[line.charNum];\n            char.say(line.line, Infinity);\n        }\n    }\n\n    private startDialog(num: number) {\n        this.currentDialog = this.dialogs[num];\n        this.currentDialogLine = -1;\n        this.nextDialogLine();\n    }\n\n    private updateIntro(): void {\n        // TODO have proper intro with text and/or sound to explain situation to player\n        // Proceed to next stage\n        if (this.stageTime > 1) {\n            // Fade in\n            this.setStage(GameStage.DRIVE);\n            return;\n        }\n    }\n\n    private updateDrive(): void {\n        if (!this.currentDialog) {\n            Hyperloop.droneSound.stop();\n            Hyperloop.brakeSound.play();\n            this.setStage(GameStage.BRAKE);\n            // Compute total break time so that train ends up in desired position\n            const train = this.getTrain();\n            const targetX = 1800;\n            const distance = targetX - train.getScenePosition().x;\n            this.totalBrakeTime = distance / (this.trainSpeed / 2);\n            return;\n        }\n        // Driving illusion\n        const train = this.getTrain();\n        const offsetX = this.getTime() * this.trainSpeed;\n        train.setX(450 + (offsetX % 324)); // 108px between two tunnel lights\n        this.handleCamera(1, this.stageTime / 2);\n    }\n\n    private updateBrake(dt: number): void {\n        const progress = this.stageTime / this.totalBrakeTime;\n        if (progress >= 1.1) {\n            this.setStage(GameStage.DIALOG);\n        } else if (progress < 1) {\n            const speed = this.trainSpeed * (1 - progress);\n            const train = this.getTrain();\n            train.setX(train.getX() + speed * dt);\n            const shakeIntensity = 1 - progress + Math.sin(Math.PI * progress) * 2;\n            this.handleCamera(shakeIntensity, 1);\n        }\n    }\n\n    private conversationEndTime = 0;\n    private updateConversation(): void {\n        if (!this.currentDialog) {\n            if (!this.conversationEndTime) {\n                this.conversationEndTime = this.getTime();\n            } else {\n                const p = (this.getTime() - this.conversationEndTime) / 3;\n                this.handleCamera(0, 1 - p);\n                if (p >= 1.3) {\n                    this.setStage(GameStage.STUCK);\n                }\n            }\n        } else {\n            this.handleCamera(0, 1);\n        }\n    }\n\n    private updateStuck(): void {\n        // This is the main game, with gameplay and stuff\n        // Ensure player doesn't reach end of tunnel\n        const player = this.getPlayer();\n        const pos = player.getScenePosition();\n        if (Math.abs(pos.y - this.getTrain().getScenePosition().y) < this.teleportMyTrainYDistance) {\n            let move = 0;\n            if (pos.x < this.playerTeleportLeft) {\n                move = this.teleportStep;\n            } else if (pos.x > this.playerTeleportRight) {\n                move = -this.teleportStep;\n            }\n            if (move !== 0) {\n                player.setX(player.getX() + move);\n            }\n        }\n    }\n\n    private updateReturn(dt: number) {\n        const train = this.getTrain();\n        // Drive off\n        if (this.stageTime > 5) {\n            const progress = clamp((this.stageTime - 5.5) / 10, 0, 1);\n            const speed = this.trainSpeed * progress;\n            train.setX(train.getX() + speed * dt);\n        }\n        this.handleCamera(this.stageTime > 5 ? 1 : 0, this.stageTime / 3);\n        // Driving illusion\n        const pos = train.getScenePosition().x;\n        if (pos > 3100) {\n            train.setX(pos - this.teleportStep * 2);\n        }\n        // Fade out\n        if (this.stageTime > 12 && !this.fadeOutInitiated) {\n            this.fadeOutInitiated = true;\n            this.getFader().fadeOut({ duration: 12 });\n            // TODO switch to credits scene here\n        }\n    }\n\n    private handleCamera(shakeForce = 0, toCenterForce = 1): void {\n        const cam = this.getCamera();\n        // Force towards center\n        toCenterForce = clamp(toCenterForce, 0, 1);\n        const p = 0.5 - 0.5 * Math.cos(toCenterForce * Math.PI);\n        const trainX = this.getTrain().getScenePosition().x;\n        const playerX = this.getPlayer().getScenePosition().x;\n        const diff = playerX - trainX;\n        // Shake\n        const angle = rnd(Math.PI * 2);\n        const distance = rnd(shakeForce) ** 3;\n        const dx = distance * Math.sin(angle), dy = distance * Math.cos(angle);\n        cam.transform(m => m.setTranslation(diff * p + dx, dy));\n    }\n\n    public initIntro(): void {\n        // Place player into train initially\n        const player = this.getPlayer();\n        const train = this.getTrain();\n        player.moveTo(25, 50).appendTo(train);\n        // Make him stuck\n        const col = new CollisionNode({ width: 400, height: 20 });\n        col.moveTo(-20, -20).appendTo(train);\n    }\n\n    public initDrive(): void {\n        this.startDialog(0);\n    }\n\n    public initConversation(): void {\n        this.startDialog(1);\n    }\n\n    public initStuck(): void {\n        // Place player into world\n        const player = this.getPlayer();\n        const train = this.getTrain();\n        const pos = player.getScenePosition();\n        player.remove().moveTo(pos.x, pos.y).appendTo(train.getParent() as SceneNode<Hyperloop>);\n        train.hideInner();\n        MusicManager.getInstance().loopTrack(1);\n        // Power switch behavior\n        const powerSwitch = this.getGameScene().getNodeById(\"PowerSwitch\");\n        if (powerSwitch && powerSwitch instanceof SwitchNode) {\n            powerSwitch.setOnlyOnce(true);\n            powerSwitch.setOnUpdate((state: boolean) => {\n                player.say(\"Doesn't appear to do anything... yet\", 4, 0.5);\n                return false;\n            });\n        } else {\n            throw new Error(\"No PowerSwitch found! Game not beatable that way :(\");\n        }\n        // Spawn enemies at random subset of spawn points behind \"first encounter\"\n        SpawnNode.getForTrigger(player, \"after\", true).forEach(s => {\n            if (rnd() < 0.6) s.spawnEnemy();\n        });\n    }\n\n    public spawnNewPlayer(): void {\n        if (this.charactersAvailable > 0) {\n            this.charactersAvailable--;\n            // TODO get proper spawn position\n            const player = this.getPlayer();\n            const spawnPoint = this.getTrainDoorCoordinate();\n            // TODO leave remains of old player\n            player.moveTo(spawnPoint.x, spawnPoint.y);\n            player.setHitpoints(100);\n            player.setAmmoToFull();\n            player.reset();\n            this.getCamera().setFollow(player);\n            // Spawn enemies at random subset of spawn points behind \"first encounter\"\n            SpawnNode.getForTrigger(player, \"after\", true).forEach(s => {\n                if (rnd() < 0.25) s.spawnEnemy();\n            });\n            SpawnNode.getForTrigger(player, \"before\", true).forEach(s => {\n                if (rnd() < 0.25) s.spawnEnemy();\n            });\n        } else {\n            // Game Over or sequence of new train replacing old one\n        }\n    }\n\n    public getTrainDoorCoordinate(): Vector2 {\n        const coord = this.getTrain().getScenePosition();\n        return new Vector2(coord.x - 170, coord.y + 38);\n    }\n\n    public turnOnFuseBox() {\n        this.fuseboxOn = true;\n        this.turnAllLightsRed();\n        this.getCamera().setZoom(1);\n        // Enable power switch\n        const powerSwitch = this.getGameScene().getNodeById(\"PowerSwitch\");\n        if (powerSwitch && powerSwitch instanceof SwitchNode) {\n            powerSwitch.setOnUpdate((state: boolean) => {\n                this.turnOnAllLights();\n                const player = this.getPlayer();\n                player.say(\"Great. Time to go home.\", 4, 1);\n                // Activate game end zone\n                const doorPos = this.getTrainDoorCoordinate();\n                const endSwitch = new SwitchNode({\n                    x: doorPos.x,\n                    y: doorPos.y,\n                    onlyOnce: true,\n                    onUpdate: () => {\n                        this.winGame();\n                        return true;\n                    }\n                });\n                endSwitch.setCaption(\"PRESS E TO ENTER\");\n                player.getParent()?.appendChild(endSwitch);\n                // Spawn the enemies\n                SpawnNode.getForTrigger(player, \"afterSwitch\", true).forEach(s => s.spawnEnemy());\n                return true;\n            });\n        } else {\n            throw new Error(\"No PowerSwitch found! Game not beatable that way :(\");\n        }\n    }\n\n    public winGame(): void {\n        // Kill all enemies\n        this.getPlayer().getPersonalEnemies().forEach(e => e.die());\n        this.setStage(GameStage.RETURN);\n        // Move player into train\n        const player = this.getPlayer();\n        const train = this.getTrain();\n        const pos = player.getScenePosition();\n        const trainPos = train.getScenePosition();\n        player.moveTo(pos.x - trainPos.x, pos.y - trainPos.y);\n        player.remove().appendTo(train);\n        train.showInner();\n        MusicManager.getInstance().loopTrack(3);\n        // TODO player follow NPC\n    }\n\n    public getPlayer(): PlayerNode {\n        return this.getGameScene().rootNode.getDescendantsByType(PlayerNode)[0];\n    }\n\n    public getTrain(): TrainNode {\n        return this.getGameScene().rootNode.getDescendantsByType(TrainNode)[0];\n    }\n\n    public getGameScene(): GameScene {\n        const scene = this.scenes.getScene(GameScene);\n        if (!scene) {\n            throw new Error(\"GameScene not available\");\n        }\n        return scene;\n    }\n\n    public getFader(): FadeToBlack {\n        return this.getCamera().fadeToBlack;\n    }\n\n    public getCamera(): Camera {\n        return this.getGameScene().camera;\n    }\n\n    public getAmbientLights(lights = this.getAllLights()): LightNode[] {\n        return lights.filter(light => light.getId()?.includes(\"ambient\"));\n    }\n\n    public getAllLights(): LightNode[] {\n        return this.getGameScene().rootNode.getDescendantsByType(LightNode);\n    }\n}\n\n(async () => {\n    const game = new Hyperloop();\n    await game.scenes.setScene(LoadingScene);\n    (window as any).game = game;\n    game.start();\n})();\n","/** Width of the game in pixels. */\nexport const GAME_WIDTH = 384;\n\n/** Height of the game in pixels. */\nexport const GAME_HEIGHT = 216;\n\n/** Fonts */\nexport const STANDARD_FONT = \"fonts/pixcelsior.font.json\";\n\n/** Gravity in m/s² */\nexport const GRAVITY = 35;\n\n/** Layers */\nexport enum Layer {\n    BACKGROUND = 0,\n    DEFAULT = 1,\n    FOREGROUND = 2,\n    LIGHT = 3,\n    OVERLAY = 4,\n    DIALOG = 5,\n    HUD = 6\n}\n","import { Rect } from \"../../engine/geom/Rect\";\nimport { SceneNode } from \"../../engine/scene/SceneNode\";\nimport { Hyperloop } from \"../Hyperloop\";\n\nexport class CameraLimitNode extends SceneNode<Hyperloop> {\n    public update(): void {\n        const scene = this.getScene();\n        if (scene != null) {\n            const player = scene.getNodeById(\"Player\");\n            if (player != null && player === scene.camera.getFollow()) {\n                if (this.collidesWithNode(player)) {\n                    scene.camera.setLimits(new Rect(this.x, this.y, this.width, this.height));\n                }\n            }\n        }\n    }\n}\n","import { asset } from \"../../engine/assets/Assets\";\nimport { BitmapFont } from \"../../engine/assets/BitmapFont\";\nimport { Sound } from \"../../engine/assets/Sound\";\nimport { ReadonlyVector2, Vector2, Vector2Like } from \"../../engine/graphics/Vector2\";\nimport { AsepriteNode, AsepriteNodeArgs } from \"../../engine/scene/AsepriteNode\";\nimport { TextNode } from \"../../engine/scene/TextNode\";\nimport { cacheResult } from \"../../engine/util/cache\";\nimport { clamp } from \"../../engine/util/math\";\nimport { rnd } from \"../../engine/util/random\";\nimport { Layer, STANDARD_FONT } from \"../constants\";\nimport { Hyperloop } from \"../Hyperloop\";\nimport { CollisionNode } from \"./CollisionNode\";\nimport { InteractiveNode } from \"./InteractiveNode\";\nimport { MarkLineNode } from \"./MarkLineNode\";\nimport { MarkNode } from \"./MarkNode\";\nimport { ParticleNode, valueCurves } from \"./ParticleNode\";\nimport { PlayerArmNode } from \"./player/PlayerArmNode\";\nimport { PlayerLegsNode } from \"./player/PlayerLegsNode\";\n\n// TODO define in some constants file\nconst GRAVITY = 800;\nconst PROJECTILE_STEP_SIZE = 2;\n\nexport abstract class CharacterNode extends AsepriteNode<Hyperloop> {\n    @asset(\"sounds/fx/gunshot.ogg\")\n    private static readonly shootSound: Sound;\n\n    @asset(STANDARD_FONT)\n    private static readonly dialogFont: BitmapFont;\n\n    protected playerLeg?: PlayerLegsNode;\n    protected playerArm?: PlayerArmNode;\n    private preventNewTag = false;\n    private gameTime = 0;\n\n    // Character settings\n    public abstract getShootingRange(): number;\n    public abstract getSpeed(): number;\n    public abstract getAcceleration(): number;\n    public abstract getDeceleration(): number;\n    public abstract getJumpPower(): number;\n\n    // Dynamic player state\n    protected updateTime = 0;\n    protected direction = 0;\n    protected velocity: Vector2;\n    protected isOnGround = true;\n    protected isJumping = false;\n    protected isFalling = true;\n    protected hitpoints = 100;\n    protected removeOnDie = true;\n    protected debug = false;\n    private canInteractWith: InteractiveNode | null = null;\n    protected battlemode = false;\n    private battlemodeTimeout = 2000;\n    private battlemodeTimeoutTimerId: number | null = null;\n    private storedCollisionCoordinate: Vector2 = new Vector2(0, 0);\n\n    // Talking/Thinking\n    private speakSince = 0;\n    private speakUntil = 0;\n    private speakLine = \"\";\n\n    protected bloodEmitter: ParticleNode;\n    protected sparkEmitter: ParticleNode;\n    private particleOffset: Vector2 = new Vector2(0, 0);\n    private particleAngle = 0;\n\n    private textNode: TextNode;\n\n    public constructor(args: AsepriteNodeArgs) {\n        super(args);\n        this.velocity = new Vector2(0, 0);\n        // this.setShowBounds(true);\n\n        this.bloodEmitter = new ParticleNode({\n            offset: () => this.particleOffset,\n            velocity: () => {\n                const speed = rnd(20, 50);\n                const angle = this.particleAngle + rnd(-1, 1) * rnd(0, Math.PI / 2) * rnd(0, 1) ** 2;\n                return {\n                    x: speed * Math.cos(angle),\n                    y: speed * Math.sin(angle)\n                };\n            },\n            color: () => `rgb(${rnd(100,240)}, ${rnd(0, 30)}, 0)`,\n            size: rnd(1, 3),\n            gravity: {x: 0, y: -100},\n            lifetime: () => rnd(0.5, 1),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        }).appendTo(this);\n        this.sparkEmitter = new ParticleNode({\n            offset: () => this.particleOffset,\n            velocity: () => {\n                const speed = rnd(40, 80);\n                const angle = this.particleAngle + Math.PI + rnd(-1, 1) * rnd(0, Math.PI / 2) * rnd(0, 1) ** 2;\n                return {\n                    x: speed * Math.cos(angle),\n                    y: speed * Math.sin(angle)\n                };\n            },\n            color: () => {\n                const g = rnd(130, 255), r = g + rnd(rnd(255 - g)), b = rnd(g);\n                return `rgb(${r}, ${g}, ${b})`;\n            },\n            size: rnd(0.7, 1.8),\n            gravity: {x: 0, y: -100},\n            lifetime: () => rnd(0.5, 0.9),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        }).appendTo(this);\n\n        this.textNode = new TextNode({\n            font: CharacterNode.dialogFont,\n            color: \"white\",\n            outlineColor: \"black\",\n            y: -20,\n            layer: Layer.OVERLAY\n        }).appendTo(this);\n    }\n\n    public update(dt: number, time: number): void {\n        super.update(dt, time);\n        this.gameTime = time;\n        this.updateTime = time;\n        this.preventNewTag = this.getTag() === \"die\" && this.getTimesPlayed(\"die\") === 0\n            || this.getTag() === \"hurt\" && this.getTimesPlayed(\"hurt\") === 0\n            || this.getTag() === \"attack\" && this.getTimesPlayed(\"attack\") === 0;\n\n        // Death animation\n        if (!this.isAlive()) {\n            this.setTag(\"die\");\n            if (this.getTimesPlayed(\"die\") > 0 && this.removeOnDie) {\n                this.remove();\n            }\n            return;\n        }\n        // Acceleration\n        let vx = 0;\n        const tractionFactor = this.isOnGround ? 1 : 0.4;\n        if (this.direction !== 0) {\n            // Accelerate\n            this.setTag(\"walk\");\n            vx = clamp(this.velocity.x + this.direction * tractionFactor * this.getAcceleration() * dt,\n                    -this.getSpeed(), this.getSpeed());\n        } else {\n            // Brake down\n            this.setTag(\"idle\");\n            if (this.velocity.x > 0) {\n                vx = clamp(this.velocity.x - tractionFactor * this.getDeceleration() * dt, 0, Infinity);\n            } else {\n                vx = clamp(this.velocity.x + tractionFactor * this.getDeceleration() * dt, -Infinity, 0);\n            }\n        }\n\n        // Gravity\n        const vy = this.velocity.y + GRAVITY * dt;\n        this.velocity = new Vector2(vx, vy);\n\n        // Movement\n        this.isOnGround = false;\n        const x = this.getX(), y = this.getY();\n        if (this.velocity.x !== 0 || this.velocity.y !== 0) {\n            let newX = x + this.velocity.x * dt,\n                newY = y + this.velocity.y * dt;\n            // X collision\n            if (this.getPlayerCollisionAt(newX, y)) {\n                newX = x;\n                this.velocity = new Vector2(0, this.velocity.y);\n            }\n            // Y collision\n            if (this.getPlayerCollisionAt(newX, newY)) {\n                this.isOnGround = (this.velocity.y > 0);\n                if (this.isOnGround) {\n                    this.isJumping = false;\n                    this.isFalling = false;\n                } else if (!this.isJumping) {\n                    this.isFalling = true;\n                }\n                newY = y;\n                this.velocity = new Vector2(this.velocity.x, 0);\n            }\n            // Apply\n            if (newX !== x || newY !== y) {\n                this.setX(newX);\n                this.setY(newY);\n            }\n        }\n        if (this.isJumping) {\n            this.setTag(\"jump\");\n        }\n        if (this.isFalling) {\n            this.setTag(\"fall\");\n        }\n        // Talking/Thinking\n        if (this.speakLine && time > this.speakUntil) {\n            this.speakLine = \"\";\n            this.speakUntil = 0;\n            this.speakSince = 0;\n        }\n\n        if (this.speakLine && this.gameTime > this.speakSince && this.gameTime < this.speakUntil) {\n            const progress = (this.gameTime - this.speakSince);\n            const line = this.speakLine.substr(0, Math.ceil(28 * progress));\n            this.textNode.setText(line);\n        } else {\n            this.textNode.setText(\"\");\n        }\n    }\n\n    public setDirection(direction = 0): void {\n        this.direction = direction;\n        if (this.direction !== 0) {\n            this.setMirrorX(this.direction < 0);\n        }\n    }\n\n    public jump(factor = 1): void {\n        if (this.isOnGround && this.isAlive()) {\n            this.velocity = new Vector2(this.velocity.x, -this.getJumpPower() * factor);\n            this.isJumping = true;\n        }\n    }\n\n    public shoot(angle: number, power: number, origin: Vector2Like = new Vector2(this.getScenePosition().x, this.getScenePosition().y - this.getHeight() * .5)): void {\n        this.startBattlemode();\n        CharacterNode.shootSound.stop();\n        CharacterNode.shootSound.play();\n        const diffX = Math.cos(angle) * this.getShootingRange();\n        const diffY = Math.sin(angle) * this.getShootingRange();\n        const isColliding = this.getLineCollision(origin.x, origin.y, diffX, diffY, PROJECTILE_STEP_SIZE);\n        if (isColliding) {\n            const coord = this.storedCollisionCoordinate;\n            if (this.debug) {\n                const markNode = new MarkNode({x: coord.x, y: coord.y});\n                const markLineNode = new MarkLineNode(new Vector2(origin.x, origin.y), coord);\n                this.getParent()?.appendChild(markNode);\n                this.getParent()?.appendChild(markLineNode);\n            }\n            if (isColliding instanceof CharacterNode) {\n                const bounds = isColliding.getSceneBounds();\n                const headshot = (coord.y < bounds.minY + 0.25 * (bounds.height));\n                const damage = headshot ? (2.4 * power) : power;\n                isColliding.hurt(damage, this.getScenePosition());\n                // Blood particles at hurt character\n                isColliding.emitBlood(coord.x, coord.y, angle, headshot ? 30 : 10);\n            } else {\n                this.emitSparks(coord.x, coord.y, angle);\n            }\n        }\n    }\n\n    public emitBlood(x: number, y: number, angle: number, count = 1): void {\n        const pos = this.getScenePosition();\n        this.particleOffset = new Vector2(x - pos.x, y - pos.y + 20);\n        this.particleAngle = -angle;\n        this.bloodEmitter.emit(count);\n    }\n\n    public emitSparks(x: number, y: number, angle: number): void {\n        const pos = this.getScenePosition();\n        this.particleOffset = new Vector2(x - pos.x, y - pos.y + 20);\n        this.particleAngle = -angle;\n        this.sparkEmitter.emit(rnd(4, 10));\n    }\n\n    protected getLineCollision(x1: number, y1: number, dx: number, dy: number, stepSize = 5): CharacterNode | CollisionNode | null {\n        let isColliding: CharacterNode | CollisionNode | null = null;\n        const nextCheckPoint = new Vector2(x1, y1);\n        const length = Math.sqrt(dx * dx + dy * dy);\n        const steps = Math.ceil(length / stepSize);\n        const stepX = dx / steps, stepY = dy / steps;\n        const enemies = this.getPersonalEnemies();\n        const colliders = this.getColliders();\n        for (let i = 0; i <= steps; i++) {\n            isColliding = this.getPointCollision(nextCheckPoint.x, nextCheckPoint.y, enemies, colliders);\n            nextCheckPoint.add({ x: stepX, y: stepY });\n            if (isColliding) {\n                this.storedCollisionCoordinate = nextCheckPoint;\n                return isColliding;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Deal damage to the character.\n     *\n     * @param damage - Damage dealt, number > 0\n     * @return True if hurt character dies, false otherwise.\n     */\n    public hurt(damage: number, origin: ReadonlyVector2): boolean {\n        if (!this.isAlive()) {\n            return false;\n        }\n        // TODO reduce hit points or kill or something\n        // Pushback\n        const direction = origin.x > this.getX() ? -1 : 1;\n        const pushForce = damage * 5;\n        this.velocity = new Vector2(pushForce * direction, this.velocity.y - pushForce * 0.1);\n        // Damage\n        this.hitpoints -= damage;\n        if (this.hitpoints <= 0) {\n            this.die();\n            return true;\n        } else {\n            this.setTag(\"hurt\");\n            this.startBattlemode();\n        }\n        return false;\n    }\n\n    public setHitpoints(hp: number): void {\n        this.hitpoints = hp;\n    }\n\n    public reset(): void {\n        this.velocity = new Vector2(0, 0);\n        this.setTag(\"idle\");\n    }\n\n    public say(line = \"\", duration = 0, delay = 0): void {\n        this.speakSince = this.gameTime + delay;\n        this.speakUntil = this.speakSince + duration;\n        this.speakLine = line;\n    }\n\n    public setTag(tag: string | null): this {\n        if (!this.preventNewTag) {\n            super.setTag(tag);\n            this.playerLeg?.setTag(tag);\n            this.playerArm?.setTag(tag);\n        }\n        return this;\n    }\n\n    public die(): void {\n        this.endBattlemode();\n        this.setTag(\"die\");\n        this.hitpoints = 0;\n    }\n\n    public isAlive(): boolean {\n        return this.hitpoints > 0;\n    }\n\n    public isInBattlemode(): boolean {\n        return this.battlemode;\n    }\n\n    protected startBattlemode(): void {\n        this.battlemode = true;\n        // refresh timer\n        this.clearBattlemodeTimer();\n        this.battlemodeTimeoutTimerId = <any>setTimeout(() => {\n                this.endBattlemode();\n            }, this.battlemodeTimeout);\n    }\n\n    protected endBattlemode(): void {\n        if (!this.battlemode) {\n            return;\n        }\n        this.clearBattlemodeTimer();\n        this.battlemode = false;\n    }\n\n    private clearBattlemodeTimer(): void {\n        if (this.battlemodeTimeoutTimerId) {\n            clearInterval(this.battlemodeTimeoutTimerId);\n            this.battlemodeTimeoutTimerId = null;\n        }\n    }\n\n    private getPlayerCollisionAt(x = this.getX(), y = this.getY()): boolean {\n        // Level collision\n        const colliders = this.getColliders();\n        const bounds = this.getSceneBounds();\n        const w = bounds.width, h = bounds.height;\n        const px = bounds.minX + x - this.getX(), py = bounds.minY + y - this.getY();\n        return colliders.some(c => c.collidesWithRectangle(px, py, w, h));\n    }\n\n    private getPointCollision(x: number, y: number, enemies = this.getPersonalEnemies(),\n            colliders = this.getColliders()): CollisionNode | CharacterNode | null {\n        // Enemies\n        for (const c of enemies) {\n            if (c.containsPoint(x, y)) {\n                return c;\n            }\n        }\n        // Level\n        for (const c of colliders) {\n            if (c.containsPoint(x, y)) {\n                return c;\n            }\n        }\n        return null;\n    }\n\n    @cacheResult\n    private getColliders(): CollisionNode[] {\n        const colliders = this.getScene()?.rootNode.getDescendantsByType(CollisionNode) ?? [];\n        return colliders;\n    }\n\n    public abstract getPersonalEnemies(): CharacterNode[];\n\n    public getClosestPersonalEnemy(): CharacterNode | null {\n        const enemies = this.getPersonalEnemies();\n        const selfPos = this.getScenePosition();\n        let bestDis = Infinity, closest: CharacterNode | null = null;\n        for (const e of enemies) {\n            const dis2 = e.getScenePosition().getSquareDistance(selfPos);\n            if (dis2 < bestDis) {\n                bestDis = dis2;\n                closest = e;\n            }\n        }\n        return closest;\n    }\n\n    public getHeadPosition(): Vector2 {\n        const p = this.getScenePosition();\n        const h = this.height;\n        return new Vector2(p.x, p.y - h * 0.8);\n    }\n\n    public containsPoint(x: number, y: number): boolean {\n        const {minX, minY, maxX, maxY} = this.getSceneBounds();\n        return x >= minX && x <= maxX && y >= minY && y <= maxY;\n    }\n\n    public registerInteractiveNode(node: InteractiveNode): void {\n        this.canInteractWith = node;\n    }\n\n    public unregisterInteractiveNode(node: InteractiveNode): void {\n        if (this.canInteractWith === node) {\n            this.canInteractWith = null;\n        }\n    }\n\n    public getNodeToInteractWith(): InteractiveNode | null {\n        return this.canInteractWith;\n    }\n}\n","import { Direction } from \"../../engine/geom/Direction\";\nimport { Bounds2 } from \"../../engine/graphics/Bounds2\";\nimport { SceneNode, SceneNodeArgs } from \"../../engine/scene/SceneNode\";\nimport { Hyperloop } from \"../Hyperloop\";\n\nexport class CollisionNode extends SceneNode<Hyperloop> {\n    public constructor(args?: SceneNodeArgs) {\n        super({ anchor: Direction.TOP_LEFT, ...args });\n        // this.setShowBounds(true);\n    }\n\n    public store: string = \"\";\n\n    public collidesWithRectangle(x1: Bounds2): boolean;\n    public collidesWithRectangle(x1: number, y1: number, x2: number, y2: number): boolean;\n    public collidesWithRectangle(x1: number | Bounds2, y1: number = 0, w: number = 0, h: number = 0): boolean {\n        const bounds = this.getBounds();\n        const minX = bounds.minX + this.getX(), minY = bounds.minY + this.getY(), maxX = bounds.maxX + this.getX(),\n                maxY = bounds.maxY + this.getY();\n        if (x1 instanceof Bounds2) {\n            y1 = x1.minY;\n            w = x1.width;\n            h = x1.height;\n            x1 = x1.minX;\n        }\n        return minX <= x1 + w && maxX >= x1 && minY <= y1 + h && maxY >= y1;\n    }\n\n    public containsPoint(x: number, y: number): boolean {\n        const bounds = this.getBounds();\n        const minX = bounds.minX + this.getX(), minY = bounds.minY + this.getY(), maxX = bounds.maxX + this.getX(),\n                maxY = bounds.maxY + this.getY();\n        return x >= minX && x <= maxX && y >= minY && y <= maxY;\n    }\n}\n","import { Aseprite } from \"../../engine/assets/Aseprite\";\nimport { Direction } from \"../../engine/geom/Direction\";\nimport { InteractiveNode } from \"./InteractiveNode\";\nimport { asset } from \"../../engine/assets/Assets\";\nimport { SceneNodeArgs } from \"../../engine/scene/SceneNode\";\nimport { Sound } from \"../../engine/assets/Sound\";\nimport { MusicManager } from \"../MusicManager\";\n\nexport class CorpseNode extends InteractiveNode {\n    @asset(\"sprites/corpse.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sounds/fx/breakerSwitch.ogg\")\n    private static readonly lightSound: Sound;\n\n    @asset(\"sounds/fx/pickupKey.ogg\")\n    private static readonly pickupSound: Sound;\n\n    private keyTaken = false;\n\n    public constructor(args: SceneNodeArgs) {\n        super({\n            aseprite: CorpseNode.sprite,\n            anchor: Direction.BOTTOM,\n            tag: \"off\",\n            ...args\n        }, \"PRESS E TO SEARCH CORPSE\");\n    }\n\n    public interact(): void {\n        if (this.canInteract()) {\n            // TODO play some neat key take sound\n            this.keyTaken = true;\n            this.getGame().keyTaken = true;\n            CorpseNode.pickupSound.play();\n            const player = this.getTarget();\n            player?.say(\"This key will surely be useful\", 3, 0.5);\n            setTimeout(() => {\n                CorpseNode.lightSound.play();\n                this.getGame().turnOffAllLights();\n                MusicManager.getInstance().loopTrack(2);\n                const game = this.getGame();\n                const fader = game.getFader();\n                fader.fadeOut({ duration: 0.1 }).then(() => {\n                    fader.fadeIn({ duration: 2 });\n                });\n                // Deactivated until better solution? 1.5 looks really shitty\n                // game.getCamera().setZoom(1.5);\n                player?.say(\"Uh oh...\", 3, 1.5);\n            }, 5000);\n        }\n    }\n\n    public canInteract(): boolean {\n        return !this.keyTaken;\n    }\n\n}\n","import { Aseprite } from \"../../engine/assets/Aseprite\";\nimport { DoorHandler } from \"../DoorHandler\";\nimport { InteractiveNode } from \"./InteractiveNode\";\nimport { SceneNode } from \"../../engine/scene/SceneNode\";\nimport { Sound } from \"../../engine/assets/Sound\";\nimport { TiledSceneArgs } from \"../../engine/scene/TiledMapNode\";\nimport { asset } from \"../../engine/assets/Assets\";\n\nexport class DoorNode extends InteractiveNode {\n    @asset(\"sounds/fx/metalDoor.mp3\")\n    private static readonly doorSound: Sound;\n\n    @asset(\"sprites/rat.aseprite.json\")\n    private static sprite: Aseprite;\n    private isLocked = false;\n    private gameTime = 0;\n    private targetId = \"\";\n    private name = \"\";\n\n    public constructor(args?: TiledSceneArgs) {\n        super({\n            aseprite: DoorNode.sprite,\n            ...args\n        }, \"PRESS E TO ENTER\");\n        this.targetId = args?.tiledObject?.getOptionalProperty(\"target\", \"string\")?.getValue() ?? \"\";\n        this.name = args?.tiledObject?.getName() ?? \"\";\n        this.hideSprite = true;\n    }\n\n    public interact(): void {\n        if (this.canInteract()) {\n            const player = this.getPlayer();\n            if (player) {\n                const target = this.getTargetNode();\n                if (target) {\n                    DoorHandler.getInstance().transportToDoor(player, target, this.gameTime);\n                    DoorNode.doorSound.stop();\n                    DoorNode.doorSound.play();\n                }\n            }\n        }\n    }\n\n    public update(dt: number, time: number): void {\n        super.update(dt, time);\n        this.gameTime = time;\n    }\n\n    public canInteract(): boolean {\n        return DoorHandler.getInstance().isReady(this.gameTime) && !this.isLocked;\n    }\n\n    public setLocked(locked: boolean): this {\n        this.isLocked = locked;\n        return this;\n    }\n\n    public getLocked(): boolean {\n        return this.isLocked;\n    }\n\n    private getTargetNode(): SceneNode | null {\n        const target = this.getScene()?.rootNode.getDescendantsByType(DoorNode)\n                .filter(door => door.name === this.targetId)[0] ?? null;\n        return target;\n    }\n\n}\n","import { ReadonlyVector2, Vector2 } from \"../../engine/graphics/Vector2\";\nimport { clamp } from \"../../engine/util/math\";\nimport { rnd } from \"../../engine/util/random\";\nimport { now } from \"../../engine/util/time\";\nimport { CharacterNode } from \"./CharacterNode\";\nimport { PlayerNode } from \"./PlayerNode\";\n\n\nexport enum AiState {\n    BORED = 0,\n    FOLLOW = 1,\n    ATTACK = 2,\n    ALERT = 3,\n    MOVE_AROUND = 4,\n}\n\nexport abstract class EnemyNode extends CharacterNode {\n\n    // Character settings\n    protected shootingRange = 150;\n    protected speed = 100;\n    protected acceleration = 600;\n    protected deceleration = 900;\n    protected jumpPower = 380;\n\n    /** How far enemy can see player while idling */\n    protected squaredViewDistance = 120 ** 2;\n\n    /** How far enemy can hear player while idling */\n    protected squaredHearDistance = 200 ** 2;\n\n    /** If a shot was fired within the hearDuration from now, the enemy shall start chasing */\n    protected hearDuration = 500;\n\n    /** How far enemy can see player while chasing him */\n    protected squaredAlertViewDistance = 160 ** 2;\n\n    /** Distance to target position where enemy stops moving further */\n    protected squaredPositionThreshold = 20 ** 2;\n\n    /** Distance to player required for a successful melee attack */\n    protected squaredAttackDistance = 20 ** 2;\n\n    /** ms it takes for enemy to attack player */\n    protected attackDelay = 0.3;\n\n    protected alertedBy: \"VIEW\" | \"SOUND\" = \"VIEW\";\n    private timeOfAlert = 0;\n    private readonly stopFollowBySoundDelay = 2000;\n\n    protected state: AiState = AiState.BORED;\n\n    private lastStateChange = 0;\n\n    // look direction change delays in seconds\n    protected LOW_ALERT_CHANGE_DELAY = 3;\n    protected HIGH_ALERT_CHANGE_DELAY = 0.5;\n    protected lastLookDirectionChange = 0;\n\n    protected minAlertDuration = 10;\n\n    protected squaredMoveAroundDistance = 10 ** 2;\n\n    /**\n     * set to false, if after chase an enemy should transfer to ALERT,\n     * set to true - for MOVE_AROUND\n     */\n    protected moveAroundAfterChase = false;\n\n    protected abstract targetPosition: ReadonlyVector2;\n    protected moveAroundAnchor: Vector2 = new Vector2(0, 0);\n\n    public getShootingRange(): number {\n        return this.shootingRange;\n    }\n    public getSpeed(): number {\n        return this.speed;\n    }\n    public getAcceleration(): number {\n        return this.acceleration;\n    }\n    public getDeceleration(): number {\n        return this.deceleration;\n    }\n    public getJumpPower(): number {\n        return this.jumpPower;\n    }\n\n    public update(dt: number, time: number) {\n        super.update(dt, time);\n        this.updateAi(dt, time);\n    }\n\n    // default ai implementation\n    protected updateAi(dt: number, time: number) {\n        if (!this.isAlive()) {\n            this.setDirection(0);\n            return;\n        }\n        // AI\n        switch (this.state) {\n            case AiState.BORED:\n            case AiState.ALERT:\n                this.updateSearch(time);\n                break;\n            case AiState.FOLLOW:\n                this.updateFollow(time);\n                break;\n            case AiState.ATTACK:\n                this.updateAttack(time);\n                break;\n            case AiState.MOVE_AROUND:\n                this.updateMoveAround(time);\n                break;\n        }\n\n        // Move to target\n        if (this.getPosition().getSquareDistance(this.targetPosition) > this.squaredPositionThreshold) {\n            if (this.getX() > this.targetPosition.x) {\n                this.setDirection(-1);\n            } else {\n                this.setDirection(1);\n            }\n        } else {\n            this.setDirection(0);\n        }\n    }\n\n    protected getPlayer(): PlayerNode | undefined {\n        const player = this.getScene()?.rootNode.getDescendantsByType(PlayerNode)[0];\n        return player?.isAlive() ? player : undefined;\n    }\n\n    protected scream(): void {\n        // implementation is in the monster nodes\n    }\n\n    protected updateSearch(time: number): void {\n        // Check distance to player\n        const player = this.getPlayer();\n        if (player) {\n            if (this.canSeeOrHearPlayer(player)) {\n                // Player spotted!\n                this.setState(AiState.FOLLOW);\n                this.targetPosition = player.getPosition();\n                this.scream();\n                return;\n            }\n        }\n        if (this.state === AiState.ALERT || this.state === AiState.BORED) {\n            // randomly change looking direction\n            const lookDirectionChangeDelay = this.state === AiState.ALERT ? this.HIGH_ALERT_CHANGE_DELAY : this.LOW_ALERT_CHANGE_DELAY;\n            const chance = this.state === AiState.ALERT ? 20 : 5;\n            if (rnd(1, 100) < chance && this.lastLookDirectionChange + lookDirectionChangeDelay < time) {\n                this.setMirrorX(!this.isMirrorX());\n                this.lastLookDirectionChange = time;\n            }\n        }\n\n        // check if it is time to be bored or alerted\n        if (this.state !== AiState.BORED\n            && rnd(1, 100) < 5 && this.lastStateChange + this.minAlertDuration < time) {\n            // first transfer to alert and from alert to bored state\n            const newState = this.state === AiState.ALERT ? AiState.BORED : AiState.ALERT;\n            this.setState(newState);\n            this.setDirection(0);\n        }\n    }\n\n    protected updateFollow(time: number): void {\n        const player = this.getPlayer();\n        // Update target position if seeing player\n        if (player) {\n            // Update target if in sight\n            const squaredDistance = player.getPosition().getSquareDistance(this.getPosition());\n            if ((this.alertedBy === \"SOUND\" && now() - this.timeOfAlert < this.stopFollowBySoundDelay)\n                || squaredDistance < this.squaredAlertViewDistance) {\n                // Player spotted!\n                this.setState(AiState.FOLLOW);\n                this.targetPosition = player.getPosition();\n                // Hurt player\n                if (squaredDistance < this.squaredAttackDistance) {\n                    this.tryToAttack();\n                }\n            } else {\n                // Player too far away\n                if (this.moveAroundAfterChase) {\n                    // move around a bit before transferring to ALERT\n                    this.setState(AiState.MOVE_AROUND);\n                    //this.setDirection(this.direction * -1);\n                    this.moveAroundAnchor.setVector(this.targetPosition);\n                } else {\n                    // stay ALERT, and look around actively\n                    this.setState(AiState.ALERT);\n                    this.setDirection(0);\n                }\n            }\n        }\n    }\n\n    protected updateAttack(time: number): void {\n        if (time > this.lastStateChange + this.attackDelay) {\n            // Hurt player\n            const player = this.getPlayer();\n            const playerDied = player?.hurt(clamp(Math.floor(Math.random() * 30), 5, 30), this.getScenePosition());\n            this.scream();\n            if (playerDied) {\n                this.setState(AiState.BORED);\n                this.setDirection(0);\n                return;\n            }\n            // Return to follow state\n            this.setState(AiState.FOLLOW);\n        }\n    }\n\n    protected setState(state: AiState, time: number = this.updateTime): void {\n        if (this.state !== state) {\n            this.state = state;\n            this.lastStateChange = time;\n        }\n        if (this.getTag() === \"hurt\" || this.getTag() === \"die\") {\n            return;\n        }\n        switch (state) {\n            case AiState.ALERT:\n            case AiState.BORED:\n                this.setTag(\"idle\");\n                break;\n            case AiState.ATTACK:\n                this.setTag(\"attack\");\n                break;\n            case AiState.FOLLOW:\n            case AiState.MOVE_AROUND:\n                this.setTag(\"walk\");\n                break;\n        }\n    }\n\n    protected tryToAttack(): boolean {\n        this.setState(AiState.ATTACK);\n        return true;\n    }\n\n    public hurt(damage: number, origin: ReadonlyVector2): boolean {\n        if (!super.hurt(damage, origin)) {\n            this.setTag(\"hurt\");\n            const pl = this.getPlayer();\n            if (pl) {\n                this.targetPosition = pl.getScenePosition();\n                this.setState(AiState.FOLLOW);\n            }\n            return false;\n        }\n        this.setTag(\"die\");\n        return true;\n    }\n\n    protected stopAndWaitTs = 0;\n    protected stopAndWaitDelaySec = 2;\n    protected moveTs = 0;\n    protected moveDelaySec = 0.2;\n\n\n    protected updateMoveAround(time: number): void {\n        if (this.getPosition().getSquareDistance(this.moveAroundAnchor) > this.squaredMoveAroundDistance) {\n            if (this.stopAndWaitTs === 0) {\n                if (this.moveTs + this.moveDelaySec < time) {\n                    this.setDirection(0);\n                    this.stopAndWaitTs = time;\n                }\n            } else if (this.stopAndWaitTs + this.stopAndWaitDelaySec < time) {\n                if (this.getX() > this.moveAroundAnchor.x) {\n                    this.setDirection(-1);\n                } else {\n                    this.setDirection(1);\n                }\n                this.stopAndWaitTs = 0;\n                this.moveTs = time;\n            }\n        }\n        this.updateSearch(time);\n    }\n\n    public getPersonalEnemies(): PlayerNode[] {\n        const enemies = this.getScene()?.rootNode.getDescendantsByType(PlayerNode) ?? [];\n        return enemies;\n    }\n\n    private isLookingInPlayerDirection(player = this.getPlayer()): boolean {\n        return player != null && ((this.getX() > player.getPosition().x) === this.isMirrorX());\n    }\n\n    public canSeeOrHearPlayer(player = this.getPlayer()): boolean {\n        if (!player) {\n            return false;\n        }\n        const squaredDistance = player.getPosition().getSquareDistance(this.getPosition());\n        const origin = this.getHeadPosition(), target = player.getHeadPosition();\n        const couldHearPlayer = (now() - player.getLastShotTime()) < this.hearDuration && squaredDistance < this.squaredHearDistance;\n        const couldViewPlayer = this.isLookingInPlayerDirection(player) && squaredDistance < this.squaredViewDistance;\n        const isColliding = this.getLineCollision(origin.x, origin.y, target.x - origin.x, target.y - origin.y) === player;\n        if (isColliding) {\n            this.alertedBy = couldHearPlayer ? \"SOUND\" : \"VIEW\";\n            this.timeOfAlert = now();\n        }\n        return couldHearPlayer || (couldViewPlayer && isColliding);\n    }\n}\n","import { Aseprite } from \"../../engine/assets/Aseprite\";\nimport { Direction } from \"../../engine/geom/Direction\";\nimport { InteractiveNode } from \"./InteractiveNode\";\nimport { SceneNodeArgs } from \"../../engine/scene/SceneNode\";\nimport { Sound } from \"../../engine/assets/Sound\";\nimport { asset } from \"../../engine/assets/Assets\";\nimport { SpawnNode } from \"./SpawnNode\";\n\nexport class FuseboxNode extends InteractiveNode {\n    @asset(\"sprites/fuse.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sounds/fx/electricLever.ogg\")\n    private static readonly leverSound: Sound;\n\n    @asset(\"sounds/fx/metalDoorOpen.ogg\")\n    private static readonly doorSound: Sound;\n\n    private isOpen = false;\n    private isOn = false;\n\n    public constructor(args: SceneNodeArgs) {\n        super({\n            aseprite: FuseboxNode.sprite,\n            anchor: Direction.BOTTOM,\n            tag: \"closed\",\n            ...args\n        }, \"PRESS E TO USE KEY\");\n    }\n\n    public interact(): void {\n        if (this.canInteract()) {\n            if (!this.isOpen) {\n                this.isOpen = true;\n                this.setTag(\"open-off\");\n                this.caption = \"PRESS E TO TURN ON\";\n                FuseboxNode.doorSound.play();\n                this.getTarget()?.say(\"Let's turn it on\", 2);\n                // Spawn enemy in back\n                SpawnNode.getForTrigger(this, \"fusebox\").forEach(spawn => spawn.spawnEnemy());\n            } else {\n                this.isOn = true;\n                this.setTag(\"open-on\");\n                const game = this.getGame();\n                game.turnOnFuseBox();\n                this.getTarget()?.say(\"Time to find that switch\", 5, 8);\n                FuseboxNode.doorSound.stop();\n                FuseboxNode.leverSound.play();\n            }\n        }\n    }\n\n    public canInteract(): boolean {\n        return this.isOpen && !this.isOn || !this.isOpen && this.getGame().keyTaken;\n    }\n\n}\n","\nimport { asset } from \"../../engine/assets/Assets\";\nimport { BitmapFont } from \"../../engine/assets/BitmapFont\";\nimport { AsepriteNode, AsepriteNodeArgs } from \"../../engine/scene/AsepriteNode\";\nimport { TextNode } from \"../../engine/scene/TextNode\";\nimport { clamp } from \"../../engine/util/math\";\nimport { Layer, STANDARD_FONT } from \"../constants\";\nimport { Hyperloop } from \"../Hyperloop\";\nimport { CharacterNode } from \"./CharacterNode\";\nimport { PlayerNode } from \"./PlayerNode\";\n\nexport abstract class InteractiveNode extends AsepriteNode<Hyperloop> {\n    @asset(STANDARD_FONT)\n    private static readonly font: BitmapFont;\n\n    private target: CharacterNode | null = null;\n    protected caption: string;\n    private captionOpacity = 0;\n    protected hideSprite = false;\n    private textNode: TextNode;\n\n    public constructor(args: AsepriteNodeArgs, caption: string = \"\") {\n        super(args);\n        this.caption = caption;\n\n        this.textNode = new TextNode({\n            font: InteractiveNode.font,\n            color: \"white\",\n            outlineColor: \"black\",\n            y: 20,\n            layer: Layer.OVERLAY\n        }).appendTo(this);\n    }\n\n    public setCaption(caption: string): void {\n        this.caption = caption;\n    }\n\n    protected getRange(): number {\n        return 50;\n    }\n\n    public update(dt: number, time: number): void {\n        let target = null;\n        if (this.canInteract()) {\n            const player = this.getPlayer();\n            if (player) {\n                const dis = player.getScenePosition().getSquareDistance(this.getScenePosition());\n                if (dis < this.getRange() ** 2) {\n                    target = player;\n                }\n            }\n        }\n        this.setTarget(target);\n\n        if (this.target) {\n            this.captionOpacity = clamp(this.captionOpacity + dt * 2, 0, 1);\n        } else {\n            this.captionOpacity = clamp(this.captionOpacity - dt * 2, 0, 1);\n        }\n\n        this.textNode.setOpacity(this.captionOpacity);\n        this.textNode.setText(this.caption);\n    }\n\n    public abstract interact(): void;\n\n    public canInteract(): boolean {\n        return true;\n    }\n\n    private setTarget(target: CharacterNode | null): void {\n        if (target !== this.target) {\n            if (this.target) {\n                this.target.unregisterInteractiveNode(this);\n            }\n            this.target = target;\n            if (this.target) {\n                this.target.registerInteractiveNode(this);\n            }\n        }\n    }\n\n    public getTarget(): CharacterNode | null {\n        return this.target;\n    }\n\n    protected getPlayer(): PlayerNode | undefined {\n        return this.getScene()?.rootNode.getDescendantsByType(PlayerNode)[0];\n    }\n\n    public draw(context: CanvasRenderingContext2D): void {\n        if (!this.hideSprite) {\n            super.draw(context);\n        }\n    }\n}\n","import { Color } from \"../../engine/color/Color\";\nimport { RGBColor } from \"../../engine/color/RGBColor\";\nimport { Direction } from \"../../engine/geom/Direction\";\nimport { Polygon2 } from \"../../engine/graphics/Polygon2\";\nimport { Vector2 } from \"../../engine/graphics/Vector2\";\nimport { SceneNode, SceneNodeAspect } from \"../../engine/scene/SceneNode\";\nimport { TiledSceneArgs } from \"../../engine/scene/TiledMapNode\";\nimport { createCanvas, getRenderingContext } from \"../../engine/util/graphics\";\nimport { radians } from \"../../engine/util/math\";\nimport { Hyperloop } from \"../Hyperloop\";\n\nexport function intensifyColor(color: RGBColor, f: number): Color {\n    let r = f * color.getRed(), g = f * color.getGreen(), b = f * color.getBlue();\n    if (r > 1) {\n        g += (r - 1) / 2;\n        b += (r - 1) / 2;\n        r = 1;\n    }\n    if (g > 1) {\n        r += (g - 1) / 2;\n        b += (b - 1) / 2;\n        g = 1;\n    }\n    if (b > 1) {\n        r += (b - 1) / 2;\n        g += (b - 1) / 2;\n        b = 1;\n    }\n    return new RGBColor(r, g, b);\n}\n\nexport class LightNode extends SceneNode<Hyperloop> {\n    private color: Color;\n    private readonly polygon: Polygon2 | null;\n    private readonly intensity: number;\n    private readonly spin: number;\n    private gradient: CanvasGradient | null = null;\n\n    public constructor(args?: TiledSceneArgs) {\n        super({ anchor: Direction.TOP_LEFT, ...args });\n        this.color = args?.tiledObject?.getOptionalProperty(\"color\", \"color\")?.getValue() ?? new RGBColor(1, 1, 1);\n        this.polygon = args?.tiledObject?.getPolygon() ?? null;\n        this.intensity = args?.tiledObject?.getOptionalProperty(\"intensity\", \"int\")?.getValue() ?? 100;\n        this.spin = args?.tiledObject?.getOptionalProperty(\"spin\", \"float\")?.getValue() ?? 0;\n        this.updateGradient();\n    }\n\n    private updateGradient(): void {\n        if (this.polygon === null && this.width !== 0 && this.height !== 0) {\n            this.gradient = null;\n        } else {\n            const colors: Color[] = [];\n            const color = this.color.toRGB();\n            const steps = 16;\n            const overshoot = 0.5;\n            for (let step = 0; step < steps; step++) {\n                const p = (1 + overshoot) * (1 - step / steps) ** 8;\n                const col = intensifyColor(color, p);\n                colors.push(col);\n            }\n            colors.push(new RGBColor(0, 0, 0));\n\n            const canvas = createCanvas(8, 8);\n            const ctx = getRenderingContext(canvas, \"2d\");\n            const origin = this.polygon?.vertices[0] ?? new Vector2(0, 0);\n            const intensity = this.polygon == null ? this.intensity / 2 : this.intensity;\n            this.gradient = ctx.createRadialGradient(origin.x, origin.y, 0, origin.x, origin.y, intensity);\n            for (let i = 0, count = colors.length - 1; i <= count; i++) {\n                this.gradient.addColorStop(i / count, colors[i].toString());\n            }\n        }\n    }\n\n    public setColor(color: Color): this {\n        if (this.color !== color) {\n            this.color = color;\n            this.updateGradient();\n            this.invalidate(SceneNodeAspect.RENDERING);\n        }\n        return this;\n    }\n\n    public updateBoundsPolygon(bounds: Polygon2) {\n        if (this.polygon != null) {\n            for (const vertex of this.polygon.vertices) {\n                bounds.addVertex(vertex);\n            }\n        } else {\n            super.updateBoundsPolygon(bounds);\n        }\n    }\n\n    public update(dt: number) {\n        if (this.spin !== 0) {\n            this.transform(m => {\n                const v = this.polygon?.vertices[0];\n                if (v) {\n                    m.translate(v.x, v.y);\n                }\n                m.rotate(radians(this.spin) * dt);\n                if (v) {\n                    m.translate(-v.x, -v.y);\n                }\n            });\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        ctx.beginPath();\n        const intensity = this.intensity;\n        const width = this.getWidth();\n        const height = this.getHeight();\n        ctx.fillStyle = this.gradient ?? this.color.toString();\n        if (this.polygon != null) {\n            this.polygon.draw(ctx);\n        } else if (width === 0 && height === 0) {\n            const halfIntensity = intensity / 2;\n            ctx.ellipse(0, 0, halfIntensity, halfIntensity, 0, 0, Math.PI * 2, true);\n        } else {\n            ctx.rect(0, 0, width, height);\n        }\n        ctx.fill();\n        ctx.restore();\n    }\n}\n","import { SceneNode, SceneNodeArgs } from \"../../engine/scene/SceneNode\";\nimport { Layer } from \"../constants\";\nimport { Hyperloop } from \"../Hyperloop\";\n\n\nexport class MarkNode extends SceneNode<Hyperloop> {\n    private startTime = 0;\n    private killTime = 0;\n\n    public constructor(args: SceneNodeArgs) {\n        super({\n            width: 1,\n            height: 1,\n            layer: Layer.OVERLAY,\n            ... args\n        });\n    }\n\n    public update(dt: number, time: number): void {\n        if (this.startTime === 0) {\n            this.startTime = time;\n            this.killTime = this.startTime + 5;\n        } else if (time > this.killTime) {\n            super.remove();\n        }\n    }\n\n    public draw(context: CanvasRenderingContext2D): void {\n        context.strokeStyle = \"green\";\n        context.beginPath();\n        context.moveTo(0, 3);\n        context.arc(0, 0, 3, 0, 6.28);\n        context.closePath();\n        context.stroke();\n    }\n}\n","import { EnemyNode } from \"./EnemyNode\";\nimport { Aseprite } from \"../../engine/assets/Aseprite\";\nimport { Direction } from \"../../engine/geom/Direction\";\nimport { ReadonlyVector2 } from \"../../engine/graphics/Vector2\";\nimport { SceneNodeArgs } from \"../../engine/scene/SceneNode\";\nimport { Sound } from \"../../engine/assets/Sound\";\nimport { asset } from \"../../engine/assets/Assets\";\nimport { rnd } from \"../../engine/util/random\";\nimport { Rect } from \"../../engine/geom/Rect\";\nimport { Layer } from \"../constants\";\n\nexport class MonsterNode extends EnemyNode {\n    @asset(\"sprites/monster.aseprite.json\")\n    private static sprite: Aseprite;\n\n    @asset(\"sounds/fx/zombieScream.mp3\")\n    private static readonly monsterSoundAttack: Sound;\n    private attackSound = MonsterNode.monsterSoundAttack.shallowClone();\n\n    @asset(\"sounds/fx/drip.mp3\")\n    private static readonly monsterSoundDamage: Sound;\n    private damageSound = MonsterNode.monsterSoundDamage.shallowClone();\n\n    protected targetPosition: ReadonlyVector2;\n\n    public constructor(args?: SceneNodeArgs) {\n        super({\n            aseprite: MonsterNode.sprite,\n            anchor: Direction.BOTTOM,\n            tag: \"idle\",\n            sourceBounds: new Rect(8, 6, 16, 34),\n            layer: Layer.FOREGROUND,\n            ...args\n        });\n        this.targetPosition = this.getPosition();\n        this.moveAroundAfterChase = true;\n        this.hitpoints = rnd(65, 120) + rnd(rnd(100));\n    }\n\n    public hurt(damage: number, origin: ReadonlyVector2): boolean {\n        this.damageSound.play();\n        return super.hurt(damage, origin);\n    }\n\n    private staySilent() {\n        if (this.isScreaming()) {\n            this.attackSound.stop();\n        }\n    }\n\n    private isScreaming() {\n        return this.attackSound.isPlaying();\n    }\n\n    protected scream() {\n        if (!this.isScreaming()) {\n            this.staySilent();\n            this.attackSound.play();\n        }\n    }\n}\n","import { Color } from \"../../engine/color/Color\";\nimport { RGBColor } from \"../../engine/color/RGBColor\";\nimport { Direction } from \"../../engine/geom/Direction\";\nimport { Polygon2 } from \"../../engine/graphics/Polygon2\";\nimport { Vector2 } from \"../../engine/graphics/Vector2\";\nimport { SceneNode, SceneNodeAspect } from \"../../engine/scene/SceneNode\";\nimport { TiledSceneArgs } from \"../../engine/scene/TiledMapNode\";\nimport { createCanvas, getRenderingContext } from \"../../engine/util/graphics\";\nimport { now } from \"../../engine/util/time\";\nimport { Hyperloop } from \"../Hyperloop\";\nimport { intensifyColor } from \"./LightNode\";\n\nexport class MuzzleFlashNode extends SceneNode<Hyperloop> {\n    private color: Color;\n    private readonly polygon: Polygon2 | null;\n    private readonly intensity: number;\n    private manipulatedIntensity: number;\n    private gradient: CanvasGradient | null = null;\n    private fireTimeStamp: number | null = null;\n\n    public constructor(private duration: number, args?: TiledSceneArgs) {\n        super({ anchor: Direction.TOP_LEFT, showBounds: true, ...args });\n        this.color = args?.tiledObject?.getOptionalProperty(\"color\", \"color\")?.getValue() ?? new RGBColor(1, 0.6, 0.6);\n        this.polygon = args?.tiledObject?.getPolygon() ?? null;\n        this.intensity = args?.tiledObject?.getOptionalProperty(\"intensity\", \"int\")?.getValue() ?? 100;\n        this.manipulatedIntensity = this.intensity;\n        this.updateGradient();\n    }\n\n    private updateGradient(): void {\n        if (this.polygon === null && this.width !== 0 && this.height !== 0) {\n            this.gradient = null;\n        } else {\n            const colors: Color[] = [];\n            const color = this.color.toRGB();\n            const steps = 16;\n            const overshoot = 0.5;\n            for (let step = 0; step < steps; step++) {\n                const p = (1 + overshoot) * (1 - step / steps) ** 8;\n                const col = intensifyColor(color, p);\n                colors.push(col);\n            }\n            colors.push(new RGBColor(0, 0, 0));\n\n            const canvas = createCanvas(8, 8);\n            const ctx = getRenderingContext(canvas, \"2d\");\n            const origin = this.polygon?.vertices[0] ?? new Vector2(0, 0);\n            const intensity = this.polygon == null ? this.manipulatedIntensity / 2 : this.manipulatedIntensity;\n            this.gradient = ctx.createRadialGradient(origin.x, origin.y, 0, origin.x, origin.y, intensity);\n            for (let i = 0, count = colors.length - 1; i <= count; i++) {\n                this.gradient.addColorStop(i / count, colors[i].toString());\n            }\n        }\n    }\n\n    public setColor(color: Color): this {\n        if (this.color !== color) {\n            this.color = color;\n            this.updateGradient();\n            this.invalidate(SceneNodeAspect.RENDERING);\n        }\n        return this;\n    }\n\n    public updateBoundsPolygon(bounds: Polygon2) {\n        if (this.polygon != null) {\n            for (const vertex of this.polygon.vertices) {\n                bounds.addVertex(vertex);\n            }\n        } else {\n            super.updateBoundsPolygon(bounds);\n        }\n    }\n\n    public update(dt: number) {\n        if (this.fireTimeStamp) {\n            const fireProgress = (now() - this.fireTimeStamp) / (this.duration * 1000);\n            if (fireProgress > 0.9) {\n                this.fireTimeStamp = null;\n                return;\n            }\n            this.manipulatedIntensity = this.intensity * (1 - fireProgress);\n            this.updateGradient();\n        }\n    }\n\n    public fire() {\n        this.fireTimeStamp = now();\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (this.fireTimeStamp) {\n            ctx.save();\n            ctx.beginPath();\n            const intensity = this.manipulatedIntensity;\n            const width = this.getWidth();\n            const height = this.getHeight();\n            ctx.fillStyle = this.gradient ?? this.color.toString();\n            if (this.polygon != null) {\n                this.polygon.draw(ctx);\n            } else if (width === 0 && height === 0) {\n                const halfIntensity = intensity / 2;\n                ctx.ellipse(0, 0, halfIntensity, halfIntensity, 0, 0, Math.PI * 2, true);\n            } else {\n                ctx.rect(0, 0, width, height);\n            }\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n}\n","import { Aseprite } from \"../../engine/assets/Aseprite\";\nimport { CharacterNode } from \"./CharacterNode\";\nimport { Direction } from \"../../engine/geom/Direction\";\nimport { EnemyNode } from \"./EnemyNode\";\n\nimport { SceneNodeArgs } from \"../../engine/scene/SceneNode\";\nimport { asset } from \"../../engine/assets/Assets\";\nimport { Rect } from \"../../engine/geom/Rect\";\n\nexport class NpcNode extends CharacterNode {\n    @asset([\n        \"sprites/male.aseprite.json\",\n        \"sprites/female.aseprite.json\",\n        \"sprites/male2.aseprite.json\",\n        \"sprites/male3.aseprite.json\",\n        \"sprites/female2.aseprite.json\",\n        \"sprites/female3.aseprite.json\"\n    ])\n    private static sprites: Aseprite[];\n\n    // Character settings\n    private readonly acceleration = 600;\n    private readonly deceleration = 800;\n    private readonly jumpPower = 295;\n\n    public constructor(spriteIndex: number, args?: SceneNodeArgs) {\n        super({\n            aseprite: NpcNode.sprites[spriteIndex] ? NpcNode.sprites[spriteIndex] : NpcNode.sprites[0],\n            anchor: Direction.BOTTOM,\n            childAnchor: Direction.CENTER,\n            tag: \"idle\",\n            id: \"player\",\n            sourceBounds: new Rect(6, 6, 8, 26),\n            ...args\n        });\n    }\n\n    public getShootingRange(): number {\n        return 1;\n    }\n    public getSpeed(): number {\n        return 1;\n    }\n    public getAcceleration(): number {\n        return this.acceleration;\n    }\n    public getDeceleration(): number {\n        return this.deceleration;\n    }\n    public getJumpPower(): number {\n        return this.jumpPower;\n    }\n\n    public update(dt: number, time: number) {\n        super.update(dt, time);\n    }\n\n\n    public die(): void {\n        super.die();\n    }\n\n\n    public getPersonalEnemies(): EnemyNode[] {\n        return [];\n    }\n\n}\n","import { ReadonlyVector2Like } from \"../../engine/graphics/Vector2\";\nimport { SceneNode, SceneNodeArgs } from \"../../engine/scene/SceneNode\";\nimport { GRAVITY } from \"../constants\";\nimport { Hyperloop } from \"../Hyperloop\";\n\ntype ParticleAppearance = string | HTMLImageElement | HTMLCanvasElement;\n\ntype NumberGenerator = () => number;\n\ntype VectorGenerator = () => ReadonlyVector2Like;\n\ntype ParticleAppearanceGenerator = () => ParticleAppearance;\n\nexport interface ParticleNodeArgs extends SceneNodeArgs {\n    offset?: ReadonlyVector2Like | VectorGenerator;\n    velocity?: ReadonlyVector2Like | VectorGenerator;\n    color?: ParticleAppearance | ParticleAppearanceGenerator;\n    alpha?: number | NumberGenerator;\n    size?: number | NumberGenerator;\n    gravity?: ReadonlyVector2Like | VectorGenerator;\n    lifetime?: number | NumberGenerator;\n    breakFactor?: number;\n    blendMode?: string;\n    alphaCurve?: ValueCurve;\n    sizeCurve?: ValueCurve;\n    angle?: number | NumberGenerator;\n    angleSpeed?: number | NumberGenerator;\n    zIndex?: number;\n    update?: (p: Particle) => void;\n}\n\nexport class ParticleNode extends SceneNode<Hyperloop> {\n    private particles: Particle[];\n    private offsetGenerator: VectorGenerator;\n    private velocityGenerator: VectorGenerator;\n    private colorGenerator: ParticleAppearanceGenerator;\n    private sizeGenerator: NumberGenerator;\n    private gravityGenerator: VectorGenerator;\n    private lifetimeGenerator: NumberGenerator;\n    private alphaGenerator: NumberGenerator;\n    private angleGenerator: NumberGenerator;\n    private angleSpeedGenerator: NumberGenerator;\n    public gravity: ReadonlyVector2Like;\n    public breakFactor: number;\n    private blendMode: string;\n    public alphaCurve: ValueCurve;\n    public sizeCurve: ValueCurve;\n    public zIndex: number;\n    private updateMethod: ((p: Particle) => void) | undefined;\n\n    public constructor(args: ParticleNodeArgs) {\n        super(args);\n        this.particles = [];\n        this.offsetGenerator = toGenerator(args.offset ?? ({x: 0, y: 0}));\n        this.velocityGenerator = toGenerator(args.velocity ?? ({x: 0, y: 0}));\n        this.colorGenerator = toGenerator(args.color ?? \"white\");\n        this.alphaGenerator = toGenerator(args.alpha ?? 1);\n        this.sizeGenerator = toGenerator(args.size ?? 4);\n        this.gravityGenerator = toGenerator(args.gravity ?? {x: 0, y: GRAVITY});\n        this.lifetimeGenerator = toGenerator(args.lifetime ?? 5);\n        this.angleGenerator = toGenerator(args.angle ?? 0);\n        this.angleSpeedGenerator = toGenerator(args.angleSpeed ?? 0);\n        this.gravity = this.gravityGenerator();\n        this.breakFactor = args.breakFactor || 1;\n        this.blendMode = args.blendMode || \"source-over\";\n        this.alphaCurve = args.alphaCurve || valueCurves.constant;\n        this.sizeCurve = args.sizeCurve || valueCurves.constant;\n        this.zIndex = args.zIndex !== undefined ? args.zIndex : 0;\n        this.updateMethod = args.update;\n\n        function toGenerator<tp>(obj: tp | (() => tp)): (() => tp) {\n            if (obj instanceof Function) {\n                return obj;\n            } else {\n                return () => obj;\n            }\n        }\n    }\n\n    public clearParticles(): void {\n        this.particles = [];\n    }\n\n    public emit(count = 1): void {\n        for (let i = 0; i < count; i++) {\n            this.emitSingle();\n        }\n    }\n\n    public emitSingle(): Particle {\n        const v = this.velocityGenerator();\n        const off = this.offsetGenerator();\n        const pos = this.getScenePosition();\n        const particle = new Particle(\n            this,\n            pos.x + off.x,\n            pos.y + off.y,\n            v.x,\n            v.y,\n            this.angleGenerator(),\n            this.angleSpeedGenerator(),\n            this.colorGenerator(),\n            this.sizeGenerator(),\n            this.lifetimeGenerator(),\n            this.alphaGenerator()\n        );\n\n        this.particles.push(particle);\n\n        return particle;\n    }\n\n    public update(dt: number): void {\n        this.gravity = this.gravityGenerator();\n\n        for (let i = this.particles.length - 1; i >= 0; i--) {\n            if (this.particles[i].update(dt)) {\n                this.particles.splice(i, 1);\n            }\n        }\n\n        if (this.updateMethod) {\n            for (const p of this.particles) {\n                this.updateMethod(p);\n            }\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        ctx.globalCompositeOperation = this.blendMode;\n        const pos = this.getScenePosition();\n        ctx.translate(-pos.x, -pos.y);\n        this.particles.forEach(p => p.draw(ctx));\n        ctx.restore();\n    }\n}\n\nexport class Particle {\n    private halfSize: number;\n    private originalLifetime: number;\n    private progress: number = 0;\n\n    constructor(\n        private emitter: ParticleNode,\n        public x: number,\n        public y: number,\n        public vx = 0,\n        public vy = 0,\n        private angle = 0,\n        private angleSpeed = 0,\n        private imageOrColor: ParticleAppearance = \"white\",\n        public readonly size = 4,\n        private lifetime = 1,\n        private alpha = 1\n    ) {\n        this.halfSize = this.size / 2;\n        this.originalLifetime = this.lifetime;\n        this.progress = 0;\n    }\n\n    public update(dt: number): boolean {\n        // Life\n        this.lifetime -= dt;\n\n        if (this.lifetime <= 0) {\n            // Tell parent that it may eliminate this particle\n            return true;\n        } else {\n            this.progress = 1 - (this.lifetime / this.originalLifetime);\n        }\n\n        // Gravity\n        this.vx += this.emitter.gravity.x * dt;\n        this.vy += this.emitter.gravity.y * dt;\n\n        if (this.emitter.breakFactor !== 1) {\n            const factor = this.emitter.breakFactor ** dt;\n            this.vx *= factor;\n            this.vy *= factor;\n        }\n\n        // Movement\n        this.x += this.vx * dt;\n        this.y -= this.vy * dt;\n        this.angle += this.angleSpeed * dt;\n\n        return false;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        ctx.globalAlpha = this.alpha * this.emitter.alphaCurve.get(this.progress);\n        ctx.translate(this.x, this.y);\n\n        if (this.angle) {\n            ctx.rotate(this.angle);\n        }\n\n        if (this.imageOrColor instanceof Object) {\n            // Image\n            const img = this.imageOrColor;\n            const w = ((<any>img).naturalWidth || img.width), h = ((<any>img).naturalHeight || img.height);\n            const sz = Math.max(w, h);\n            ctx.drawImage(img, -this.halfSize, -this.halfSize, this.size * w / sz, this.size * h / sz);\n        } else {\n            // Color\n            ctx.fillStyle = (this.imageOrColor as string);\n            ctx.fillRect(-this.halfSize, -this.halfSize, this.size, this.size);\n        }\n\n        ctx.restore();\n    }\n}\n\nexport class ValueCurve {\n    private mapping: number[] = [];\n\n    constructor(private readonly func: (p: number) => number, private readonly steps = 1023) {\n        for (let i = 0; i <= steps; i++) {\n            this.mapping[i] = func(i / steps);\n        }\n    }\n\n    public get(p: number): number {\n        const i = Math.round(p * this.steps);\n        return this.mapping[i < 0 ? 0 : i > this.steps ? this.steps : i];\n    }\n\n    public getExact(p: number): number {\n        return this.func(p);\n    }\n\n    public invert(): ValueCurve {\n        return new ValueCurve((p) => this.getExact(1 - p), this.steps);\n    }\n\n    public append(otherCurve: ValueCurve, relativeLength = 1): ValueCurve {\n        const total = 1 + relativeLength;\n        const mid = (total - relativeLength) / total;\n        return new ValueCurve((p) => p < mid ? this.getExact(p / mid) :\n                otherCurve.getExact((p - mid) / relativeLength),\n                Math.max(this.steps, otherCurve.steps));\n    }\n}\n\nfunction trapezeFunction(v: number, v1: number = v): ((p: number) => number) {\n    return (p: number) => p < v ? p / v : p > 1 - v1 ? (1 - p) / v1 : 1;\n}\n\nexport const valueCurves = {\n    constant: new ValueCurve((p) => 1, 1), // always 1\n    linear: new ValueCurve((p) => p), // linear 0 to 1\n    trapeze: (v: number = 0.1, v1: number = v) => new ValueCurve(trapezeFunction(v, v1)), // blocky 0 to 1 to 0\n    cos: (v: number = 0.1, v1: number = v) => // smooth 0 to 1 to 0\n            new ValueCurve((p) => 0.5 - 0.5 * Math.cos(Math.PI * trapezeFunction(v, v1)(p))),\n    cubic: new ValueCurve((p) => 3 * p * p - 2 * p * p * p) // smooth 0 to 1\n};\n","import { Aseprite } from \"../../engine/assets/Aseprite\";\nimport { CharacterNode } from \"./CharacterNode\";\nimport { ControllerIntent } from \"../../engine/input/ControllerIntent\";\nimport { Direction } from \"../../engine/geom/Direction\";\nimport { EnemyNode } from \"./EnemyNode\";\nimport { FlashlightNode } from \"./player/FlashlightNode\";\nimport { GameScene } from \"../scenes/GameScene\";\nimport { MonsterNode } from \"./MonsterNode\";\nimport { PlayerArmNode } from \"./player/PlayerArmNode\";\nimport { PlayerLegsNode } from \"./player/PlayerLegsNode\";\nimport { RatNode } from \"./RatNode\";\nimport { SceneNodeArgs } from \"../../engine/scene/SceneNode\";\nimport { ScenePointerMoveEvent } from \"../../engine/scene/events/ScenePointerMoveEvent\";\nimport { Sound } from \"../../engine/assets/Sound\";\nimport { ReadonlyVector2, Vector2 } from \"../../engine/graphics/Vector2\";\nimport { asset } from \"../../engine/assets/Assets\";\nimport { AmmoCounterNode } from \"./player/AmmoCounterNode\";\nimport { BitmapFont } from \"../../engine/assets/BitmapFont\";\nimport { Layer, STANDARD_FONT } from \"../constants\";\nimport { isDev } from \"../../engine/util/env\";\nimport { now, sleep } from \"../../engine/util/time\";\nimport { ParticleNode, valueCurves } from \"./ParticleNode\";\nimport { rnd, rndItem, timedRnd } from \"../../engine/util/random\";\nimport { Rect } from \"../../engine/geom/Rect\";\nimport { MuzzleFlashNode } from \"./MuzzleFlashNode\";\nimport { AmbientPlayerNode } from \"./player/AmbientPlayerNode\";\nimport { TrainNode } from \"./TrainNode\";\nimport { HealthNode } from \"./player/HealthNode\";\nimport { AsepriteNode } from \"../../engine/scene/AsepriteNode\";\nimport { ScenePointerDownEvent } from \"../../engine/scene/events/ScenePointerDownEvent\";\nimport { DeadSpaceSuitNode } from \"./DeadSpaceSuiteNode\";\n\nconst groundColors = [\n    \"#806057\",\n    \"#504336\",\n    \"#3C8376\",\n    \"#908784\"\n];\n\nexport class PlayerNode extends CharacterNode {\n    @asset(STANDARD_FONT)\n    private static font: BitmapFont;\n\n    @asset(\"sounds/fx/wilhelmScream.mp3\")\n    private static readonly dieScream: Sound;\n\n    @asset(\"sounds/fx/footsteps.ogg\")\n    private static readonly footsteps: Sound;\n\n    @asset(\"sounds/fx/dryfire.ogg\")\n    private static readonly dryFireSound: Sound;\n\n    @asset(\"sounds/fx/reload.ogg\")\n    private static readonly reloadSound: Sound;\n\n    @asset(\"sprites/spacesuitbody.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sprites/crosshair.aseprite.json\")\n    private static readonly crossHairSprite: Aseprite;\n\n    private flashLight: FlashlightNode;\n\n    /** The aimingAngle in radians */\n    private aimingAngle = Math.PI / 2;\n    private ammoCounter: AmmoCounterNode;\n    private isReloading = false;\n    private reloadStart: number | null = null;\n    private lastShotTime: number = 0;\n    private shotRecoil = 0.2;\n    private muzzleFlash: MuzzleFlashNode;\n    private health: HealthNode;\n    private get aimingAngleNonNegative(): number {\n        return -this.aimingAngle + Math.PI / 2;\n    }\n    private ammo = 12;\n    private nextShot = 0;\n    private previouslyPressed = 0;\n\n    // Character settings\n    private readonly shootingRange = 250;\n    private readonly speed = 60;\n    private readonly acceleration = 600;\n    private readonly deceleration = 800;\n    private readonly jumpPower = 295;\n    private readonly shotDelay = 0.2;\n    private readonly magazineSize = 12;\n    private readonly reloadDelay = 2200;\n    private readonly timeoutForRecover = 3000;\n    private leftMouseDown = false;\n    private rightMouseDown = false;\n    private lastHitTimestamp = 0;\n\n    private dustParticles: ParticleNode;\n    private crosshairNode: AsepriteNode;\n\n    public constructor(args?: SceneNodeArgs) {\n        super({\n            aseprite: PlayerNode.sprite,\n            anchor: Direction.BOTTOM,\n            childAnchor: Direction.CENTER,\n            tag: \"idle\",\n            id: \"player\",\n            sourceBounds: new Rect(6, 6, 8, 26),\n            cameraTargetOffset: new Vector2(0, -26),\n            ...args\n        });\n        this.removeOnDie = false;\n        this.playerArm = new PlayerArmNode();\n        this.playerLeg = new PlayerLegsNode();\n        this.flashLight = new FlashlightNode();\n        this.muzzleFlash = new MuzzleFlashNode(this.shotRecoil, {y: -3});\n        this.ammoCounter = new AmmoCounterNode({\n            font: PlayerNode.font,\n            anchor: Direction.TOP_RIGHT,\n            layer: Layer.HUD\n        });\n        this.health = new HealthNode({\n            font: PlayerNode.font,\n            anchor: Direction.TOP,\n            layer: Layer.HUD\n        });\n        this.appendChild(this.playerLeg);\n        this.appendChild(this.playerArm);\n        const ambientPlayerLight = new AmbientPlayerNode();\n        this.playerLeg?.appendChild(ambientPlayerLight);\n        this.playerArm?.appendChild(this.flashLight);\n        this.flashLight?.appendChild(this.muzzleFlash);\n        (<any>window)[\"player\"] = this;\n\n        this.dustParticles = new ParticleNode({\n            y: this.getHeight() / 2,\n            velocity: () => ({ x: rnd(-1, 1) * 26, y: rnd(0.7, 1) * 45 }),\n            color: () => rndItem(groundColors),\n            size: rnd(1, 2),\n            gravity: {x: 0, y: -100},\n            lifetime: () => rnd(0.5, 0.8),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        }).appendTo(this);\n\n        this.crosshairNode = new AsepriteNode({\n            aseprite: PlayerNode.crossHairSprite,\n            tag: \"idle\",\n            layer: Layer.HUD\n        });\n    }\n\n    public getShootingRange(): number {\n        return this.shootingRange;\n    }\n\n    public getSpeed(): number {\n        // TODO remove before publishing\n        return this.speed * (this.getScene()?.keyboard.isPressed(\"Shift\") ? 2.4 : 1.2);\n    }\n\n    public getAcceleration(): number {\n        return this.acceleration;\n    }\n\n    public getDeceleration(): number {\n        return this.deceleration;\n    }\n\n    public getJumpPower(): number {\n        return this.jumpPower;\n    }\n\n    public getAmmo(): number {\n        return this.ammo;\n    }\n\n    public getMagazineSize(): number {\n        return this.magazineSize;\n    }\n\n    public getLastShotTime(): number {\n        return this.lastShotTime;\n    }\n\n    public getHitpoints(): number {\n        return this.hitpoints;\n    }\n\n    public update(dt: number, time: number) {\n        super.update(dt, time);\n        if (!this.ammoCounter.isInScene() && isDev()) {\n            const rootNode = this.getGame().getGameScene().rootNode;\n            this.ammoCounter.setX(rootNode.getWidth() - 10);\n            this.ammoCounter.setY(10);\n            this.health.setX(rootNode.getWidth() / 2);\n            this.health.setY(10);\n            rootNode.appendChild(this.ammoCounter);\n            rootNode.appendChild(this.health);\n        }\n        if (!this.isAlive()) {\n            this.setDirection(0);\n            return;\n        }\n        if (this.getParent() instanceof TrainNode) {\n            this.setOpacity(0);\n            const door = this.getGame().getTrainDoorCoordinate();\n            const parent = this.getParent();\n            this.setX(door.x - (parent?.x ?? 0));\n            this.setY(door.y - (parent?.y ?? 0));\n            return;\n        }\n        this.setOpacity(1);\n\n        // Controls\n        const input = this.getScene()!.game.input;\n\n        // Move left/right\n        const direction = (input.currentActiveIntents & ControllerIntent.PLAYER_MOVE_RIGHT ? 1 : 0)\n            - (input.currentActiveIntents & ControllerIntent.PLAYER_MOVE_LEFT ? 1 : 0);\n        this.setDirection(direction);\n        // Jump\n        if (this.isOnGround && this.canInteract(ControllerIntent.PLAYER_JUMP)) {\n            this.jump();\n        }\n        if (this.getTag() === \"walk\") {\n            PlayerNode.footsteps.setLoop(true);\n            PlayerNode.footsteps.play(0.5);\n        } else {\n            PlayerNode.footsteps.stop(0.3);\n        }\n        // Reload\n        if (this.canInteract(ControllerIntent.PLAYER_RELOAD) || this.rightMouseDown) {\n            this.rightMouseDown = false;\n            this.reload();\n        }\n        this.syncArmAndLeg();\n        this.recover();\n        // Shoot\n        if (this.canInteract(ControllerIntent.PLAYER_ACTION) || this.leftMouseDown) {\n            this.leftMouseDown = false;\n            if (time >= this.nextShot && !this.isReloading) {\n                this.shoot();\n                this.nextShot = time + this.shotDelay;\n            }\n        }\n        // Interact\n        if (this.canInteract(ControllerIntent.PLAYER_INTERACT)) {\n            const node = this.getNodeToInteractWith();\n            if (node) {\n                node.interact();\n            }\n        }\n\n        // Spawn random dust particles while walking\n        if (this.isVisible()) {\n            if (this.getTag() === \"walk\") {\n                if (timedRnd(dt, 0.2)) {\n                    this.dustParticles.emit(1);\n                }\n            }\n        }\n        this.updatePreviouslyPressed();\n\n        this.updateCrosshair();\n    }\n\n    public setAmmoToFull() {\n        this.ammo = this.magazineSize;\n    }\n\n    private updatePreviouslyPressed(): void {\n        const input = this.getGame().input;\n        this.previouslyPressed = input.currentActiveIntents;\n    }\n\n    /**\n     * Checks if the given intent is the same as the last intent to prevent auto-key-handling on button being hold.\n     */\n    private canInteract(intent: ControllerIntent): boolean {\n        const input = this.getGame().input;\n        return (this.previouslyPressed & intent) === 0 && (input.currentActiveIntents & intent) !== 0;\n    }\n\n    public shoot(): void {\n        if (this.ammo === 0) {\n            PlayerNode.dryFireSound.stop();\n            PlayerNode.dryFireSound.play();\n        } else if (this.ammo > 0 && !this.isReloading) {\n            this.lastShotTime = now();\n            this.ammo--;\n            this.muzzleFlash.fire();\n            super.shoot(this.aimingAngleNonNegative, 35, this.muzzleFlash.getScenePosition());\n        }\n    }\n\n    public async reload(): Promise<void> {\n        if (this.isReloading || this.ammo === this.magazineSize) {\n            return;\n        }\n        this.isReloading = true;\n        PlayerNode.reloadSound.setLoop(true);\n        PlayerNode.reloadSound.play();\n        await sleep(this.reloadDelay);\n        this.ammo = this.magazineSize;\n        PlayerNode.reloadSound.stop();\n        this.isReloading = false;\n    }\n\n    private syncArmAndLeg(): void {\n        this.playerArm?.transform(c => {\n            if (this.isReloading) {\n                const angleAimRight = 0.15 + Math.PI / 2;\n                const angleAimLeft = -0.15 + Math.PI / 2;\n                if (!this.reloadStart) {\n                    this.reloadStart = now();\n                }\n                const reloadProgress = (now() - this.reloadStart) / this.reloadDelay;\n                let factor = Math.sin(Math.PI * reloadProgress) ** 0.4;\n                factor = 0.5 - 0.5 * Math.cos(Math.PI * factor);\n                if (this.aimingAngle < 0) {\n                    const aimingDiff = this.aimingAngleNonNegative - angleAimRight;\n                    c.setRotation(this.aimingAngleNonNegative - aimingDiff * factor);\n                } else {\n                    const aimingDiff = this.aimingAngleNonNegative - angleAimLeft;\n                    c.setRotation(this.aimingAngleNonNegative - aimingDiff * factor);\n                }\n            } else if (now() - this.lastShotTime < this.shotDelay * 1000) {\n                const shotProgress = (now() - this.lastShotTime) / (this.shotDelay * 1000);\n                if (this.aimingAngle < 0) {\n                    c.setRotation(this.aimingAngleNonNegative + this.shotRecoil * Math.sin(Math.PI * shotProgress));\n                } else {\n                    c.setRotation(this.aimingAngleNonNegative - this.shotRecoil * Math.sin(Math.PI * shotProgress));\n                }\n            } else {\n                this.reloadStart = null;\n                c.setRotation(this.aimingAngleNonNegative);\n            }\n            // Mirror arm vertically\n            if (this.aimingAngle < 0) {\n                c.scaleY(-1);\n            } else {\n                c.scaleY(1);\n            }\n            // look in aiming direction\n            this.setMirrorX(this.aimingAngle < 0);\n            const backwards = this.direction === 1 && this.aimingAngle < 0 || this.direction === -1 && this.aimingAngle >= 0;\n            this.playerLeg?.getAseprite().setDirection(backwards ? \"reverse\" : \"forward\");\n            // Transform flashlight to match scaling and rotation of the arm.\n\n            this.flashLight.transform(f => {\n                if (this.isMirrorX()) {\n                    this.flashLight.setY(-3);\n                    f.setRotation(Math.PI);\n                } else {\n                    this.flashLight.setY(5);\n                    f.setRotation(0);\n                }\n            });\n        });\n        if (this.isJumping) {\n            this.setTag(\"jump\");\n        } else if (this.isFalling) {\n            this.setTag(\"fall\");\n        } else if (this.direction !== 0) {\n            this.setTag(\"walk\");\n        } else {\n            this.setTag(\"idle\");\n        }\n        this.playerLeg?.setMirrorX(this.direction === 0 ? this.isMirrorX() : (this.direction === -1));\n    }\n\n    private recover(): void {\n        if (this.isAlive() && this.hitpoints < 100 && now() - this.lastHitTimestamp > this.timeoutForRecover) {\n            this.hitpoints++;\n        }\n    }\n\n    public hurt(damage: number, origin: ReadonlyVector2): boolean {\n        this.lastHitTimestamp = now();\n        const { centerX, centerY } = this.getSceneBounds();\n        this.emitBlood(centerX, centerY, Math.random() * Math.PI * 2, damage);\n        return super.hurt(damage, origin);\n    }\n\n    public die(): void {\n        super.die();\n        PlayerNode.dieScream.stop();\n        PlayerNode.dieScream.play();\n        // Slow fade out, then play as different character\n        const camera = this.getGame().scenes.getScene(GameScene)?.camera;\n        if (camera) {\n            const fader = camera.fadeToBlack;\n            fader.fadeOut({ duration: 6 });\n            camera.focus(this, {\n                duration: 6,\n                scale: 4,\n                rotation: Math.PI * 2\n            }).then(() => {\n                // Reset camera\n                camera.setZoom(1);\n                camera.setRotation(0);\n                fader.fadeIn({ duration: 3 });\n                new DeadSpaceSuitNode({\n                    x: this.getX(),\n                    y: this.getY(),\n                    layer: this.getLayer(),\n                }).insertBefore(this);\n                // TODO Jump to dialog sequence in train\n                this.getGame().spawnNewPlayer();\n            });\n        }\n    }\n\n    public reset(): void {\n        super.reset();\n        this.ammo = 12;\n    }\n\n    public getPersonalEnemies(): EnemyNode[] {\n        const monsters = this.getScene()?.rootNode.getDescendantsByType(MonsterNode) ?? [];\n        const rats = this.getScene()?.rootNode.getDescendantsByType(RatNode) ?? [];\n        const enemies = [...monsters, ...rats];\n        return enemies.filter(e => e.isAlive());\n    }\n\n    public setDebug(debug: boolean): void {\n        this.debug = debug;\n    }\n\n    private handlePointerMove(event: ScenePointerMoveEvent): void {\n        this.crosshairNode.moveTo(event.getScreenX(), event.getScreenY());\n        this.aimingAngle = new Vector2(event.getX(), event.getY())\n            .sub(this.playerArm ? this.playerArm.getScenePosition() : this.getScenePosition())\n            .getAngle();\n    }\n\n    private handlePointerDown(event: ScenePointerDownEvent): void {\n        if (event.getButton() === 0) {\n            this.leftMouseDown = true;\n            event.onPointerEnd.connect(() => {\n                this.leftMouseDown = false;\n            });\n        } else if (event.getButton() === 2) {\n            this.rightMouseDown = true;\n            event.onPointerEnd.connect(() => {\n                this.rightMouseDown = false;\n            });\n        }\n    }\n\n    protected activate(): void {\n        this.crosshairNode.appendTo(this.getScene()!.rootNode);\n        this.getScene()?.onPointerMove.connect(this.handlePointerMove, this);\n        this.getScene()?.onPointerDown.connect(this.handlePointerDown, this);\n        this.getGame().canvas.style.cursor = \"none\";\n    }\n\n    protected deactivate(): void {\n        this.getGame().canvas.style.cursor = \"\";\n        this.getScene()?.onPointerMove.disconnect(this.handlePointerMove, this);\n        this.getScene()?.onPointerDown.disconnect(this.handlePointerDown, this);\n        this.crosshairNode.remove();\n    }\n\n    protected updateCrosshair(): void {\n        let tag = \"idle\";\n        if (this.isReloading) {\n            tag = \"reload\";\n        } else if (this.ammo === 0) {\n            tag = \"empty\";\n        } else if (this.battlemode) {\n            tag = \"battle\";\n        }\n        this.crosshairNode.setTag(tag);\n    }\n}\n","import { AiState, EnemyNode } from \"./EnemyNode\";\nimport { Aseprite } from \"../../engine/assets/Aseprite\";\nimport { Direction } from \"../../engine/geom/Direction\";\nimport { ReadonlyVector2 } from \"../../engine/graphics/Vector2\";\nimport { SceneNodeArgs } from \"../../engine/scene/SceneNode\";\nimport { Sound } from \"../../engine/assets/Sound\";\nimport { asset } from \"../../engine/assets/Assets\";\nimport { Rect } from \"../../engine/geom/Rect\";\nimport { rnd } from \"../../engine/util/random\";\n\nexport class RatNode extends EnemyNode {\n    @asset(\"sprites/mouse.aseprite.json\")\n    private static sprite: Aseprite;\n\n    @asset(\"sounds/fx/ratSqueak.mp3\")\n    private static readonly ratSoundAttack: Sound;\n    private squeakSound = RatNode.ratSoundAttack.shallowClone();\n\n    protected targetPosition: ReadonlyVector2;\n\n    /** minimum distance between enemy and player to stop escaping */\n    private squaredSafetyDistance = 100 ** 2;\n\n    public constructor(args?: SceneNodeArgs) {\n        super({\n            aseprite: RatNode.sprite,\n            anchor: Direction.BOTTOM,\n            tag: \"idle\",\n            sourceBounds: new Rect(3, 6, 8, 4),\n            ...args\n        });\n        this.updateMoveAroundAnchor();\n        this.setState(AiState.MOVE_AROUND);\n        this.targetPosition = this.getPosition();\n        this.hitpoints = 1;\n    }\n\n    public updateMoveAroundAnchor(position = this.getPosition()): void {\n        this.moveAroundAnchor.setVector(position);\n    }\n\n    protected updateAi(dt: number, time: number) {\n        if (!this.isAlive()) {\n            this.setDirection(0);\n            this.stopSounds();\n            return;\n        }\n        // AI\n        switch (this.state) {\n            case AiState.ALERT:\n                this.updateAlert(time);\n                break;\n            case AiState.MOVE_AROUND:\n                this.updateMoveAround(time);\n                break;\n        }\n    }\n\n    private moveTimeMin = 0.3;\n    private moveTimeMax = 1;\n    private waitTimeMin = 2;\n    private waitTimeMax = 5;\n    private moveDelay = rnd(this.moveTimeMin, this.moveTimeMax);\n    private waitTime = rnd(this.waitTimeMin, this.waitTimeMax);\n\n    protected updateMoveAround(time: number): void {\n        if (this.stopAndWaitTs === 0) {\n            if (this.moveTs + this.moveDelay < time) {\n                this.setDirection(0);\n                this.stopAndWaitTs = time;\n                this.waitTime = rnd(this.waitTimeMin, this.waitTimeMax);\n            }\n        } else if (this.stopAndWaitTs + this.waitTime < time) {\n            this.setDirection(this.getX() >= this.moveAroundAnchor.x ? -1 : 1);\n            this.stopAndWaitTs = 0;\n            this.moveTs = time;\n            this.moveDelay = rnd(this.moveTimeMin, this.moveTimeMax);\n        }\n        if (this.getDistanceToPlayerSquared() < this.squaredSafetyDistance || this.canSeeOrHearPlayer()) {\n            this.escapeDistanceSquared = rnd(this.escapeDistanceMin, this.escapeDistanceMax) ** 2;\n            this.setState(AiState.ALERT);\n            this.squeak();\n        }\n    }\n\n    private escapeDistanceMin = 150;\n    private escapeDistanceMax = 250;\n    private escapeDistanceSquared = rnd(this.escapeDistanceMin, this.escapeDistanceMax) ** 2;\n\n    private updateAlert(time: number): void {\n        const player = this.getPlayer();\n        if (player && this.getDistanceToPlayerSquared() < this.squaredSafetyDistance + this.escapeDistanceSquared) {\n            this.setDirection(this.getX() < player.getX() ? -1 : 1);\n        } else {\n            this.updateMoveAroundAnchor();\n            this.setState(AiState.MOVE_AROUND);\n        }\n    }\n\n    private getDistanceToPlayerSquared(): number {\n        const player = this.getPlayer();\n        if (!player) {\n            return Infinity;\n        }\n        return player.getPosition().getSquareDistance(this.getPosition());\n    }\n\n    private stopSounds(): void {\n        this.squeakSound.stop();\n    }\n\n    private squeak(): void {\n        this.stopSounds();\n        this.squeakSound.play();\n    }\n}\n","import { Aseprite } from \"../../engine/assets/Aseprite\";\nimport { Direction } from \"../../engine/geom/Direction\";\nimport { InteractiveNode } from \"./InteractiveNode\";\nimport { SceneNodeArgs } from \"../../engine/scene/SceneNode\";\nimport { Sound } from \"../../engine/assets/Sound\";\nimport { asset } from \"../../engine/assets/Assets\";\n\nexport interface SwitchNodeArgs extends SceneNodeArgs {\n    onlyOnce?: boolean;\n    onUpdate?: (state: boolean) => boolean | undefined;\n}\n\nexport class SwitchNode extends InteractiveNode {\n    @asset(\"sprites/wallLever.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sounds/fx/breakerSwitch.ogg\")\n    private static readonly clickSound: Sound;\n\n    @asset(\"sounds/fx/stuck.ogg\")\n    private static readonly stuckSound: Sound;\n\n    private turnedOn: boolean = false;\n    private onlyOnce: boolean;\n    private stateChanges = 0;\n    private onUpdate?: (state: boolean) => boolean | undefined;\n\n    public constructor({ onlyOnce = false, onUpdate, ...args }: SwitchNodeArgs) {\n        super({\n            aseprite: SwitchNode.sprite,\n            anchor: Direction.CENTER,\n            tag: \"off\",\n            ...args\n        }, \"Press E to pull lever\");\n        this.onlyOnce = onlyOnce;\n        this.onUpdate = onUpdate;\n    }\n\n    public setOnUpdate(func: (state: boolean) => boolean): void {\n        this.onUpdate = func;\n    }\n\n    public setOnlyOnce(once: boolean): void {\n        this.onlyOnce = once;\n    }\n\n    public interact(): void {\n        if (this.canInteract()) {\n            const newState = !this.turnedOn;\n            if (!this.onUpdate || this.onUpdate(newState) !== false) {\n                SwitchNode.clickSound.stop();\n                SwitchNode.clickSound.play();\n                this.turnedOn = newState;\n                this.setTag(this.turnedOn ? \"on\" : \"off\");\n                console.log(this, this.getTag(), this.turnedOn);\n                this.stateChanges++;\n            } else {\n                // Switch blocked\n                SwitchNode.stuckSound.stop();\n                SwitchNode.stuckSound.play();\n            }\n        }\n    }\n\n    public canInteract(): boolean {\n        return this.stateChanges === 0 || !this.onlyOnce;\n    }\n\n    public getTurnedOn(): boolean {\n        return this.turnedOn;\n    }\n\n    // public draw(context: CanvasRenderingContext2D): void {\n    //     // Render switch\n    //     const offY = 0;\n    //     context.fillStyle = \"#666\";\n    //     context.fillRect(-4, offY - 4, 8, 8);\n    //     context.fillStyle = this.turnedOn ? \"#ff0000\" : \"#603030\";\n    //     context.fillRect(-3, offY - 3, 6, 6);\n\n    //     super.draw(context);\n    // }\n\n}\n","import { asset } from \"../../engine/assets/Assets\";\nimport { Sound } from \"../../engine/assets/Sound\";\nimport { SoundNode, } from \"../../engine/scene/SoundNode\";\nimport { TiledSceneArgs } from \"../../engine/scene/TiledMapNode\";\nimport { Hyperloop } from \"../Hyperloop\";\n\nconst soundAssets = [\n    \"sounds/loops/loop_breathing.mp3\",\n    \"sounds/loops/loop_electronicmotor.mp3\",\n    \"sounds/loops/loop_elektrostatic.mp3\",\n    \"sounds/loops/loop_fan.mp3\",\n    \"sounds/loops/loop_flamethrower.mp3\",\n    \"sounds/loops/loop_flies.mp3\",\n    \"sounds/loops/loop_gas.mp3\",\n    \"sounds/loops/loop_halogen.mp3\",\n    \"sounds/loops/loop_occupied.mp3\",\n    \"sounds/loops/loop_staticRadioSound.mp3\"\n];\nconst soundMapping: {[index: string]: number} = {\n    \"breathing\": 0,\n    \"electronicmotor\": 1,\n    \"elektrostatic\": 2,\n    \"fan\": 3,\n    \"flamethrower\": 4,\n    \"flies\": 5,\n    \"gas\": 6,\n    \"halogen\": 7,\n    \"occupied\": 8,\n    \"staticRadioSound\": 9,\n};\nfunction getAssetIndexForName(name: string): number {\n    return soundMapping[name] ?? -1;\n}\n\nexport class TiledSoundNode extends SoundNode<Hyperloop> {\n    @asset(soundAssets)\n    private static sounds: Sound[];\n\n    public constructor(args?: TiledSceneArgs) {\n        const range = args?.tiledObject?.getOptionalProperty(\"range\", \"float\")?.getValue() ?? 10.0;\n        const intensity = args?.tiledObject?.getOptionalProperty(\"intensity\", \"float\")?.getValue() ?? 1.0;\n        const soundName = args?.tiledObject?.getOptionalProperty(\"sound\", \"string\")?.getValue() ?? \"\";\n\n        const soundAssetIndex = getAssetIndexForName(soundName);\n        let sound: Sound;\n        if (soundAssetIndex !== -1) {\n            sound = TiledSoundNode.sounds[soundAssetIndex].shallowClone();\n        } else {\n            throw new Error(`Sound '${soundName}' could not be loaded`);\n        }\n\n        super({ ...args , range, intensity, sound});\n    }\n}\n","import { Aseprite } from \"../../engine/assets/Aseprite\";\nimport { asset } from \"../../engine/assets/Assets\";\nimport { RGBColor } from \"../../engine/color/RGBColor\";\nimport { Direction } from \"../../engine/geom/Direction\";\nimport { AsepriteNode } from \"../../engine/scene/AsepriteNode\";\nimport { SceneNodeArgs } from \"../../engine/scene/SceneNode\";\nimport { clamp } from \"../../engine/util/math\";\nimport { Layer } from \"../constants\";\nimport { Hyperloop } from \"../Hyperloop\";\nimport { LightNode } from \"./LightNode\";\n\nexport class TrainNode extends AsepriteNode<Hyperloop> {\n    @asset(\"sprites/hyperloopInt.aseprite.json\")\n    private static sprite: Aseprite;\n    @asset(\"sprites/hyperloopExt.aseprite.json\")\n    private static foregroundSprite: Aseprite;\n\n    public foreground: AsepriteNode<Hyperloop>;\n\n    private interiorLight: LightNode;\n    private opacitySpeed = 1;\n    private visibility = 1;\n    private targetOpacity = 0;\n\n    public constructor(args?: SceneNodeArgs) {\n        super({\n            aseprite: TrainNode.sprite,\n            anchor: Direction.BOTTOM,\n            ...args,\n            layer: Layer.BACKGROUND\n        });\n        this.interiorLight = new LightNode({\n            x: -200,\n            y: -30,\n            width: 390,\n            height: 80,\n            layer: Layer.LIGHT\n        });\n        this.interiorLight.setColor(new RGBColor(255, 255,255));\n        this.interiorLight.appendTo(this);\n        this.foreground = new AsepriteNode({\n            aseprite: TrainNode.foregroundSprite,\n            anchor: Direction.CENTER,\n            layer: Layer.DEFAULT\n        });\n        this.appendChild(this.foreground);\n        this.foreground.setOpacity(Infinity);\n        (window as any).train = this;\n    }\n\n    public update(dt: number, time: number): void {\n        if (this.visibility !== this.targetOpacity) {\n            const direction = this.targetOpacity > this.visibility ? 1 : -1;\n            this.visibility = clamp(this.visibility + dt * this.opacitySpeed * direction, 0, 1);\n            this.foreground.setOpacity(this.visibility);\n            this.interiorLight.setOpacity(1 - this.visibility);\n        }\n    }\n\n    public showInner(): void {\n        this.targetOpacity = 0;\n    }\n\n    public hideInner(): void {\n        this.targetOpacity = 1;\n    }\n}\n","import { Color } from \"../../../engine/color/Color\";\nimport { RGBColor } from \"../../../engine/color/RGBColor\";\nimport { Direction } from \"../../../engine/geom/Direction\";\nimport { Vector2 } from \"../../../engine/graphics/Vector2\";\nimport { SceneNode, SceneNodeAspect } from \"../../../engine/scene/SceneNode\";\nimport { TiledSceneArgs } from \"../../../engine/scene/TiledMapNode\";\nimport { createCanvas, getRenderingContext } from \"../../../engine/util/graphics\";\nimport { Layer } from \"../../constants\";\nimport { Hyperloop } from \"../../Hyperloop\";\nimport { intensifyColor } from \"../LightNode\";\n\nexport class AmbientPlayerNode extends SceneNode<Hyperloop> {\n    private color: Color;\n    private readonly intensity: number;\n    private gradient: CanvasGradient | null = null;\n\n    public constructor(args?: TiledSceneArgs) {\n        super({\n            anchor: Direction.CENTER,\n            id: \"flashlight\",\n            layer: Layer.LIGHT,\n            ...args\n        });\n        this.color = args?.tiledObject?.getOptionalProperty(\"color\", \"color\")?.getValue() ?? new RGBColor(0.2, 0.3, 0.2);\n        this.intensity = args?.tiledObject?.getOptionalProperty(\"intensity\", \"int\")?.getValue() ?? 250;\n        this.updateGradient();\n    }\n\n    private updateGradient(): void {\n        const colors: Color[] = [];\n        const color = this.color.toRGB();\n        const steps = 16;\n        const overshoot = 0.5;\n        for (let step = 0; step < steps; step++) {\n            const p = (1 + overshoot) * (1 - step / steps) ** 8;\n            const col = intensifyColor(color, p);\n            colors.push(col);\n        }\n        colors.push(new RGBColor(0, 0, 0));\n\n        const canvas = createCanvas(8, 8);\n        const ctx = getRenderingContext(canvas, \"2d\");\n        const origin = new Vector2(0, 0);\n        const intensity = this.intensity;\n        this.gradient = ctx.createRadialGradient(origin.x, origin.y, 0, origin.x, origin.y, intensity);\n        for (let i = 0, count = colors.length - 1; i <= count; i++) {\n            this.gradient.addColorStop(i / count, colors[i].toString());\n        }\n    }\n\n    public setColor(color: Color): this {\n        if (this.color !== color) {\n            this.color = color;\n            this.updateGradient();\n            this.invalidate(SceneNodeAspect.RENDERING);\n        }\n        return this;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        ctx.beginPath();\n        const intensity = this.intensity;\n        ctx.fillStyle = this.gradient ?? this.color.toString();\n        const halfIntensity = intensity / 2;\n        ctx.ellipse(0, 0, halfIntensity, halfIntensity, 0, 0, Math.PI * 2, true);\n        ctx.fill();\n        ctx.restore();\n    }\n}\n","import { TextNode } from \"../../../engine/scene/TextNode\";\nimport { Hyperloop } from \"../../Hyperloop\";\n\nexport class AmmoCounterNode extends TextNode<Hyperloop> {\n\n    public update(dt: number, time: number) {\n        super.update(dt, time);\n        this.setText(`${this.getGame().getPlayer().getAmmo()} | ${this.getGame().getPlayer().getMagazineSize()}`);\n    }\n}\n","\nimport { Direction } from \"../../../engine/geom/Direction\";\nimport { SceneNode, SceneNodeArgs } from \"../../../engine/scene/SceneNode\";\nimport { Layer } from \"../../constants\";\nimport { Hyperloop } from \"../../Hyperloop\";\nimport { PlayerNode } from \"../PlayerNode\";\n\nexport class FlashlightNode extends SceneNode<Hyperloop> {\n    private static image = FlashlightNode.generateImage(200, 100);\n\n    public constructor(private randomRotate?: boolean, args?: SceneNodeArgs) {\n        super({\n            anchor: Direction.CENTER,\n            id: \"flashlight\",\n            layer: Layer.LIGHT,\n            ...args\n        });\n    }\n\n    public draw(context: CanvasRenderingContext2D): void {\n        context.save();\n        const player = this.getPlayer();\n        if (player && player.isMirrorX()) {\n            context.scale(-1, 1);\n        }\n        if (this.randomRotate) {\n            const t = Date.now() * 0.002;\n            const randomAngle = Math.PI * 0.04 * (Math.sin(t * 0.5) + 0.5 * Math.sin(t * 0.84) + 0.3 * Math.sin(t * 0.941));\n            context.rotate(randomAngle);\n        }\n        context.drawImage(FlashlightNode.image, 0, -54);\n        context.restore();\n    }\n\n    private static generateImage(width: number, height: number): HTMLImageElement {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n        const imageData = ctx.getImageData(0, 0, width, height);\n        const data = imageData.data;\n        const ymid = height / 2;\n        for (let y = 0; y < height; y++) {\n            const dy = Math.abs(y - ymid);\n            for (let x = 0; x < width; x++) {\n                const fx = x / width;\n                const p = 4 * (x + width * y);\n                const span = ymid * fx;\n                let c = 0;\n                if (dy < span) {\n                    const lightY = (0.5 - 0.5 * Math.cos(Math.PI * (1 - dy / span))) ** 0.5;\n                    const lightX = (fx < 0.25 ? 0.5 - 0.5 * Math.cos(Math.PI * fx / 0.25) : ((1 - fx) / 0.75) ** 0.7);\n                    c = 255 * lightX * lightY;\n                }\n                data[p] = data[p + 1] = data[p + 2] = c;\n                data[p + 3] = 255;\n            }\n        }\n        ctx.putImageData(imageData, 0, 0);\n        const img = new Image();\n        img.src = canvas.toDataURL();\n        return img;\n    }\n\n    public getPlayer(): PlayerNode | null {\n        let node = this.getParent();\n        while (node && !(node instanceof PlayerNode)) {\n            node = node.getParent();\n        }\n        return node ?? null;\n    }\n}\n","import { Aseprite } from \"../../../engine/assets/Aseprite\";\nimport { asset } from \"../../../engine/assets/Assets\";\nimport { Direction } from \"../../../engine/geom/Direction\";\nimport { Rect } from \"../../../engine/geom/Rect\";\nimport { AsepriteNode } from \"../../../engine/scene/AsepriteNode\";\nimport { SceneNodeArgs } from \"../../../engine/scene/SceneNode\";\nimport { Hyperloop } from \"../../Hyperloop\";\n\nexport class PlayerArmNode extends AsepriteNode<Hyperloop> {\n    @asset(\"sprites/spacesuitarm.aseprite.json\")\n    private static sprite: Aseprite;\n    // public flashlight: FlashlightNode;\n\n    public constructor(args?: SceneNodeArgs) {\n        super({\n            aseprite: PlayerArmNode.sprite,\n            anchor: Direction.LEFT,\n            childAnchor: Direction.TOP_RIGHT,\n            tag: \"idle\",\n            id: \"playerarm\",\n            y: -2,\n            sourceBounds: new Rect(0, 5, 12, 3),\n            ...args\n        });\n    }\n}\n","import { Aseprite } from \"../../../engine/assets/Aseprite\";\nimport { asset } from \"../../../engine/assets/Assets\";\nimport { Direction } from \"../../../engine/geom/Direction\";\nimport { Rect } from \"../../../engine/geom/Rect\";\nimport { AsepriteNode } from \"../../../engine/scene/AsepriteNode\";\nimport { SceneNodeArgs } from \"../../../engine/scene/SceneNode\";\nimport { Hyperloop } from \"../../Hyperloop\";\n\nexport class PlayerLegsNode extends AsepriteNode<Hyperloop> {\n    @asset(\"sprites/spacesuitlegs.aseprite.json\")\n    private static sprite: Aseprite;\n\n    public constructor(args?: SceneNodeArgs) {\n        super({\n            aseprite: PlayerLegsNode.sprite,\n            anchor: Direction.CENTER,\n            tag: \"idle\",\n            id: \"playerlegs\",\n            sourceBounds: new Rect(10, 0, 0, 0),\n            ...args\n        });\n    }\n}\n","import { Hyperloop } from \"../Hyperloop\";\nimport { Scene } from \"../../engine/scene/Scene\";\nimport { PlayerNode } from \"../nodes/PlayerNode\";\nimport { asset } from \"../../engine/assets/Assets\";\nimport { TiledMap } from \"../../engine/tiled/TiledMap\";\nimport { TiledMapNode } from \"../../engine/scene/TiledMapNode\";\nimport { CollisionNode } from \"../nodes/CollisionNode\";\nimport { TrainNode } from \"../nodes/TrainNode\";\nimport { LightNode } from \"../nodes/LightNode\";\nimport { SwitchNode } from \"../nodes/SwitchNode\";\nimport { GAME_HEIGHT, GAME_WIDTH, Layer, STANDARD_FONT } from \"../constants\";\nimport { CameraLimitNode } from \"../nodes/CameraLimitNode\";\nimport { DoorNode } from \"../nodes/DoorNode\";\nimport { ScenePointerDownEvent } from \"../../engine/scene/events/ScenePointerDownEvent\";\nimport { isDev } from \"../../engine/util/env\";\nimport { BitmapFont } from \"../../engine/assets/BitmapFont\";\nimport { FpsCounterNode } from \"../../engine/scene/FpsCounterNode\";\nimport { Direction } from \"../../engine/geom/Direction\";\nimport { MonsterNode } from \"../nodes/MonsterNode\";\nimport { RatNode } from \"../nodes/RatNode\";\nimport { CorpseNode } from \"../nodes/CorpseNode\";\nimport { FuseboxNode } from \"../nodes/FuseboxNode\";\nimport { TiledSoundNode } from \"../nodes/TiledSoundNode\";\nimport { FadeToBlackTransition } from \"../../engine/transitions/FadeToBlackTransition\";\nimport { SpawnNode } from \"../nodes/SpawnNode\";\nimport { TriggerNode } from \"../nodes/TriggerNode\";\nimport { DeadSpaceSuitNode } from \"../nodes/DeadSpaceSuiteNode\";\n\nexport class GameScene extends Scene<Hyperloop> {\n    @asset(STANDARD_FONT)\n    private static font: BitmapFont;\n\n    @asset(\"map/hyperloopMap.tiledmap.json\")\n    private static map: TiledMap;\n\n    private debugMode: boolean = false;\n\n    private mapNode = new TiledMapNode<Hyperloop>({ map: GameScene.map, objects: {\n        \"collision\": CollisionNode,\n        \"player\": PlayerNode,\n        \"enemy\": MonsterNode,\n        \"rat\": RatNode,\n        \"train\": TrainNode,\n        \"light\": LightNode,\n        \"cameraLimit\": CameraLimitNode,\n        \"door\": DoorNode,\n        \"corpse\": CorpseNode,\n        \"powerswitch\": SwitchNode,\n        \"fusebox\": FuseboxNode,\n        \"sound\": TiledSoundNode,\n        \"enemySpawn\": SpawnNode,\n        \"trigger\": TriggerNode,\n        \"deadspacesuit\": DeadSpaceSuitNode\n    }});\n\n    public setup() {\n        this.inTransition = new FadeToBlackTransition({ duration: 2, delay: 1 });\n        this.mapNode.moveTo(0, 0).appendTo(this.rootNode).transform(m => m.scale(1));\n        const player = this.mapNode.getDescendantById(\"Player\");\n        this.camera.setFollow(player);\n        this.setLightLayers([ Layer.LIGHT ]);\n        this.setHudLayers([ Layer.HUD ]);\n\n        // const door = new DoorNode();\n        // door.moveTo(1040, 380).setLocked(true).appendTo(this.mapNode);\n        // new SwitchNode({ onlyOnce: false, onUpdate: (state) => door.setLocked(!state) }).moveTo(1130, 380).appendTo(this.mapNode);\n        // new SwitchNode({ onlyOnce: true }).moveTo(250, 380).appendTo(this.mapNode);\n        // Test enemies\n        // new MonsterNode().moveTo(2400, 360).appendTo(this.mapNode);\n        // new MonsterNode().moveTo(2500, 360).appendTo(this.mapNode);\n        // new MonsterNode().moveTo(2800, 360).appendTo(this.mapNode);\n\n        if (isDev()) {\n            this.rootNode.appendChild(new FpsCounterNode({\n                font: GameScene.font,\n                anchor: Direction.TOP_LEFT,\n                x: 10,\n                y: 10,\n                layer: Layer.HUD\n            }));\n        }\n\n        setTimeout(() => {\n            this.game.setupScene();\n        });\n    }\n\n    public cleanup() {\n        this.rootNode.clear();\n    }\n\n    public activate() {\n        if (isDev()) {\n            this.game.keyboard.onKeyDown.connect(this.handleKeyDown, this);\n            this.game.keyboard.onKeyUp.connect(this.handleKeyUp, this);\n        }\n    }\n\n    public deactivate() {\n        if (isDev()) {\n            this.game.keyboard.onKeyDown.disconnect(this.handleKeyDown, this);\n            this.game.keyboard.onKeyUp.disconnect(this.handleKeyUp, this);\n        }\n    }\n\n    private handleKeyDown(event: KeyboardEvent): void {\n        if (event.key === \"Tab\") {\n            if (!event.repeat) {\n                this.enterDebugMode();\n            }\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    private handleKeyUp(event: KeyboardEvent): void {\n        if (event.key === \"Tab\") {\n            if (!event.repeat) {\n                this.leaveDebugMode();\n            }\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    private enterDebugMode(): void {\n        if (!this.debugMode) {\n            this.debugMode = true;\n            const bounds = this.mapNode.getSceneBounds();\n            const scale = Math.min(GAME_WIDTH / bounds.width, GAME_HEIGHT / bounds.height);\n            this.camera.setFollow(null).setLimits(this.mapNode.getBounds().toRect()).moveTo(bounds.centerX, bounds.centerY).setZoom(scale);\n            this.onPointerDown.connect(this.handleTeleportClick, this);\n        }\n    }\n\n    public leaveDebugMode(): void {\n        if (this.debugMode) {\n            const player = this.mapNode.getDescendantById(\"Player\");\n            if (player != null) {\n                this.camera.setFollow(player).setZoom(1);\n            }\n            this.onPointerDown.disconnect(this.handleTeleportClick, this);\n            this.debugMode = false;\n        }\n    }\n\n    private handleTeleportClick(event: ScenePointerDownEvent): void {\n        const player = this.mapNode.getDescendantById(\"Player\");\n        if (player != null) {\n            player.moveTo(event.getX(), event.getY());\n        }\n    }\n}\n","import { Hyperloop } from \"../Hyperloop\";\nimport { Scene } from \"../../engine/scene/Scene\";\nimport { ProgressBarNode } from \"../../engine/scene/ProgressBarNode\";\nimport { TitleScene } from \"./TitleScene\";\nimport { FadeTransition } from \"../../engine/transitions/FadeTransition\";\n\nexport class LoadingScene extends Scene<Hyperloop> {\n    private progressBar!: ProgressBarNode;\n\n    public setup(): void {\n        this.outTransition = new FadeTransition();\n        this.progressBar = new ProgressBarNode({\n            x: this.game.width >> 1,\n            y: this.game.height >> 1\n        }).appendTo(this.rootNode);\n    }\n\n    public cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    public async activate(): Promise<void> {\n        this.game.assets.load(this.updateProgress.bind(this)).then(() => {\n            this.game.scenes.setScene(TitleScene);\n        });\n    }\n\n    private updateProgress(total: number, loaded: number): void {\n        if (loaded < total) {\n            this.progressBar.setProgress(loaded / total);\n        } else {\n            this.progressBar.remove();\n        }\n    }\n}\n","import { Hyperloop } from \"../Hyperloop\";\nimport { Scene } from \"../../engine/scene/Scene\";\nimport { asset } from \"../../engine/assets/Assets\";\nimport { Direction } from \"../../engine/geom/Direction\";\nimport { ImageNode } from \"../../engine/scene/ImageNode\";\nimport { GameScene } from \"./GameScene\";\nimport { ControllerIntent } from \"../../engine/input/ControllerIntent\";\nimport { ControllerEvent } from \"../../engine/input/ControllerEvent\";\nimport { FadeToBlackTransition } from \"../../engine/transitions/FadeToBlackTransition\";\nimport { MusicManager } from \"../MusicManager\";\nimport { FadeTransition } from \"../../engine/transitions/FadeTransition\";\nimport { GAME_HEIGHT, GAME_WIDTH } from \"../constants\";\n\nexport class TitleScene extends Scene<Hyperloop> {\n    @asset(\"images/title-image.png\")\n    private static titleImage: HTMLImageElement;\n\n    @asset(\"images/start-overlay.png\")\n    private static overlayImage: HTMLImageElement;\n\n    private imageNode: ImageNode = new ImageNode({ image: TitleScene.titleImage, anchor: Direction.TOP_LEFT});\n    private overlayImageNode: ImageNode = new ImageNode({ image: TitleScene.overlayImage, anchor: Direction.BOTTOM});\n\n    public setup() {\n        this.inTransition = new FadeTransition();\n        this.outTransition = new FadeToBlackTransition({ duration: 0.5, exclusive: true });\n        this.imageNode.appendTo(this.rootNode);\n        this.overlayImageNode.moveTo(GAME_WIDTH / 2, GAME_HEIGHT - 20).appendTo(this.rootNode);\n\n        MusicManager.getInstance().loopTrack(0);\n    }\n\n    public cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    public startGame (): void {\n        this.game.scenes.setScene(GameScene);\n    }\n\n    public activate(): void {\n        this.game.input.onButtonPress.connect(this.handleButton, this);\n    }\n\n    public deactivate(): void {\n        this.game.input.onButtonPress.disconnect(this.handleButton, this);\n    }\n\n    private handleButton(event: ControllerEvent): void {\n        if (event.intents & ControllerIntent.CONFIRM) {\n            this.startGame();\n        }\n    }\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}